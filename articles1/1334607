Path: news.gmane.org!not-for-mail
From: Chandrabhanu Mahapatra <cmahapatra@ti.com>
Newsgroups: gmane.linux.kernel,gmane.linux.drivers.devicetree
Subject: [PATCH V1 2/3] gpio/pca953x: increase variables size to support 24 bit of data
Date: Sat, 28 Jul 2012 11:37:55 +0530
Lines: 83
Approved: news@gmane.org
Message-ID: <d22b134ca3d86a37a0a54484ad473d7dfe151529.1343026861.git.cmahapatra@ti.com>
References: <cover.1341925681.git.cmahapatra@ti.com> <cover.1343026861.git.cmahapatra@ti.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain
X-Trace: dough.gmane.org 1343455869 19599 80.91.229.3 (28 Jul 2012 06:11:09 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 28 Jul 2012 06:11:09 +0000 (UTC)
Cc: <linux-kernel@vger.kernel.org>,
	<devicetree-discuss@lists.ozlabs.org>, <leed.aguilar@ti.com>,
	Chandrabhanu Mahapatra <cmahapatra@ti.com>
To: <linus.walleij@stericsson.com>, <grant.likely@secretlab.ca>,
	<rob.herring@calxeda.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Jul 28 08:11:08 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sv0Ev-0008Qt-ED
	for glk-linux-kernel-3@plane.gmane.org; Sat, 28 Jul 2012 08:11:01 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752431Ab2G1GKy (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sat, 28 Jul 2012 02:10:54 -0400
Original-Received: from bear.ext.ti.com ([192.94.94.41]:60089 "EHLO bear.ext.ti.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751259Ab2G1GKx (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Sat, 28 Jul 2012 02:10:53 -0400
Original-Received: from dlelxv30.itg.ti.com ([172.17.2.17])
	by bear.ext.ti.com (8.13.7/8.13.7) with ESMTP id q6S6Aknu003853;
	Sat, 28 Jul 2012 01:10:46 -0500
Original-Received: from DFLE72.ent.ti.com (dfle72.ent.ti.com [128.247.5.109])
	by dlelxv30.itg.ti.com (8.13.8/8.13.8) with ESMTP id q6S6AkOH003105;
	Sat, 28 Jul 2012 01:10:46 -0500
Original-Received: from dlelxv23.itg.ti.com (172.17.1.198) by dfle72.ent.ti.com
 (128.247.5.109) with Microsoft SMTP Server id 14.1.323.3; Sat, 28 Jul 2012
 01:10:46 -0500
Original-Received: from legion.dal.design.ti.com (legion.dal.design.ti.com
 [128.247.22.53])	by dlelxv23.itg.ti.com (8.13.8/8.13.8) with ESMTP id
 q6S6Akwj012690;	Sat, 28 Jul 2012 01:10:46 -0500
Original-Received: from localhost (uda0131936.apr.dhcp.ti.com [172.24.136.162])	by
 legion.dal.design.ti.com (8.11.7p1+Sun/8.11.7) with ESMTP id q6S6Ahr23630;
	Sat, 28 Jul 2012 01:10:43 -0500 (CDT)
X-Mailer: git-send-email 1.7.10
In-Reply-To: <cover.1343026861.git.cmahapatra@ti.com>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1334607 gmane.linux.drivers.devicetree:18725
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334607>

From: Leed Aguilar <leed.aguilar@ti.com>

Increase variable size from u16 to u32 to allocate 24 bit of data required for
the TCA6424 I/O expander device type.

Signed-off-by: Leed Aguilar <leed.aguilar@ti.com>
Signed-off-by: Chandrabhanu Mahapatra <cmahapatra@ti.com>
---
 drivers/gpio/gpio-pca953x.c |   28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/drivers/gpio/gpio-pca953x.c b/drivers/gpio/gpio-pca953x.c
index af7024f..c3ca7d8 100644
--- a/drivers/gpio/gpio-pca953x.c
+++ b/drivers/gpio/gpio-pca953x.c
@@ -78,10 +78,10 @@ struct pca953x_chip {
 
 #ifdef CONFIG_GPIO_PCA953X_IRQ
 	struct mutex irq_lock;
-	uint16_t irq_mask;
-	uint16_t irq_stat;
-	uint16_t irq_trig_raise;
-	uint16_t irq_trig_fall;
+	u32 irq_mask;
+	u32 irq_stat;
+	u32 irq_trig_raise;
+	u32 irq_trig_fall;
 	int	 irq_base;
 #endif
 
@@ -349,8 +349,8 @@ static void pca953x_irq_bus_lock(struct irq_data *d)
 static void pca953x_irq_bus_sync_unlock(struct irq_data *d)
 {
 	struct pca953x_chip *chip = irq_data_get_irq_chip_data(d);
-	uint16_t new_irqs;
-	uint16_t level;
+	u32 new_irqs;
+	u32 level;
 
 	/* Look for any newly setup interrupt */
 	new_irqs = chip->irq_trig_fall | chip->irq_trig_raise;
@@ -368,8 +368,8 @@ static void pca953x_irq_bus_sync_unlock(struct irq_data *d)
 static int pca953x_irq_set_type(struct irq_data *d, unsigned int type)
 {
 	struct pca953x_chip *chip = irq_data_get_irq_chip_data(d);
-	uint16_t level = d->irq - chip->irq_base;
-	uint16_t mask = 1 << level;
+	u32 level = d->irq - chip->irq_base;
+	u32 mask = 1 << level;
 
 	if (!(type & IRQ_TYPE_EDGE_BOTH)) {
 		dev_err(&chip->client->dev, "irq %d: unsupported type %d\n",
@@ -399,12 +399,12 @@ static struct irq_chip pca953x_irq_chip = {
 	.irq_set_type		= pca953x_irq_set_type,
 };
 
-static uint16_t pca953x_irq_pending(struct pca953x_chip *chip)
+static u32 pca953x_irq_pending(struct pca953x_chip *chip)
 {
 	u32 cur_stat;
-	uint16_t old_stat;
-	uint16_t pending;
-	uint16_t trigger;
+	u32 old_stat;
+	u32 pending;
+	u32 trigger;
 	int ret, offset = 0;
 
 	switch (chip->chip_type) {
@@ -440,8 +440,8 @@ static uint16_t pca953x_irq_pending(struct pca953x_chip *chip)
 static irqreturn_t pca953x_irq_handler(int irq, void *devid)
 {
 	struct pca953x_chip *chip = devid;
-	uint16_t pending;
-	uint16_t level;
+	u32 pending;
+	u32 level;
 
 	pending = pca953x_irq_pending(chip);
 
-- 
1.7.10

