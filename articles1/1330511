Path: news.gmane.org!not-for-mail
From: "Rafael J. Wysocki" <rjw@sisk.pl>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 1/1 v2] Honor state disabling in the cpuidle ladder governor
Date: Thu, 19 Jul 2012 21:30:20 +0200
Lines: 91
Approved: news@gmane.org
Message-ID: <201207192130.20520.rjw@sisk.pl>
References: <201207192042.57935.rjw@sisk.pl> <20120719185212.184458166@osadl.org> <20120719190740.215034590@osadl.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: Text/Plain;
  charset="iso-8859-2"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1342725894 31178 80.91.229.3 (19 Jul 2012 19:24:54 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 19 Jul 2012 19:24:54 +0000 (UTC)
Cc: Deepthi Dharwar <deepthi@linux.vnet.ibm.com>,
	Len Brown <len.brown@intel.com>, Kevin Hilman <khilman@ti.com>,
	Thomas Gleixner <tglx@linutronix.de>,
	LKML <linux-kernel@vger.kernel.org>,
	Linux PM mailing list <linux-pm@vger.kernel.org>
To: Carsten Emde <C.Emde@osadl.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 19 21:24:52 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SrwLD-0006u8-3e
	for glk-linux-kernel-3@plane.gmane.org; Thu, 19 Jul 2012 21:24:51 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751466Ab2GSTYm (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 19 Jul 2012 15:24:42 -0400
Original-Received: from ogre.sisk.pl ([193.178.161.156]:48541 "EHLO ogre.sisk.pl"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751065Ab2GSTYl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 19 Jul 2012 15:24:41 -0400
Original-Received: from localhost (localhost.localdomain [127.0.0.1])
	by ogre.sisk.pl (Postfix) with ESMTP id B0C961D8829;
	Thu, 19 Jul 2012 21:20:38 +0200 (CEST)
Original-Received: from ogre.sisk.pl ([127.0.0.1])
 by localhost (ogre.sisk.pl [127.0.0.1]) (amavisd-new, port 10024) with ESMTP
 id 22374-07; Thu, 19 Jul 2012 21:20:28 +0200 (CEST)
Original-Received: from ferrari.rjw.lan (62-121-64-87.home.aster.pl [62.121.64.87])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by ogre.sisk.pl (Postfix) with ESMTP id 7B8A21D86A4;
	Thu, 19 Jul 2012 21:20:28 +0200 (CEST)
User-Agent: KMail/1.13.6 (Linux/3.5.0-rc5+; KDE/4.6.0; x86_64; ; )
In-Reply-To: <20120719190740.215034590@osadl.org>
X-Virus-Scanned: amavisd-new at ogre.sisk.pl using MkS_Vir for Linux
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330511
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330511>

On Thursday, July 19, 2012, Carsten Emde wrote:
> There are two cpuidle governors ladder and menu. While the ladder
> governor is always available, if CONFIG_CPU_IDLE is selected, the
> menu governor additionally requires CONFIG_NO_HZ.
> 
> A particular C state can be disabled by writing to the sysfs file
> /sys/devices/system/cpu/cpuN/cpuidle/stateN/disable, but this mechanism
> is only implemented in the menu governor. Thus, in a system where
> CONFIG_NO_HZ is not selected, the ladder governor becomes default and
> always will walk through all sleep states - irrespective of whether the
> C state was disabled via sysfs or not. The only way to select a specific
> C state was to write the related latency to /dev/cpu_dma_latency and
> keep the file open as long as this setting was required - not very
> practical and not suitable for setting a single core in an SMP system.
> 
> With this patch, the ladder governor only will promote to the next
> C state, if it has not been disabled, and it will demote, if the
> current C state was disabled.
> 
> Note that the patch does not make the setting of the sysfs variable
> "disable" coherent, i.e. if one is disabling a light state, then all
> deeper states are disabled as well, but the "disable" variable does not
> reflect it. Likewise, if one enables a deep state but a lighter state
> still is disabled, then this has no effect. A related section has been
> added to the documentation.
> 
> Signed-off-by: Carsten Emde <C.Emde@osadl.org>

Your patch doesn't seem to take this linux-next commit:

http://git.kernel.org/?p=linux/kernel/git/rafael/linux-pm.git;a=commit;h=dc7fd275ae60ef8edf952aff2a62462f5d892fd4

into account, does it?

Rafael


> ---
>  Documentation/cpuidle/sysfs.txt    |   10 +++++++++-
>  drivers/cpuidle/governors/ladder.c |    4 +++-
>  2 files changed, 12 insertions(+), 2 deletions(-)
> 
> Index: linux-3.4.4-rt14-rc2-64/Documentation/cpuidle/sysfs.txt
> ===================================================================
> --- linux-3.4.4-rt14-rc2-64.orig/Documentation/cpuidle/sysfs.txt
> +++ linux-3.4.4-rt14-rc2-64/Documentation/cpuidle/sysfs.txt
> @@ -76,9 +76,17 @@ total 0
>  
>  
>  * desc : Small description about the idle state (string)
> -* disable : Option to disable this idle state (bool)
> +* disable : Option to disable this idle state (bool) -> see note below
>  * latency : Latency to exit out of this idle state (in microseconds)
>  * name : Name of the idle state (string)
>  * power : Power consumed while in this idle state (in milliwatts)
>  * time : Total time spent in this idle state (in microseconds)
>  * usage : Number of times this state was entered (count)
> +
> +Note:
> +The behavior and the effect of the disable variable depends on the
> +implementation of a particular governor. In the ladder governor, for
> +example, it is not coherent, i.e. if one is disabling a light state,
> +then all deeper states are disabled as well, but the disable variable
> +does not reflect it. Likewise, if one enables a deep state but a lighter
> +state still is disabled, then this has no effect.
> Index: linux-3.4.4-rt14-rc2-64/drivers/cpuidle/governors/ladder.c
> ===================================================================
> --- linux-3.4.4-rt14-rc2-64.orig/drivers/cpuidle/governors/ladder.c
> +++ linux-3.4.4-rt14-rc2-64/drivers/cpuidle/governors/ladder.c
> @@ -88,6 +88,7 @@ static int ladder_select_state(struct cp
>  
>  	/* consider promotion */
>  	if (last_idx < drv->state_count - 1 &&
> +	    !drv->states[last_idx + 1].disable &&
>  	    last_residency > last_state->threshold.promotion_time &&
>  	    drv->states[last_idx + 1].exit_latency <= latency_req) {
>  		last_state->stats.promotion_count++;
> @@ -100,7 +101,8 @@ static int ladder_select_state(struct cp
>  
>  	/* consider demotion */
>  	if (last_idx > CPUIDLE_DRIVER_STATE_START &&
> -	    drv->states[last_idx].exit_latency > latency_req) {
> +	    (drv->states[last_idx].disable ||
> +	    drv->states[last_idx].exit_latency > latency_req)) {
>  		int i;
>  
>  		for (i = last_idx - 1; i > CPUIDLE_DRIVER_STATE_START; i--) {
> 
> 
> 

