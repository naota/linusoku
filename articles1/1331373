Path: news.gmane.org!not-for-mail
From: Tejun Heo <tj@kernel.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [PATCH] workqueue: fix spurious CPU locality WARN from
 process_one_work()
Date: Sun, 22 Jul 2012 09:43:27 -0700
Lines: 39
Approved: news@gmane.org
Message-ID: <20120722164327.GA5144@dhcp-172-17-108-109.mtv.corp.google.com>
References: <1342545149-3515-1-git-send-email-tj@kernel.org>
 <1342545149-3515-2-git-send-email-tj@kernel.org>
 <20120720215207.GA18841@linux.vnet.ibm.com>
 <20120720215835.GB6823@google.com>
 <20120721213656.GA7783@linux.vnet.ibm.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342975485 725 80.91.229.3 (22 Jul 2012 16:44:45 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 22 Jul 2012 16:44:45 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, torvalds@linux-foundation.org,
	peterz@infradead.org, tglx@linutronix.de, linux-pm@vger.kernel.org,
	stable@vger.kernel.org
To: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Sun Jul 22 18:44:43 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SszGr-0007dS-Tk
	for glk-linux-kernel-3@plane.gmane.org; Sun, 22 Jul 2012 18:44:42 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752167Ab2GVQnf (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 22 Jul 2012 12:43:35 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:63465 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752118Ab2GVQnd (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 22 Jul 2012 12:43:33 -0400
Original-Received: by pbbrp8 with SMTP id rp8so9427077pbb.19
        for <multiple recipients>; Sun, 22 Jul 2012 09:43:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent;
        bh=4v6LPub8pTvwNM3919SFtw+3OsNNW2W5XU5w7jEOaq8=;
        b=HTvnKPEx3SndlvrRXEfuUmp9KWodWD4gQTec4gFbDuHc75jJ+tD5AO0Kpxag/G4eFA
         PoYMMRNRtjMpRQxNi575/s4XUuQwwBo526LYjiXxIZK1V+1etnMffUypIwKZoOWKzlA1
         eyc1Q2AWBHbL47UkT4bfE11ofBimEEM8GcpHlRAxvS0lNjpJSySJT2cZQVjPgiO+mUzt
         +6Haxdh6N+ZApMxMr/WHP0LNwy+tvvTsw8kkm4EbOTT3coZYiXsCVyNQGz9XB904/qVT
         5SOhdnxeZqM/OLu12eFyWqC21NKT2HYAmzcMJHTJ9ImaebGbcrav0Tt3ePdsgat4Pze7
         Ne0Q==
Original-Received: by 10.68.233.103 with SMTP id tv7mr29379552pbc.124.1342975412743;
        Sun, 22 Jul 2012 09:43:32 -0700 (PDT)
Original-Received: from dhcp-172-17-108-109.mtv.corp.google.com ([216.239.45.130])
        by mx.google.com with ESMTPS id rg9sm8169815pbc.67.2012.07.22.09.43.30
        (version=SSLv3 cipher=OTHER);
        Sun, 22 Jul 2012 09:43:31 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <20120721213656.GA7783@linux.vnet.ibm.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331373 gmane.linux.kernel.stable:28606
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331373>

25511a4776 "workqueue: reimplement CPU online rebinding to handle idle
workers" added CPU locality sanity check in process_one_work().  It
triggers if a worker is executing on a different CPU without UNBOUND
or REBIND set.

This works for all normal workers but rescuers can trigger this
spuriously when they're serving the unbound or a disassociated
global_cwq - rescuers don't have either flag set and thus its
gcwq->cpu can be a different value including %WORK_CPU_UNBOUND.

Fix it by additionally testing %GCWQ_DISASSOCIATED.

Signed-off-by: Tejun Heo <tj@kernel.org>
Reported-by: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>
LKML-Refence: <20120721213656.GA7783@linux.vnet.ibm.com>
---
This should fix it.  Will queue it on wq/for-3.6.

Thanks!

 kernel/workqueue.c |    6 ++++++
 1 file changed, 6 insertions(+)

--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -1949,7 +1949,13 @@ __acquires(&gcwq->lock)
 
 	lockdep_copy_map(&lockdep_map, &work->lockdep_map);
 #endif
+	/*
+	 * Ensure we're on the correct CPU.  DISASSOCIATED test is
+	 * necessary to avoid spurious warnings from rescuers servicing the
+	 * unbound or a disassociated gcwq.
+	 */
 	WARN_ON_ONCE(!(worker->flags & (WORKER_UNBOUND | WORKER_REBIND)) &&
+		     !(gcwq->flags & GCWQ_DISASSOCIATED) &&
 		     raw_smp_processor_id() != gcwq->cpu);
 
 	/*
