Path: news.gmane.org!not-for-mail
From: Colin Cross <ccross@android.com>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: Re: [RFC] ARM: sched_clock: update epoch_cyc on resume
Date: Mon, 23 Jul 2012 12:27:47 -0700
Lines: 49
Approved: news@gmane.org
Message-ID: <CAMbhsRR2-VjUeL2XPKubeaG=iLV5NE-i_sVYbuMAryXLxsbo1g@mail.gmail.com>
References: <1342567672-29071-1-git-send-email-ccross@android.com>
	<CACRpkdaHdCvx1HJNDsyJSZAN--sF+4-V1TbzXZL1v+7Asoe_oA@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343071683 19222 80.91.229.3 (23 Jul 2012 19:28:03 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 23 Jul 2012 19:28:03 +0000 (UTC)
Cc: linux-arm-kernel@lists.infradead.org,
	Russell King <linux@arm.linux.org.uk>,
	Krzysztof Halasa <khc@pm.waw.pl>,
	Nicolas Pitre <nico@linaro.org>,
	Marc Zyngier <marc.zyngier@arm.com>,
	linux-kernel@vger.kernel.org, Thomas Gleixner <tglx@linutronix.de>
To: Linus Walleij <linus.walleij@linaro.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 23 21:28:01 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StOIP-0006Bn-Vl
	for glk-linux-kernel-3@plane.gmane.org; Mon, 23 Jul 2012 21:27:58 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754700Ab2GWT1u (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 23 Jul 2012 15:27:50 -0400
Original-Received: from mail-yx0-f174.google.com ([209.85.213.174]:44216 "EHLO
	mail-yx0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754228Ab2GWT1s (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 23 Jul 2012 15:27:48 -0400
Original-Received: by yenl2 with SMTP id l2so5859708yen.19
        for <linux-kernel@vger.kernel.org>; Mon, 23 Jul 2012 12:27:48 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record;
        bh=2eF2qiicBkmx0xXlYcvfQhsu/5WruoIS3H1WXvEZ7TQ=;
        b=b3wThqnejp2qVnEftrjYcpaQZ4dph+aUaDQL69dNCDYbFvCRe/njEJYENo4BSxK9pC
         DVkknxDPV7G+17vcbIzv3ytnev5spDf7Q9urnXOJ3KSIJLz/OghLlITMT/oL6KmMpVht
         SLZbDuaMn/MWo4djFPnMncAJeNwJFjA2g6R4cHLC/thakdc4oUTMrGTUtZjzZ+sO9GSa
         Vq1esUZi84E09KNHsiHWynkmrr24h3JwNNN5pPTKRdhVdZt0YNPf43tU2AJnzoJ+sJwi
         ZiMxYXxIe5zQ5uwbQIZE8CBjT1v9qMcu15t46RdQ8LqZhVpLid1VUM6iUSg6NC0sckHw
         +vQg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record:x-gm-message-state;
        bh=2eF2qiicBkmx0xXlYcvfQhsu/5WruoIS3H1WXvEZ7TQ=;
        b=lNaCF99AFyOKaiAzx15EOhDUn331phhDrs/LDfdMU18eQ1JjxXfJFdgKVIp6nM8lBw
         YOiVP486kQAQuOGcbKo7kj3DYd+AinMksWktuT9ZBABv6LJMc6T/y7IITHf1l+XzdIGm
         csWHJDQUj85zktEsEUAyazZ50uGHGcgKd/BVFIg0bOfHOAc15HJvj0ILvE+eiciGeRiH
         MRat9iBGDIPxjO09Pj7ylPQ+CLq/k6HZpHvpZYVDoQNdLHoANXeuC/zg1J8VVfq9tI1R
         CD1XgWf81f0E+u/7yxB5Mw0okXfNZ8afYnmWzWGeosVa6nYUi5NLGyJ+ws4Q0x3boEzl
         oCKA==
Original-Received: by 10.60.21.103 with SMTP id u7mr22274443oee.49.1343071667980;
        Mon, 23 Jul 2012 12:27:47 -0700 (PDT)
Original-Received: by 10.60.21.103 with SMTP id u7mr22274423oee.49.1343071667803; Mon,
 23 Jul 2012 12:27:47 -0700 (PDT)
Original-Received: by 10.231.184.211 with HTTP; Mon, 23 Jul 2012 12:27:47 -0700 (PDT)
In-Reply-To: <CACRpkdaHdCvx1HJNDsyJSZAN--sF+4-V1TbzXZL1v+7Asoe_oA@mail.gmail.com>
X-Google-Sender-Auth: SH3KE2Nih6tT6Z8ykDANCK1f92g
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQmOH6suC3Zap3xanzNSUJi5xPAkj8r0I4d8+G1fC1ogJjSYcVHOkan3YUX11s685H509Bs/Oxwko1UlYxU+jHez240mniz0fTKqLA4TSl02iVFefB3GxfPKll8va5jEB9oNE3ng1RiiiWl09OeMMm1JYjlRSEYip9jt+JTqO9nIz0E/sL6E9Xz3zYYMCXlv88NU0cdO
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331938 gmane.linux.ports.arm.kernel:178459
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331938>

On Mon, Jul 23, 2012 at 11:55 AM, Linus Walleij
<linus.walleij@linaro.org> wrote:
> On Wed, Jul 18, 2012 at 1:27 AM, Colin Cross <ccross@android.com> wrote:
>
>> This will have a side effect of causing SoCs that have clocks that
>> continue to count in suspend to appear to stop counting, reporting the
>> same sched_clock() value before and after suspend.
>
> So for our platform (ux500) that has a sched clock that *does*
> continue to run during suspend,
> drivers/clocksource/clksrc-dbx500-prcmu.c
> how do we opt out of this behaviour?

Does the clock you use for sched_clock continue to run in all suspend
modes?  All the SoC's I've used only have a 32kHz clock in the deepest
suspend mode, which is not ideal for sched_clock.  For example, on
Tegra2 the faster 1MHz clock used for sched_clock resets in the
deepest suspend state (LP0) but not the shallowest suspend state
(LP2), and which suspend state the chip hits depends on which hardware
is active.  Opting out of this patch would cause Tegra's clock to
sometimes run in suspend, and sometimes not, which seems worse for
debugging than consistently not running in suspend.  I'd be surprised
if a similar situation didn't apply to your platform.

> Since sched_clock is used for the debug prints, if we have a
> crash immediately after resume() it will appear to be at resume
> time in the log which kinda sucks. :-(

Most resume implementations I've seen print a resume message very
early, making it fairly easy to distinguish between suspend and resume
crashes, but I can see why an accurate timestamp would be helpful.

> Isn't the proper way to do this either:
>
> - Assign suspend/resume hooks to the sched_clock code in the
>   platform and let the code that reads the hardware clock deal with
>   this

That's effectively what I've done on 3 different platforms, which is
why I thought it might be better to put it in the core code.

> Or
>
> - If it absolutely needs to be in the core code, also have a bool
>   field indicating whether the clock is going to die during suspend
>   and add new registration functions for setting that sched_clock
>   type, e.g. setup_sched_clock_nonsuspendable()

Sounds reasonable if some platforms need the extra complexity.
