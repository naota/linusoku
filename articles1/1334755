Path: news.gmane.org!not-for-mail
From: Jiang Liu <liuj97@gmail.com>
Newsgroups: gmane.linux.kernel.pci,gmane.linux.kernel
Subject: Re: [RFC PATCH v2 04/32] PCI: add PCIe capabilities access functions
 to hide differences among PCIe specs
Date: Mon, 30 Jul 2012 00:22:38 +0800
Lines: 52
Approved: news@gmane.org
Message-ID: <5015634E.5050007@gmail.com>
References: <1343147504-25891-1-git-send-email-jiang.liu@huawei.com> <1343147504-25891-5-git-send-email-jiang.liu@huawei.com> <500F0FBF.9080903@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343579028 8653 80.91.229.3 (29 Jul 2012 16:23:48 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 29 Jul 2012 16:23:48 +0000 (UTC)
Cc: Bjorn Helgaas <bhelgaas@google.com>,
	Jiang Liu <jiang.liu@huawei.com>,
	Yinghai Lu <yinghai@kernel.org>,
	Taku Izumi <izumi.taku@jp.fujitsu.com>,
	"Rafael J . Wysocki" <rjw@sisk.pl>,
	Kenji Kaneshige <kaneshige.kenji@jp.fujitsu.com>,
	Yijing Wang <wangyijing@huawei.com>,
	linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org
To: Don Dutile <ddutile@redhat.com>
Original-X-From: linux-pci-owner@vger.kernel.org Sun Jul 29 18:23:47 2012
Return-path: <linux-pci-owner@vger.kernel.org>
Envelope-to: glp-linux-pci@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-pci-owner@vger.kernel.org>)
	id 1SvWHS-0000nl-P6
	for glp-linux-pci@plane.gmane.org; Sun, 29 Jul 2012 18:23:47 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753260Ab2G2QWp (ORCPT <rfc822;glp-linux-pci@m.gmane.org>);
	Sun, 29 Jul 2012 12:22:45 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:37139 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753194Ab2G2QWo (ORCPT
	<rfc822;linux-pci@vger.kernel.org>); Sun, 29 Jul 2012 12:22:44 -0400
Original-Received: by pbbrp8 with SMTP id rp8so8345219pbb.19
        for <multiple recipients>; Sun, 29 Jul 2012 09:22:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type:content-transfer-encoding;
        bh=/s3btTI+/1KOlceJ/hJyUn5YxIFIffQT9bl8g8M1Qi8=;
        b=H43G1+OatUut1wFzmPdcEIWo2RnFkppGLqRU3jVLOJ5dfb9hvVT6Gp4AYTb/nCgbES
         DNL4EdwAfCrjgP0lTZVh5rHXahwVIZiPPTdUFodi/fVzZYyXFmENHJ6fp15kGGcB38NF
         /80398ix7TqyPWCe/k0vgi5ptY3xLQl4zTCmc03OEKdznsLsx9TzTCO4/qvc0oHgt2vl
         pYnPX24WO/Xo8zI2mN68xA0rkKgD9kihENNXkTu4AOKO8R5lRpT/HsoYZKMsHW9rnNC+
         aztvwSgVK4dlh1YMmslxDtHIYTVCx7lmuqzX50+ndePS76928BnzzcGwmxS5Hhcm/tsO
         99tg==
Original-Received: by 10.68.219.226 with SMTP id pr2mr28920730pbc.1.1343578964257;
        Sun, 29 Jul 2012 09:22:44 -0700 (PDT)
Original-Received: from [172.24.2.1] ([58.250.81.2])
        by mx.google.com with ESMTPS id pe8sm6064776pbc.76.2012.07.29.09.22.40
        (version=SSLv3 cipher=OTHER);
        Sun, 29 Jul 2012 09:22:43 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120714 Thunderbird/14.0
In-Reply-To: <500F0FBF.9080903@redhat.com>
Original-Sender: linux-pci-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-pci.vger.kernel.org>
X-Mailing-List: linux-pci@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel.pci:16690 gmane.linux.kernel:1334755
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334755>

On 07/25/2012 05:12 AM, Don Dutile wrote:
> On 07/24/2012 12:31 PM, Jiang Liu wrote:
>> +int pci_pcie_capability_read_word(struct pci_dev *dev, int pos, u16 *val)
>> +{
>> +    int ret = 0;
>> +
>> +    *val = 0;
>> +    if (pos&  1)
>> +        return -EINVAL;
>> +
>> +    if (pci_pcie_capability_reg_implemented(dev, pos)) {
>> +        ret = pci_read_config_word(dev, pci_pcie_cap(dev) + pos, val);
>> +        /*
>> +         * Reset *val to 0 if pci_read_config_word() fails, it may
>> +         * have been written as 0xFFFF if hardware error happens
>> +         * during pci_read_config_word().
>> +         */
>> +        if (ret)
>> +            *val = 0;
>> +    } else if (pos == PCI_EXP_SLTSTA&&
>> +         pci_pcie_type(dev) == PCI_EXP_TYPE_DOWNSTREAM) {
>> +        *val = PCI_EXP_SLTSTA_PDS;
>> +    }
> Don't you want the above if check done 1st, and not the
> pci_pcie_capability_reg_implemented(dev, pos) check ?
> Isn't PCI_EXP_SLTCTL an implemented register, looking at this snippet?:
>> +    switch (pos) {
>         <snip>
>> +    case PCI_EXP_SLTCAP:
>> +    case PCI_EXP_SLTCTL:
>> +    case PCI_EXP_SLTSTA:
>> +        return pci_pcie_cap_has_sltctl(dev);
>   and the above function is:
> 
>> +static inline bool pci_pcie_cap_has_sltctl(const struct pci_dev *dev)
>> +{
>> +    int type = pci_pcie_type(dev);
>> +
>> +    return pci_pcie_cap_version(dev)>  1 ||
>> +           type == PCI_EXP_TYPE_ROOT_PORT ||
>> +           (type == PCI_EXP_TYPE_DOWNSTREAM&&
>> +        dev->pcie_flags_reg&  PCI_EXP_FLAGS_SLOT);
>> +}
> 
> or is PCI_EXP_FLAGS_SLOT not set when it should be, then the first condition
> fails, and this function forces the val to 1b ?
Hi Don,
	Yes, that's the purpose. PCIe spec v2/v3 defines that hardware should return
a value with bit PCI_EXP_SLTSTA_PDS set if PCI_EXP_SLTSTA register is not implemented.
So for PCIe v1 hardwares, we try to behave in the same way as v2/v3.
	Regards!
	Gerry
