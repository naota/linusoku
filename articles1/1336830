Path: news.gmane.org!not-for-mail
From: James Bottomley <James.Bottomley@HansenPartnership.com>
Newsgroups: gmane.linux.ports.parisc,gmane.linux.kernel
Subject: Re: [PATCH v2] parisc: fix personality flag check in copy_thread()
Date: Thu, 02 Aug 2012 14:06:58 +0100
Lines: 64
Approved: news@gmane.org
Message-ID: <1343912818.5073.48.camel@dabdike.int.hansenpartnership.com>
References: <alpine.LNX.2.00.1208012155330.14910@pobox.suse.cz>
	  <alpine.LNX.2.00.1208020911300.14910@pobox.suse.cz>
	 <1343897272.5073.5.camel@dabdike.int.hansenpartnership.com>
	 <alpine.LNX.2.00.1208021342120.4820@pobox.suse.cz>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343912830 3855 80.91.229.3 (2 Aug 2012 13:07:10 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 13:07:10 +0000 (UTC)
Cc: Helge Deller <deller@gmx.de>, linux-parisc@vger.kernel.org,
	linux-kernel@vger.kernel.org
To: Jiri Kosina <jkosina@suse.cz>
Original-X-From: linux-parisc-owner@vger.kernel.org Thu Aug 02 15:07:08 2012
Return-path: <linux-parisc-owner@vger.kernel.org>
Envelope-to: glpp-linux-parisc@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-parisc-owner@vger.kernel.org>)
	id 1Swv7K-0004MZ-A5
	for glpp-linux-parisc@plane.gmane.org; Thu, 02 Aug 2012 15:07:06 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752558Ab2HBNHF (ORCPT <rfc822;glpp-linux-parisc@m.gmane.org>);
	Thu, 2 Aug 2012 09:07:05 -0400
Original-Received: from bedivere.hansenpartnership.com ([66.63.167.143]:38853 "EHLO
	bedivere.hansenpartnership.com" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1750974Ab2HBNHE (ORCPT
	<rfc822;linux-parisc@vger.kernel.org>);
	Thu, 2 Aug 2012 09:07:04 -0400
Original-Received: from localhost (localhost [127.0.0.1])
	by bedivere.hansenpartnership.com (Postfix) with ESMTP id DDF1D8EE12F;
	Thu,  2 Aug 2012 06:07:03 -0700 (PDT)
Original-Received: from bedivere.hansenpartnership.com ([127.0.0.1])
	by localhost (bedivere.hansenpartnership.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 5f7UVJGSj-zK; Thu,  2 Aug 2012 06:07:03 -0700 (PDT)
Original-Received: from [153.66.254.224] (accolon.hansenpartnership.com [87.194.65.0])
	by bedivere.hansenpartnership.com (Postfix) with ESMTPSA id 20D588EE0CE;
	Thu,  2 Aug 2012 06:07:01 -0700 (PDT)
In-Reply-To: <alpine.LNX.2.00.1208021342120.4820@pobox.suse.cz>
X-Mailer: Evolution 3.2.3 
Original-Sender: linux-parisc-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-parisc.vger.kernel.org>
X-Mailing-List: linux-parisc@vger.kernel.org
Xref: news.gmane.org gmane.linux.ports.parisc:4524 gmane.linux.kernel:1336830
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336830>

On Thu, 2012-08-02 at 13:45 +0200, Jiri Kosina wrote:
> On Thu, 2 Aug 2012, James Bottomley wrote:
> 
> > > Directly comparing task_struct->personality against PER_* is not fully
> > > correct, as it doesn't take flags potentially stored in top three bytes
> > > into account.
> > > 
> > > Analogically, directly forcefully setting personality to PER_LINUX32 or
> > > PER_LINUX discards any flags stored in the top three bytes.
> > > 
> > > Signed-off-by: Jiri Kosina <jkosina@suse.cz>
> > > ---
> > > 
> > > changed since v1: fix the bit ops to reflect the fact that PER_LINUX is 
> > > actually 0
> > 
> > Tell me what you're trying to achieve (or what problem you're trying to
> > solve), because personality is notoriously tricky.
> 
> Long story short -- I was debugging a problem where 'setarch --uname-2.6' 
> would not work on s390 on (older) 3.x kernel. Turned out to be a 
> corruption of top bytes of personality across exec() on s390.
> 
> I was doing quite some over-the-tree grepping during this, and found out 
> that at least parisc, powerpc and sparc64 (davem already queued my patch 
> for this) would under some silently ignore discard the top bytes of 
> personality flags passed to sys_personality().
> 
> In case of parsic, let's take a process with current->personality == 
> PER_LINUX32 callling personality(PER_LINUX | UNAME26). The
> 
>         if (personality(current->personality) == PER_LINUX32
>             && personality == PER_LINUX)
>                 personality = PER_LINUX32;
> 
> would that have no effect, and sys_personality() would be called with 
> (PER_LINUX | UNAME26) instead of PER_LINUX32, just because of UNAME26 
> being set as well. That doesn't seem really correct. Is it?

Heh, no.  This is a nasty mess.  Our assumption was that we own the
flags ... hence the code.  There are some flags we can't allow to be set
or reset ... but that's only for the mythical 64 bit userspace, so I
suppose we just ignore that for now and fix it if this ever appears.

I don't like the hidden assumption that PER_LINUX == 0, but otherwise
the code looks fine.

How about 

personality = (personality & ~PER_MASK) | PER_LINUX32;

and

err = (personality & ~PER_MASK) | PER_LINUX;

James



--
To unsubscribe from this list: send the line "unsubscribe linux-parisc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

