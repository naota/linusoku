Path: news.gmane.org!not-for-mail
From: Hugh Dickins <hughd@google.com>
Newsgroups: gmane.linux.kernel
Subject: Re: /dev/kmem BUG on mmap
Date: Mon, 30 Jul 2012 19:06:21 -0700 (PDT)
Lines: 73
Approved: news@gmane.org
Message-ID: <alpine.LSU.2.00.1207301830590.3883@eggly.anvils>
References: <5015B913.5050309@gmail.com> <20120730094308.GA7913@cmpxchg.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: dough.gmane.org 1343700499 28210 80.91.229.3 (31 Jul 2012 02:08:19 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 02:08:19 +0000 (UTC)
Cc: Sasha Levin <levinsasha928@gmail.com>, gregkh@linuxfoundation.org,
	arnd@arndb.de, linux-kernel@vger.kernel.org
To: Johannes Weiner <hannes@cmpxchg.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 31 04:08:18 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sw1sd-0004Pa-W2
	for glk-linux-kernel-3@plane.gmane.org; Tue, 31 Jul 2012 04:08:16 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754820Ab2GaCHO (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 30 Jul 2012 22:07:14 -0400
Original-Received: from mail-gg0-f174.google.com ([209.85.161.174]:60529 "EHLO
	mail-gg0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753765Ab2GaCHL (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 30 Jul 2012 22:07:11 -0400
Original-Received: by gglu4 with SMTP id u4so5580371ggl.19
        for <linux-kernel@vger.kernel.org>; Mon, 30 Jul 2012 19:07:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:x-x-sender:to:cc:subject:in-reply-to:message-id
         :references:user-agent:mime-version:content-type;
        bh=gOm19Xyrz7AA8c56wzLjEnTKRehsXzsIOx/wfHb33fc=;
        b=duB4K+b7bis3GwH3QREeBExWtE6BCj99Laz8aoqwgVX/u0bI0QhuW6SOjwEs6neKKO
         zqDQ9Nq7XUWgUsJTG1nro+rGSn2uOIhLNxLMu6/xr4e9SMRTLCErm0pavZ8Q327R1oAZ
         sZPagcokGg2ochZRaeMKzMQq81Q0kjvLhYMoHYK+a8F3jzG6CYbuC313Gu6mzuET5YaR
         XxB0NE5hWEZNMfuGj2YZYVSUiGayircEbT5Ir9PI3E8WgRY4MRj+v0fClKy9x4oBVL9B
         jfJ2/DJdrODNgTdh/XWxw1L3536SiNxD842h0EAlDuseGZ57L3RGHB2QiVm3fuB8L52Q
         LY+A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:x-x-sender:to:cc:subject:in-reply-to:message-id
         :references:user-agent:mime-version:content-type:x-gm-message-state;
        bh=gOm19Xyrz7AA8c56wzLjEnTKRehsXzsIOx/wfHb33fc=;
        b=bqqrkBfxrQHYWdtm1TJAGNI6O/FQtXZ+TjjXhSxVmQ1CXLVlpdH/ZhXchZ0QunaRQm
         TGHmj08+cqAys+Na/dQBoFh4z3dtkr5/Qq8qE8kYB+//5cwG+rB99CDXG8rI/qdrO/Gy
         qXRN6Gllj+FjoCfHkd8Od6PK2xzvt+tDXm8j0okGuJmLJgzCtxfBFCfrp6106IHMEpSg
         2JporfKf4rEKWniEG4RcxeyAQpKADTcVwpgunMLTnlBna+FvNphFBmrICxyF5/z/xvGx
         HGaP/83vHxU8xaWVBsE2aNjVnq25nf6q1KdL0W7kBwY65yibrbkc/D+VG3+/CEX9kSHZ
         NTbA==
Original-Received: by 10.50.190.234 with SMTP id gt10mr648802igc.20.1343700430390;
        Mon, 30 Jul 2012 19:07:10 -0700 (PDT)
Original-Received: by 10.50.190.234 with SMTP id gt10mr648782igc.20.1343700429916;
        Mon, 30 Jul 2012 19:07:09 -0700 (PDT)
Original-Received: from [2620:0:1000:fd2e:224:d7ff:fee2:b75c] ([2620:0:1000:fd2e:224:d7ff:fee2:b75c])
        by mx.google.com with ESMTPS id ai6sm17096736igc.0.2012.07.30.19.07.08
        (version=TLSv1/SSLv3 cipher=OTHER);
        Mon, 30 Jul 2012 19:07:09 -0700 (PDT)
X-X-Sender: hugh@eggly.anvils
In-Reply-To: <20120730094308.GA7913@cmpxchg.org>
User-Agent: Alpine 2.00 (LSU 1167 2008-08-23)
X-Gm-Message-State: ALoCoQmXipjhPmOgaBNfslp7/cafb+6Qp5a87cK2GBL59zt6EPKkLLaaOqQWon3304IM76Y5lmkCTkH7eiXAQyWX+IxtV8ZVNSi1/NbXy6VRGLei9E6rNJ4t1S078ide5TvsILz4Dz4nqT5YuzpKiqA/vJQtmtbA3+TtBCD5rSYLHRNXDc4WB/k30krLKOsHQXRqcVAU6wgh
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335372
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335372>

On Mon, 30 Jul 2012, Johannes Weiner wrote:
> On Mon, Jul 30, 2012 at 12:28:35AM +0200, Sasha Levin wrote:
> > Hi all,
> > 
> > I was poking around /dev/kmem related code, and noticed the following in mmap_kmem():
> > 
> >         /* Turn a kernel-virtual address into a physical page frame */
> >         pfn = __pa((u64)vma->vm_pgoff << PAGE_SHIFT) >> PAGE_SHIFT;
> > 
> > Which looked odd since vm_pgoff is the offset into the mapping, so
> > I'd assume that PAGE_OFFSET should be added to it as well, otherwise
> > we get an invalid address.
> 
> It's supposed to be used with kernel offsets in the first place,
> i.e. vma->vm_pgoff << PAGE_SHIFT should actually be a kernel virtual
> address.  See 6d3154c Revert "[PATCH] Fix up mmap_kmem".

Yes.  Some would say we should add a comment; but already it has one.

> 
> > I tested it by writing something like this:
> > 
> > 	int main(void)
> > 	{
> > 	        int fd;
> > 	        void *addr;
> > 	
> > 	        fd = open("/dev/kmem", O_RDONLY);
> > 	        addr = mmap(NULL, 4096, PROT_READ, MAP_PRIVATE, fd, 4096);
> > 	
> > 	        return 0;
> > 	}
> > 
> > Which indeed triggered a VM_BUG:
> > 
> > [   32.285431] kernel BUG at arch/x86/mm/physaddr.c:18!
> 
> x86's debug-version of __pa() triggers that bug.  I'm reluctant to add
> a whole lot of error checking to this interface, given that you should
> already know what you are doing.  OTOH, crashing like this is not very
> nice, either.
> 
> Is there a portable way to check if an address is a kernel virtual
> one?  It looks like comparing to PAGE_OFFSET would work on most archs,
> but not necessarily on powerpc for example.

I didn't look into powerpc; even on x86, comparing with PAGE_OFFSET
first would filter out the most likely crashes, but leave it crashing
on >= KERNEL_IMAGE_SIZE and !phys_addr_valid().

I think that's why it's so long said just __pa(), because different
architectures would not agree on the appropriate prior validation.
Debug crashes added at as low level as __pa() come as a surprise.

Thank you to Sasha for bringing this to our attention, and if there
were an obvious right answer, I'd definitely prefer to fail than crash
an out-of-range mmap arg here, even if only CAP_SYS_RAWIO gets this far.

You could say that the right answer is to add the __pa_nodebug()
to every architecture (or in asm-generic), and then use that here;
but is it worth bothering?

Once I read the DEBUG_VIRTUAL Kconfig entry:
	Enable some costly sanity checks in virtual to page code.
	This can catch mistakes with virt_to_page() and friends.
	If unsure, say N.
I'm inclined to think that few would turn DEBUG_VIRTUAL on, and
those who do so might as well welcome this crash as the costly
way in which it catches their mistakes - with apology to Sasha.

Not an answer I'm especially proud of, but doubt it's worth more.

Hugh
