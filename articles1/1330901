Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.drivers.devicetree,gmane.linux.kernel.janitors
Subject: Re: [patch] driver-core: dev_to_node() should handle NULL pointers
Date: Fri, 20 Jul 2012 08:00:42 -0700
Lines: 29
Approved: news@gmane.org
Message-ID: <20120720150042.GA1996@kroah.com>
References: <20120720065622.GA11710@elgon.mountain>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342796460 24207 80.91.229.3 (20 Jul 2012 15:01:00 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 15:01:00 +0000 (UTC)
Cc: Grant Likely <grant.likely@secretlab.ca>,
	Rob Herring <rob.herring@calxeda.com>,
	Lars-Peter Clausen <lars@metafoo.de>,
	linux-kernel@vger.kernel.org, devicetree-discuss@lists.ozlabs.org,
	kernel-janitors@vger.kernel.org
To: Dan Carpenter <dan.carpenter@oracle.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Jul 20 17:00:59 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SsEhO-00028h-A6
	for glk-linux-kernel-3@plane.gmane.org; Fri, 20 Jul 2012 17:00:58 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752216Ab2GTPAt (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 20 Jul 2012 11:00:49 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:57977 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751130Ab2GTPAs (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 20 Jul 2012 11:00:48 -0400
Original-Received: by pbbrp8 with SMTP id rp8so6276152pbb.19
        for <linux-kernel@vger.kernel.org>; Fri, 20 Jul 2012 08:00:48 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent
         :x-gm-message-state;
        bh=eJMAulfPOCi/bAWx/LroXWFVKMdQim7ARvNRptBNZoU=;
        b=Hl0VESe5Alm4CjtNbZKlBDhA5nL2WD7OVCxRT6cl6d2CI7HRAa5fo9wEhKzis8W20o
         Q/RfZobuYbGhvZocWHVBrDB6OiqV/X5AEO4Tqy+84V10XPguIcWf4J9wAv8mLNpTBAcn
         tJE7WjXjYSmbpO4YYabBNa1PLVLZ7sJEp11BbElCsETvUikHe39dPbzQviURKknK+Bjh
         AC1gcAvNxyLrMqqdVQkPRdQgvpjn5hbueYrruROJaSVJOReHTDqy07CTziw6Haz3OtAK
         itugeROuwIUD2dNmyYT+JfBuPN4IFVAiOL1LCt/sCPgRueq6mKaHcf63pWi4YWPw23xl
         6bMQ==
Original-Received: by 10.68.213.67 with SMTP id nq3mr14549318pbc.142.1342796448114;
        Fri, 20 Jul 2012 08:00:48 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id ms1sm4109818pbb.63.2012.07.20.08.00.44
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 20 Jul 2012 08:00:46 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <20120720065622.GA11710@elgon.mountain>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Gm-Message-State: ALoCoQm4PTxNxsyAZgnAHLWX0PrLvDKsWwu7khmWKe5HjIXzGoQCk1aQhq55OhbRB9Er3FYcn57D
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330901 gmane.linux.drivers.devicetree:18423 gmane.linux.kernel.janitors:25169
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330901>

On Fri, Jul 20, 2012 at 09:56:23AM +0300, Dan Carpenter wrote:
> What prompted this patch is that in dma_pool_create() we call
> dev_to_node() before checking whether "dev" is NULL.  It looks like
> there are places which call dma_pool_create() with a NULL pointer.  An
> example is in drivers/usb/gadget/amd5536udc.c.
> 
> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
> ---
> Static checker fix.
> 
> diff --git a/include/linux/device.h b/include/linux/device.h
> index aa7b3b4..c80e7a8d 100644
> --- a/include/linux/device.h
> +++ b/include/linux/device.h
> @@ -714,7 +714,9 @@ int dev_set_name(struct device *dev, const char *name, ...);
>  #ifdef CONFIG_NUMA
>  static inline int dev_to_node(struct device *dev)
>  {
> -	return dev->numa_node;
> +	if (dev)
> +		return dev->numa_node;
> +	return -1;

What happens if this function returns -1?  Can the callers properly
handle this?

thanks,

greg k-h
