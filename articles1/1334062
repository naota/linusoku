Path: news.gmane.org!not-for-mail
From: Toshi Kani <toshi.kani@hp.com>
Newsgroups: gmane.linux.acpi.devel,gmane.linux.kernel
Subject: Re: [PATCH v3 3/4] ACPI: Update Memory hotplug messages
Date: Thu, 26 Jul 2012 20:50:02 -0600
Lines: 180
Approved: news@gmane.org
Message-ID: <1343357402.3010.530.camel@misato.fc.hp.com>
References: <1343257978-7085-1-git-send-email-toshi.kani@hp.com>
	 <1343257978-7085-4-git-send-email-toshi.kani@hp.com>
	 <CAErSpo6Dn8+pOsSuiMDNzwheH=LELRKhkWeSB__S0WjHBz13nA@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343357699 28613 80.91.229.3 (27 Jul 2012 02:54:59 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 27 Jul 2012 02:54:59 +0000 (UTC)
Cc: lenb@kernel.org, linux-acpi@vger.kernel.org,
	linux-kernel@vger.kernel.org, joe@perches.com,
	isimatu.yasuaki@jp.fujitsu.com, liuj97@gmail.com,
	srivatsa.bhat@linux.vnet.ibm.com, prarit@redhat.com,
	imammedo@redhat.com, vijaymohan.pandarathil@hp.com
To: Bjorn Helgaas <bhelgaas@google.com>
Original-X-From: linux-acpi-owner@vger.kernel.org Fri Jul 27 04:54:57 2012
Return-path: <linux-acpi-owner@vger.kernel.org>
Envelope-to: glad-acpi-devel@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-acpi-owner@vger.kernel.org>)
	id 1Suahc-0002Rh-Rb
	for glad-acpi-devel@plane.gmane.org; Fri, 27 Jul 2012 04:54:57 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753030Ab2G0Cyz (ORCPT <rfc822;glad-acpi-devel@m.gmane.org>);
	Thu, 26 Jul 2012 22:54:55 -0400
Original-Received: from g5t0007.atlanta.hp.com ([15.192.0.44]:34778 "EHLO
	g5t0007.atlanta.hp.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753007Ab2G0Cyy (ORCPT
	<rfc822;linux-acpi@vger.kernel.org>); Thu, 26 Jul 2012 22:54:54 -0400
Original-Received: from g5t0030.atlanta.hp.com (g5t0030.atlanta.hp.com [16.228.8.142])
	by g5t0007.atlanta.hp.com (Postfix) with ESMTP id E8F46140D4;
	Fri, 27 Jul 2012 02:54:53 +0000 (UTC)
Original-Received: from [16.71.12.41] (misato.fc.hp.com [16.71.12.41])
	by g5t0030.atlanta.hp.com (Postfix) with ESMTP id B8ADD14059;
	Fri, 27 Jul 2012 02:54:52 +0000 (UTC)
In-Reply-To: <CAErSpo6Dn8+pOsSuiMDNzwheH=LELRKhkWeSB__S0WjHBz13nA@mail.gmail.com>
X-Mailer: Evolution 3.2.3 (3.2.3-1.fc16) 
Original-Sender: linux-acpi-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-acpi.vger.kernel.org>
X-Mailing-List: linux-acpi@vger.kernel.org
Xref: news.gmane.org gmane.linux.acpi.devel:54605 gmane.linux.kernel:1334062
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334062>

On Thu, 2012-07-26 at 13:23 -0600, Bjorn Helgaas wrote:
> On Wed, Jul 25, 2012 at 5:12 PM, Toshi Kani <toshi.kani@hp.com> wrote:
> > Updated Memory hotplug log messages with acpi_pr_<level>()
> > and pr_<level>().
> >
> > Signed-off-by: Toshi Kani <toshi.kani@hp.com>
> > ---
> >  drivers/acpi/acpi_memhotplug.c |   24 ++++++++++++------------
> >  1 files changed, 12 insertions(+), 12 deletions(-)
> >
> > diff --git a/drivers/acpi/acpi_memhotplug.c b/drivers/acpi/acpi_memhotplug.c
> > index 06c55cd..dcc8f4d 100644
> > --- a/drivers/acpi/acpi_memhotplug.c
> > +++ b/drivers/acpi/acpi_memhotplug.c
> > @@ -170,7 +170,7 @@ acpi_memory_get_device(acpi_handle handle,
> >         /* Get the parent device */
> >         result = acpi_bus_get_device(phandle, &pdevice);
> >         if (result) {
> > -               printk(KERN_WARNING PREFIX "Cannot get acpi bus device");
> > +               acpi_pr_warn(phandle, "Cannot get acpi bus device\n");
> >                 return -EINVAL;
> >         }
> >
> > @@ -180,14 +180,14 @@ acpi_memory_get_device(acpi_handle handle,
> >          */
> >         result = acpi_bus_add(&device, pdevice, handle, ACPI_BUS_TYPE_DEVICE);
> >         if (result) {
> > -               printk(KERN_WARNING PREFIX "Cannot add acpi bus");
> > +               acpi_pr_warn(handle, "Cannot add acpi bus\n");
> >                 return -EINVAL;
> >         }
> >
> >        end:
> >         *mem_device = acpi_driver_data(device);
> >         if (!(*mem_device)) {
> > -               printk(KERN_ERR "\n driver data not found");
> > +               acpi_pr_err(handle, "driver data not found\n");
> 
> acpi_driver_data() requires a valid acpi_device *, so dev_err() should
> work here.

Agreed. Changed to use dev_err().

> 
> >                 return -ENODEV;
> >         }
> >
> > @@ -224,7 +224,7 @@ static int acpi_memory_enable_device(struct acpi_memory_device *mem_device)
> >         /* Get the range from the _CRS */
> >         result = acpi_memory_get_device_resources(mem_device);
> >         if (result) {
> > -               printk(KERN_ERR PREFIX "get_device_resources failed\n");
> > +               pr_err(PREFIX "get_device_resources failed\n");
> 
> And here.

Changed to use dev_err().

> 
> >                 mem_device->state = MEMORY_INVALID_STATE;
> >                 return result;
> >         }
> > @@ -257,7 +257,7 @@ static int acpi_memory_enable_device(struct acpi_memory_device *mem_device)
> >                 num_enabled++;
> >         }
> >         if (!num_enabled) {
> > -               printk(KERN_ERR PREFIX "add_memory failed\n");
> > +               acpi_pr_err(mem_device->device->handle, "add_memory failed\n");
> 
> And here.

Changed to use dev_err().

> 
> >                 mem_device->state = MEMORY_INVALID_STATE;
> >                 return -EINVAL;
> >         }
> > @@ -353,7 +353,7 @@ static void acpi_memory_device_notify(acpi_handle handle, u32 event, void *data)
> >                         ACPI_DEBUG_PRINT((ACPI_DB_INFO,
> >                                           "\nReceived DEVICE CHECK notification for device\n"));
> >                 if (acpi_memory_get_device(handle, &mem_device)) {
> > -                       printk(KERN_ERR PREFIX "Cannot find driver data\n");
> > +                       acpi_pr_err(handle, "Cannot find driver data\n");
> >                         break;
> >                 }
> >
> > @@ -361,7 +361,7 @@ static void acpi_memory_device_notify(acpi_handle handle, u32 event, void *data)
> >                         break;
> >
> >                 if (acpi_memory_enable_device(mem_device)) {
> > -                       pr_err(PREFIX "Cannot enable memory device\n");
> > +                       acpi_pr_err(handle, "Cannot enable memory device\n");
> 
> And here.

No change since it is called directly from the handler.

> >                         break;
> >                 }
> >
> > @@ -373,12 +373,12 @@ static void acpi_memory_device_notify(acpi_handle handle, u32 event, void *data)
> >                                   "\nReceived EJECT REQUEST notification for device\n"));
> >
> >                 if (acpi_bus_get_device(handle, &device)) {
> > -                       printk(KERN_ERR PREFIX "Device doesn't exist\n");
> > +                       acpi_pr_err(handle, "Device doesn't exist\n");
> >                         break;
> >                 }
> >                 mem_device = acpi_driver_data(device);
> >                 if (!mem_device) {
> > -                       printk(KERN_ERR PREFIX "Driver Data is NULL\n");
> > +                       acpi_pr_err(handle, "Driver Data is NULL\n");
> 
> And here.

No change since it is called directly from the handler.

> >                         break;
> >                 }
> >
> > @@ -389,7 +389,7 @@ static void acpi_memory_device_notify(acpi_handle handle, u32 event, void *data)
> >                  *      with generic sysfs driver
> >                  */
> >                 if (acpi_memory_disable_device(mem_device)) {
> > -                       pr_err(PREFIX "Disable memory device\n");
> > +                       acpi_pr_err(handle, "Disable memory device\n");
> 
> And here.  (What is this message supposed to mean, anyway?)

I changed the message to "Failed to remove memory device\n". This case
is failed in off-lining or ejecting the memory.

> >                         /*
> >                          * If _EJ0 was called but failed, _OST is not
> >                          * necessary.
> > @@ -449,7 +449,7 @@ static int acpi_memory_device_add(struct acpi_device *device)
> >         /* Set the device state */
> >         mem_device->state = MEMORY_POWER_ON_STATE;
> >
> > -       printk(KERN_DEBUG "%s \n", acpi_device_name(device));
> > +       pr_debug("%s\n", acpi_device_name(device));
> 
> And here.  This message looks dubious anyway.

It kept it as is since it is a debug message anyway. I expect it will be
removed eventually.

> >
> >         /*
> >          * Early boot code has recognized memory area by EFI/E820.
> > @@ -464,7 +464,7 @@ static int acpi_memory_device_add(struct acpi_device *device)
> >                 /* call add_memory func */
> >                 result = acpi_memory_enable_device(mem_device);
> >                 if (result)
> > -                       printk(KERN_ERR PREFIX
> > +                       acpi_pr_err(device->handle,
> >                                 "Error in acpi_memory_enable_device\n");
> 
> And here.

Changed to use dev_err().


Thanks!
-Toshi


> 
> >         }
> >         return result;
> > --
> > 1.7.7.6
> >


--
To unsubscribe from this list: send the line "unsubscribe linux-acpi" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

