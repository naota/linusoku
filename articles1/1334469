Path: news.gmane.org!not-for-mail
From: Peter Zijlstra <peterz@infradead.org>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [PATCH 4/6] rbtree: faster augmented insert
Date: Fri, 27 Jul 2012 21:26:08 +0200
Lines: 76
Approved: news@gmane.org
Message-ID: <1343417168.32120.38.camel@twins>
References: <1342787467-5493-1-git-send-email-walken@google.com>
	 <1342787467-5493-5-git-send-email-walken@google.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"
Content-Transfer-Encoding: quoted-printable
X-Trace: dough.gmane.org 1343417186 4363 80.91.229.3 (27 Jul 2012 19:26:26 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 27 Jul 2012 19:26:26 +0000 (UTC)
Cc: riel@redhat.com, daniel.santos@pobox.com, aarcange@redhat.com, 
	dwmw2@infradead.org, akpm@linux-foundation.org, linux-mm@kvack.org, 
	linux-kernel@vger.kernel.org
To: Michel Lespinasse <walken@google.com>
Original-X-From: owner-linux-mm@kvack.org Fri Jul 27 21:26:24 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SuqB5-0003Cp-N1
	for glkm-linux-mm-2@m.gmane.org; Fri, 27 Jul 2012 21:26:23 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 4CF4B6B004D; Fri, 27 Jul 2012 15:26:22 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 3A5EA6B005A; Fri, 27 Jul 2012 15:26:22 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 0A2346B005D; Fri, 27 Jul 2012 15:26:21 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx122.postini.com [74.125.245.122])
	by kanga.kvack.org (Postfix) with SMTP id 3FFDA6B004D
	for <linux-mm@kvack.org>; Fri, 27 Jul 2012 15:26:21 -0400 (EDT)
Original-Received: from casper.infradead.org ([85.118.1.10]) (using TLSv1) by na3sys010amx122.postini.com ([74.125.244.10]) with SMTP;
	Fri, 27 Jul 2012 19:26:21 GMT
Original-Received: from dhcp-089-099-019-018.chello.nl ([89.99.19.18] helo=twins)
	by casper.infradead.org with esmtpsa (Exim 4.76 #1 (Red Hat Linux))
	id 1SuqAw-0005sL-S2; Fri, 27 Jul 2012 19:26:14 +0000
Original-Received: by twins (Postfix, from userid 1000)
	id 828B985CD756; Fri, 27 Jul 2012 21:26:08 +0200 (CEST)
In-Reply-To: <1342787467-5493-5-git-send-email-walken@google.com>
X-Mailer: Evolution 3.2.2- 
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-pstn-settings: 3 (1.0000:1.0000) s cv gt3 gt2 gt1 r p m c 
X-pstn-addresses: from <peterz@infradead.org> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83119 gmane.linux.kernel:1334469
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334469>

On Fri, 2012-07-20 at 05:31 -0700, Michel Lespinasse wrote:
> --- a/lib/rbtree.c
> +++ b/lib/rbtree.c
> @@ -88,7 +88,8 @@ __rb_rotate_set_parents(struct rb_node *old, struct rb_=
node *new,
>                 root->rb_node =3D new;
>  }
> =20
> -void rb_insert_color(struct rb_node *node, struct rb_root *root)
> +inline void rb_insert_augmented(struct rb_node *node, struct rb_root *ro=
ot,
> +                               rb_augment_rotate *augment)

Daniel probably knows best, but I would have expected something like:

__always_inline void=20
__rb_insert(struct rb_node *node, struct rb_root *root,
	    const rb_augment_rotate *augment)

Where you force inline and use a const function pointer since GCC is
better with inlining them -- iirc, Daniel?

>  {
>         struct rb_node *parent =3D rb_red_parent(node), *gparent, *tmp;
> =20
> @@ -152,6 +153,7 @@ void rb_insert_color(struct rb_node *node, struct rb_=
root *root)
>                                         rb_set_parent_color(tmp, parent,
>                                                             RB_BLACK);
>                                 rb_set_parent_color(parent, node, RB_RED)=
;
> +                               augment(parent, node);

And possibly:
		if (augment)
			augment(parent, node);

>                                 parent =3D node;
>                                 tmp =3D node->rb_right;
>                         }


> +static inline void dummy(struct rb_node *old, struct rb_node *new) {}

That would obviate the need for the dummy..

> +void rb_insert_color(struct rb_node *node, struct rb_root *root) {

placed your { wrong..

> +       rb_insert_augmented(node, root, dummy);
> +}
>  EXPORT_SYMBOL(rb_insert_color);=20

And use Daniel's __flatten here, like:

void rb_insert_color(struct rb_node *node, struct rb_root *root)
__flatten
{
	__rb_insert(node, root, NULL);
}
EXPORT_SYMBOL(rb_insert_color);

void rb_insert_augmented(struct rb_node *node, struct rb_root *root,
			 const rb_augment_rotate *augment) __flatten
{
	__rb_insert(node, root, augment);
}
EXPORT_SYMBOL(rb_insert_augmented);

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

