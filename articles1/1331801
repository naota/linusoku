Path: news.gmane.org!not-for-mail
From: Afzal Mohammed <afzal-l0cyMroinI0@public.gmane.org>
Newsgroups: gmane.linux.davinci,gmane.linux.drivers.devicetree,gmane.linux.documentation,gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: [PATCH 1/6] rtc: omap: kicker mechanism support
Date: Mon, 23 Jul 2012 19:12:22 +0530
Lines: 144
Approved: news@gmane.org
Message-ID: <e7ad30d9470906ac66e92affde5864767988ab26.1343046707.git.afzal@ti.com>
References: <cover.1343046707.git.afzal@ti.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343054910 25152 80.91.229.3 (23 Jul 2012 14:48:30 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 23 Jul 2012 14:48:30 +0000 (UTC)
Cc: Afzal Mohammed <afzal-l0cyMroinI0@public.gmane.org>
To: <grant.likely-s3s/WqlpOiPyB63q8FvJNQ@public.gmane.org>, <rob.herring-bsGFqQB8/DxBDgjK7y7TUQ@public.gmane.org>, <rob-VoJi6FS/r0vR7s880joybQ@public.gmane.org>,
        <linux-lFZ/pmaqli7XmaaqVzeoHQ@public.gmane.org>, <nsekhar-l0cyMroinI0@public.gmane.org>, <khilman-l0cyMroinI0@public.gmane.org>,
        <a.zummo-BfzFCNDTiLLj+vYz1yj4TQ@public.gmane.org>, <tony-4v6yS6AI5VpBDgjK7y7TUQ@public.gmane.org>,
        <devicetree-discuss-uLR06cmDAlY/bJ5BZ2RsiQ@public.gmane.org>, <linux-doc-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>,
        <linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>, <linux-arm-kernel-IAPFreCvJWM7uuMidbF8XUB+6BGkLq7r@public.gmane.org>,
        <davinci-linux-open-source-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org>,
        <rtc-linux-/JYPxA39Uh5TLH3MbocFFw@public.gmane.org>
Original-X-From: davinci-linux-open-source-bounces-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org Mon Jul 23 16:48:27 2012
Return-path: <davinci-linux-open-source-bounces-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org>
Envelope-to: gld-davinci-linux-open-source-Uylq5CNFT+jYtjvyW6yDsg@public.gmane.org
Original-Received: from comal.ext.ti.com ([198.47.26.152])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <davinci-linux-open-source-bounces-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org>)
	id 1StJvu-0003MA-JE
	for gld-davinci-linux-open-source-Uylq5CNFT+jYtjvyW6yDsg@public.gmane.org; Mon, 23 Jul 2012 16:48:26 +0200
Original-Received: from dlelxv30.itg.ti.com ([172.17.2.17])
	by comal.ext.ti.com (8.13.7/8.13.7) with ESMTP id q6NElGxr006526;
	Mon, 23 Jul 2012 09:47:16 -0500
Original-Received: from DFLE72.ent.ti.com (dfle72.ent.ti.com [128.247.5.109])
	by dlelxv30.itg.ti.com (8.13.8/8.13.8) with ESMTP id q6NElG5j014130;
	Mon, 23 Jul 2012 09:47:16 -0500
Original-Received: from dlelxv24.itg.ti.com (172.17.1.199) by dfle72.ent.ti.com
 (128.247.5.109) with Microsoft SMTP Server id 14.1.323.3; Mon, 23 Jul 2012
 09:47:15 -0500
Original-Received: from linux.omap.com (dlelxs01.itg.ti.com [157.170.227.31])	by
 dlelxv24.itg.ti.com (8.13.8/8.13.8) with ESMTP id q6NElFdW013367;	Mon, 23 Jul
 2012 09:47:15 -0500
Original-Received: from linux.omap.com (localhost [127.0.0.1])	by linux.omap.com
 (Postfix) with ESMTP	id F2B2F8062E; Mon, 23 Jul 2012 09:47:14 -0500 (CDT)
X-Original-To: davinci-linux-open-source-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org
Delivered-To: davinci-linux-open-source-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org
Original-Received: from dbdp20.itg.ti.com (dbdp20.itg.ti.com [172.24.170.38])	by
 linux.omap.com (Postfix) with ESMTP id E366880626	for
 <davinci-linux-open-source-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org>;	Mon, 23 Jul 2012 08:42:24
 -0500 (CDT)
Original-Received: from DBDE71.ent.ti.com (localhost [127.0.0.1])	by dbdp20.itg.ti.com
 (8.13.8/8.13.8) with ESMTP id q6NDgNjK005277;	Mon, 23 Jul 2012 19:12:23 +0530
 (IST)
Original-Received: from dbdp32.itg.ti.com (172.24.170.251) by DBDE71.ent.ti.com
	(172.24.170.149) with Microsoft SMTP Server id 14.1.323.3;	Mon, 23 Jul 2012
 19:12:23 +0530
Original-Received: from udx0156546 (smtpvbd.itg.ti.com [172.24.170.250])	by
	dbdp32.itg.ti.com (8.13.8/8.13.8) with ESMTP id q6NDgNUK023523;	Mon, 23 Jul
 2012 19:12:23 +0530
Original-Received: from ubnuser by udx0156546 with local (Exim 4.72)	(envelope-from
	<ubnuser@udx0156546>)	id 1StItz-0006dG-ES;	Mon, 23 Jul 2012 19:12:23 +0530
X-Mailer: git-send-email 1.7.1
In-Reply-To: <cover.1343046707.git.afzal-l0cyMroinI0@public.gmane.org>
X-Mailman-Approved-At: Mon, 23 Jul 2012 09:46:16 -0500
X-BeenThere: davinci-linux-open-source-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <davinci-linux-open-source.linux.davincidsp.com>
List-Unsubscribe: <http://linux.davincidsp.com/mailman/options/davinci-linux-open-source>,
	<mailto:davinci-linux-open-source-request-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org?subject=unsubscribe>
List-Archive: <http://linux.davincidsp.com/pipermail/davinci-linux-open-source>
List-Post: <mailto:davinci-linux-open-source-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org>
List-Help: <mailto:davinci-linux-open-source-request-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org?subject=help>
List-Subscribe: <http://linux.davincidsp.com/mailman/listinfo/davinci-linux-open-source>,
	<mailto:davinci-linux-open-source-request-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org?subject=subscribe>
Original-Sender: <davinci-linux-open-source-bounces-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org>
Errors-To: davinci-linux-open-source-bounces-VycZQUHpC/PFrsHnngEfi1aTQe2KTcn/@public.gmane.org
Xref: news.gmane.org gmane.linux.davinci:24390 gmane.linux.drivers.devicetree:18479 gmane.linux.documentation:5847 gmane.linux.kernel:1331801 gmane.linux.ports.arm.kernel:178433
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331801>

OMAP RTC IP can have kicker feature. This prevents spurious
writes to register. To write to registers kicker lock has to
be released. Procedure to do it as follows,

1. write to kick0 register, 0x83e70b13
2. write to kick1 register, 0x95a4f1e0

Writing value other than 0x83e70b13 to kick0 enables write
locking, more details about kicker mechanism can be found in
section 20.3.3.5.3 of AM335X TRM @www.ti.com/am335x

Here id table information is added and is used to distinguish
those that require kicker handling and the ones that doesn't
need it. There are more features in the newer IP's compared
to legacy ones other than kicker, which driver currently
doesn't handle, supporting additional features would be
easier with the addition of id table.

Signed-off-by: Afzal Mohammed <afzal-l0cyMroinI0@public.gmane.org>
---
 drivers/rtc/rtc-omap.c |   39 ++++++++++++++++++++++++++++++++++++++-
 1 files changed, 38 insertions(+), 1 deletions(-)

diff --git a/drivers/rtc/rtc-omap.c b/drivers/rtc/rtc-omap.c
index 0b614e3..65eda29 100644
--- a/drivers/rtc/rtc-omap.c
+++ b/drivers/rtc/rtc-omap.c
@@ -38,6 +38,8 @@
  * the SoC). See the BOARD-SPECIFIC CUSTOMIZATION comment.
  */
 
+#define	DRIVER_NAME			"omap_rtc"
+
 #define OMAP_RTC_BASE			0xfffb4800
 
 /* RTC registers */
@@ -64,6 +66,9 @@
 #define OMAP_RTC_COMP_MSB_REG		0x50
 #define OMAP_RTC_OSC_REG		0x54
 
+#define OMAP_RTC_KICK0_R		0x6c
+#define OMAP_RTC_KICK1_R		0x70
+
 /* OMAP_RTC_CTRL_REG bit fields: */
 #define OMAP_RTC_CTRL_SPLIT		(1<<7)
 #define OMAP_RTC_CTRL_DISABLE		(1<<6)
@@ -88,11 +93,19 @@
 #define OMAP_RTC_INTERRUPTS_IT_ALARM    (1<<3)
 #define OMAP_RTC_INTERRUPTS_IT_TIMER    (1<<2)
 
+/* OMAP_RTC_KICKER values */
+#define	KICK0_VALUE			(0x83e70b13)
+#define	KICK1_VALUE			(0x95a4f1e0)
+
+#define	OMAP_RTC_HAS_KICKER		0x1
+
 static void __iomem	*rtc_base;
 
 #define rtc_read(addr)		__raw_readb(rtc_base + (addr))
 #define rtc_write(val, addr)	__raw_writeb(val, rtc_base + (addr))
 
+#define rtc_writel(val, addr)	writel(val, rtc_base + (addr))
+
 
 /* we rely on the rtc framework to handle locking (rtc->ops_lock),
  * so the only other requirement is that register accesses which
@@ -285,11 +298,22 @@ static struct rtc_class_ops omap_rtc_ops = {
 static int omap_rtc_alarm;
 static int omap_rtc_timer;
 
+static struct platform_device_id omap_rtc_devtype[] = {
+	{
+		.name	= DRIVER_NAME,
+	}, {
+		.name	= "am1808-rtc",
+		.driver_data = OMAP_RTC_HAS_KICKER,
+	}
+};
+MODULE_DEVICE_TABLE(platform, omap_rtc_devtype);
+
 static int __init omap_rtc_probe(struct platform_device *pdev)
 {
 	struct resource		*res, *mem;
 	struct rtc_device	*rtc;
 	u8			reg, new_ctrl;
+	const struct platform_device_id *id_entry;
 
 	omap_rtc_timer = platform_get_irq(pdev, 0);
 	if (omap_rtc_timer <= 0) {
@@ -322,6 +346,12 @@ static int __init omap_rtc_probe(struct platform_device *pdev)
 		goto fail;
 	}
 
+	id_entry = platform_get_device_id(pdev);
+	if (id_entry && (id_entry->driver_data & OMAP_RTC_HAS_KICKER)) {
+		rtc_writel(KICK0_VALUE, OMAP_RTC_KICK0_R);
+		rtc_writel(KICK1_VALUE, OMAP_RTC_KICK1_R);
+	}
+
 	rtc = rtc_device_register(pdev->name, &pdev->dev,
 			&omap_rtc_ops, THIS_MODULE);
 	if (IS_ERR(rtc)) {
@@ -398,6 +428,8 @@ fail2:
 fail1:
 	rtc_device_unregister(rtc);
 fail0:
+	if (id_entry && (id_entry->driver_data & OMAP_RTC_HAS_KICKER))
+		rtc_writel(0, OMAP_RTC_KICK0_R);
 	iounmap(rtc_base);
 fail:
 	release_mem_region(mem->start, resource_size(mem));
@@ -408,6 +440,8 @@ static int __exit omap_rtc_remove(struct platform_device *pdev)
 {
 	struct rtc_device	*rtc = platform_get_drvdata(pdev);
 	struct resource		*mem = dev_get_drvdata(&rtc->dev);
+	const struct platform_device_id *id_entry =
+				platform_get_device_id(pdev);
 
 	device_init_wakeup(&pdev->dev, 0);
 
@@ -420,6 +454,8 @@ static int __exit omap_rtc_remove(struct platform_device *pdev)
 		free_irq(omap_rtc_alarm, rtc);
 
 	rtc_device_unregister(rtc);
+	if (id_entry && (id_entry->driver_data & OMAP_RTC_HAS_KICKER))
+		rtc_writel(0, OMAP_RTC_KICK0_R);
 	iounmap(rtc_base);
 	release_mem_region(mem->start, resource_size(mem));
 	return 0;
@@ -471,9 +507,10 @@ static struct platform_driver omap_rtc_driver = {
 	.resume		= omap_rtc_resume,
 	.shutdown	= omap_rtc_shutdown,
 	.driver		= {
-		.name	= "omap_rtc",
+		.name	= DRIVER_NAME,
 		.owner	= THIS_MODULE,
 	},
+	.id_table	= omap_rtc_devtype,
 };
 
 static int __init rtc_init(void)
-- 
1.7.1

