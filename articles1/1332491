Path: news.gmane.org!not-for-mail
From: Ming Lei <ming.lei@canonical.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH] driver core: free devres in device_release
Date: Wed, 25 Jul 2012 01:42:29 +0800
Lines: 53
Approved: news@gmane.org
Message-ID: <1343151749-16571-1-git-send-email-ming.lei@canonical.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343151773 27391 80.91.229.3 (24 Jul 2012 17:42:53 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 17:42:53 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, Ming Lei <tom.leiming@gmail.com>
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 19:42:52 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Stj8A-0000Xc-QL
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 19:42:47 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755842Ab2GXRmk (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 24 Jul 2012 13:42:40 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:32959 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755255Ab2GXRmj (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 24 Jul 2012 13:42:39 -0400
Original-Received: by ghrr11 with SMTP id r11so6935868ghr.19
        for <linux-kernel@vger.kernel.org>; Tue, 24 Jul 2012 10:42:38 -0700 (PDT)
Original-Received: by 10.66.75.74 with SMTP id a10mr6328161paw.46.1343151758132;
        Tue, 24 Jul 2012 10:42:38 -0700 (PDT)
Original-Received: from localhost ([183.37.197.13])
        by mx.google.com with ESMTPS id se9sm12561914pbc.25.2012.07.24.10.42.36
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 24 Jul 2012 10:42:37 -0700 (PDT)
X-Mailer: git-send-email 1.7.9.5
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332491
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332491>

From: Ming Lei <tom.leiming@gmail.com>

device_del can happen anytime, so once it happens,
the devres of the device will be freed inside device_del, but
drivers can't know it has been deleted and may still add
resources into the device, so memory leak is caused.

This patch moves the devres_release_all to fix the problem.

Signed-off-by: Ming Lei <tom.leiming@gmail.com>
---
 drivers/base/core.c |   18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/base/core.c b/drivers/base/core.c
index f338037..c8fe4a5 100644
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -184,6 +184,17 @@ static void device_release(struct kobject *kobj)
 	struct device *dev = kobj_to_dev(kobj);
 	struct device_private *p = dev->p;
 
+	/*
+	 * Some platform devices are driven without driver attached
+	 * and managed resources may have been acquired.  Make sure
+	 * all resources are released.
+	 *
+	 * Drivers still can add resources into device after device
+	 * is deleted but alive, so release devres here to avoid
+	 * possible memory leak.
+	 */
+	devres_release_all(dev);
+
 	if (dev->release)
 		dev->release(dev);
 	else if (dev->type && dev->type->release)
@@ -1196,13 +1207,6 @@ void device_del(struct device *dev)
 	bus_remove_device(dev);
 	driver_deferred_probe_del(dev);
 
-	/*
-	 * Some platform devices are driven without driver attached
-	 * and managed resources may have been acquired.  Make sure
-	 * all resources are released.
-	 */
-	devres_release_all(dev);
-
 	/* Notify the platform of the removal, in case they
 	 * need to do anything...
 	 */
-- 
1.7.9.5

