Path: news.gmane.org!not-for-mail
From: Florian Tobias Schandinat <FlorianSchandinat@gmx.de>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH] video/smscufx: fix line counting in fb_write
Date: Thu, 26 Jul 2012 17:26:49 +0000
Lines: 76
Approved: news@gmane.org
Message-ID: <50117DD9.6070200@gmx.de>
References: <1334959867-3719-1-git-send-email-holler@ahsoftware.de> <4F92995B.6030805@ahsoftware.de> <4FAFAD7B.6090207@gmx.de> <4FF211BD.8060203@ahsoftware.de>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-15
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343323626 4898 80.91.229.3 (26 Jul 2012 17:27:06 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 17:27:06 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, linux-fbdev@vger.kernel.org
To: Alexander Holler <holler@ahsoftware.de>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 19:27:06 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuRq3-00069K-Oa
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 19:27:04 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752814Ab2GZR0y (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 13:26:54 -0400
Original-Received: from mailout-de.gmx.net ([213.165.64.23]:46549 "HELO
	mailout-de.gmx.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with SMTP id S1752422Ab2GZR0w (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 13:26:52 -0400
Original-Received: (qmail invoked by alias); 26 Jul 2012 17:26:50 -0000
Original-Received: from dslb-092-074-236-028.pools.arcor-ip.net (EHLO [192.168.0.9]) [92.74.236.28]
  by mail.gmx.net (mp069) with SMTP; 26 Jul 2012 19:26:50 +0200
X-Authenticated: #10250065
X-Provags-ID: V01U2FsdGVkX19Ax3JGATtAj2P7xcEmbaoxEFa+t/0qF9fpguicYp
	lSGNjwP47LL0OK
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.16) Gecko/20120613 Icedove/3.0.11
In-Reply-To: <4FF211BD.8060203@ahsoftware.de>
X-Y-GMX-Trusted: 0
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333802
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333802>

On 07/02/2012 09:25 PM, Alexander Holler wrote:
> Hi Florian,
> 
> sorry for the late answer.
> 
> Am 13.05.2012 14:47, schrieb Florian Tobias Schandinat:
>> Hi Alexander,
>>
>> On 04/21/2012 11:26 AM, Alexander Holler wrote:
>>> Hello,
>>>
>>> as for the patch for udlfb, I forgot to mention that this is a candidate
>>> for all stable trees 3.2 and above.
>>>
>>> Btw., the address of the maintainer doesn't seem to be valid anymore.
>>
>> it is better to cc me on patches to the framebuffer subsystem for such
>> cases. I don't have much free time so it's rare that I come around to
>> dig in the mailing list.
>>
>>>
>>> Regards,
>>>
>>> Alexander
>>>
>>> Am 21.04.2012 00:11, schrieb Alexander Holler:
>>>> Line 0 and 1 were both written to line 0 (on the display) and all
>>>> subsequent
>>>> lines had an offset of -1. The result was that the last line on the
>>>> display
>>>> was never overwritten by writes to /dev/fbN.
>>>>
>>>> The origin of this bug seems to have been udlfb.
>>>>
>>>> Signed-off-by: Alexander Holler<holler@ahsoftware.de>
>>>
>>> Cc: stable@vger.kernel.org
>>
>> Patch looks good to me but can be made simpler.
>>
>>>
>>>> ---
>>>>    drivers/video/smscufx.c |    2 +-
>>>>    1 files changed, 1 insertions(+), 1 deletions(-)
>>>>
>>>> diff --git a/drivers/video/smscufx.c b/drivers/video/smscufx.c
>>>> index ccbfef5..1e1e2d2 100644
>>>> --- a/drivers/video/smscufx.c
>>>> +++ b/drivers/video/smscufx.c
>>>> @@ -904,7 +904,7 @@ static ssize_t ufx_ops_write(struct fb_info *info,
>>>> const char __user *buf,
>>>>        result = fb_sys_write(info, buf, count, ppos);
>>>>
>>>>        if (result>  0) {
>>>> -        int start = max((int)(offset / info->fix.line_length) - 1, 0);
>>>> +        int start = max((int)(offset / info->fix.line_length), 0);
>>
>> the cast to int as well as the max is superfluous without the -1 as the
>> value can no longer be negative.
> 
> I had that impression too, but I wanted to change as less as possible,
> so I didn't had the need to check types and (their) sizes for possible
> overflows or such. I was lazy and just wanted to fix that one bug. ;)

Well, as this patch fixes a bug I applied it as is.

> 
>>
>>>>            int lines = min((u32)((result / info->fix.line_length) + 1),
>>>>                    (u32)info->var.yres);
>>>>


Best regards,

Florian Tobias Schandinat
