Path: news.gmane.org!not-for-mail
From: Michel Lespinasse <walken@google.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: [PATCH 1/6] rbtree: rb_erase updates and comments
Date: Fri, 20 Jul 2012 05:31:02 -0700
Lines: 171
Approved: news@gmane.org
Message-ID: <1342787467-5493-2-git-send-email-walken@google.com>
References: <1342787467-5493-1-git-send-email-walken@google.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1342787497 12138 80.91.229.3 (20 Jul 2012 12:31:37 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 12:31:37 +0000 (UTC)
Cc: linux-mm@kvack.org,
	linux-kernel@vger.kernel.org
To: riel@redhat.com,
	peterz@infradead.org,
	daniel.santos@pobox.com,
	aarcange@redhat.com,
	dwmw2@infradead.org,
	akpm@linux-foundation.org
Original-X-From: owner-linux-mm@kvack.org Fri Jul 20 14:31:34 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SsCMn-0007vx-R6
	for glkm-linux-mm-2@m.gmane.org; Fri, 20 Jul 2012 14:31:34 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 406326B005D; Fri, 20 Jul 2012 08:31:32 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 238806B0068; Fri, 20 Jul 2012 08:31:32 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id D62236B0069; Fri, 20 Jul 2012 08:31:31 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx173.postini.com [74.125.245.173])
	by kanga.kvack.org (Postfix) with SMTP id E94E76B005D
	for <linux-mm@kvack.org>; Fri, 20 Jul 2012 08:31:30 -0400 (EDT)
Original-Received: from mail-pb0-f41.google.com ([209.85.160.41]) (using TLSv1) by na3sys010amx173.postini.com ([74.125.244.10]) with SMTP;
	Fri, 20 Jul 2012 12:31:31 GMT
Original-Received: by pbbrp2 with SMTP id rp2so7647111pbb.14
        for <linux-mm@kvack.org>; Fri, 20 Jul 2012 05:31:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references;
        bh=+UGz2bvC/SwtbV25qYELZPYaOFlhKcWfHUUcFRHzOts=;
        b=VEsKMNMh1ar89yv7VXdRSk2AgnZd7BPz7Hpm06Py6rcbULV4cKk9fQ5K1iHKt47qCC
         ZE7XxWBYAKtiLlQZFAqYyRVZdGpsQ3IYtP3MWscPpBDIvhIHX/OMVTnJU8iMcvkSIFXF
         V2jTHsvcMYjrjmqF5j0C0Xl000QSS7rr2SbDozJI84R9Cp/UOuxih4kD9TpklJI4h79F
         wS37M5+AEJ9ZiR7RYj4byE3K3B8XPIKvA8S8D+JgKoK6OH8++cNtOr0xt6+yOw7ugmMo
         tJ+3cOokMNkQ+BYfLRaY7OW/4NXfDIJURRnxcEwmcw2h3CgoJoYtdDiZfRg9IuID5rfD
         NmJQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :x-gm-message-state;
        bh=+UGz2bvC/SwtbV25qYELZPYaOFlhKcWfHUUcFRHzOts=;
        b=dXJshdnHKAQAT2crZ58kUJ7UlIXupdqMNeBacPOYIB+Z+f7SsMLeP8gvHylODP7Yun
         1qO+Qu0wqeim946a1yRoPJeC3ao43HHPuSRhKDLba0TPbP6PPcdfSXDRq49Rh+ZA8a4b
         HLWBKvDSXLJ+dNemp17+RACH71ghvPpyb9Id/0k1a9Ds35U0Wi8A5nmHFJKtaNo7grTH
         j3WhXSyCPXByIjncjo79KCmOTYMwEeL/TZ8BD1puwenyKEvXklmrVL8SctWL8HubWNnr
         3aJSCoIp0GB2Kk0qiPAWqq10kpf3MIn0blhMAhnYsRdxoc4Ex6Jgl2T/AtcFqz/qN9qF
         0KdA==
Original-Received: by 10.68.238.166 with SMTP id vl6mr13418598pbc.96.1342787490051;
        Fri, 20 Jul 2012 05:31:30 -0700 (PDT)
Original-Received: by 10.68.238.166 with SMTP id vl6mr13418574pbc.96.1342787489884;
        Fri, 20 Jul 2012 05:31:29 -0700 (PDT)
Original-Received: from studio.mtv.corp.google.com (studio.mtv.corp.google.com [172.18.96.163])
        by mx.google.com with ESMTPS id wa14sm3906810pbc.10.2012.07.20.05.31.26
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 20 Jul 2012 05:31:26 -0700 (PDT)
X-Mailer: git-send-email 1.7.7.3
In-Reply-To: <1342787467-5493-1-git-send-email-walken@google.com>
X-Gm-Message-State: ALoCoQkZo1K8kYyA8Go0lzrvYG/4zmAz+AfY/NJr+BROVTfts9njgtPdWmDAi9BNwuPLpLzuxQeQYzCa5xF3fl7V8esIWFTifcCykljWQJ/NKZ+o57NgFWBKLRwuI/n5AyD7TkQiZYwJKcVIjByqNWZGNwJMoRy7z3naKiULm5l2BFbQUTV1r1c6JIHOAd7md8x/KLNn2U80
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.1000) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <walken@google.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:82764 gmane.linux.kernel:1330808
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330808>

Minor updates to the rb_erase() function:
- Reorder code to put simplest / common case (no more than 1 child) first.
- Fetch the parent first, since it ends up being required in all 3 cases.
- Add a few comments to illustrate case 2 (node to remove has 2 childs,
  but one of them is the successor) and case 3 (node to remove has 2 childs,
  successor is a left-descendant of the right child).

Signed-off-by: Michel Lespinasse <walken@google.com>
---
 lib/rbtree.c |  115 ++++++++++++++++++++++++++++++++++++----------------------
 1 files changed, 72 insertions(+), 43 deletions(-)

diff --git a/lib/rbtree.c b/lib/rbtree.c
index 0892670..3b6ec98 100644
--- a/lib/rbtree.c
+++ b/lib/rbtree.c
@@ -2,7 +2,8 @@
   Red Black Trees
   (C) 1999  Andrea Arcangeli <andrea@suse.de>
   (C) 2002  David Woodhouse <dwmw2@infradead.org>
-  
+  (C) 2012  Michel Lespinasse <walken@google.com>
+
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
@@ -356,65 +357,93 @@ static void __rb_erase_color(struct rb_node *node, struct rb_node *parent,
 
 void rb_erase(struct rb_node *node, struct rb_root *root)
 {
-	struct rb_node *child, *parent;
-	int color;
+	struct rb_node *parent = rb_parent(node);
+	struct rb_node *child = node->rb_right;
+	struct rb_node *tmp = node->rb_left;
+	bool black;
+
+	if (!tmp) {
+		/* Case 1: node to erase has no more than 1 child (easy!) */
+		if (child)
+one_child:
+			rb_set_parent(child, parent);
+		if (parent) {
+			if (parent->rb_left == node)
+				parent->rb_left = child;
+			else
+				parent->rb_right = child;
+		} else
+			root->rb_node = child;
 
-	if (!node->rb_left)
-		child = node->rb_right;
-	else if (!node->rb_right)
-		child = node->rb_left;
-	else {
-		struct rb_node *old = node, *left;
+		black = rb_is_black(node);
+	} else if (!child) {
+		/* Still case 1, but this time the child is node->rb_left */
+		child = tmp;
+		goto one_child;
+	} else {
+		struct rb_node *old = node;
 
+		/*
+		 * Old is the node we want to erase. It's got left and right
+		 * children, which makes things difficult. Let's find the
+		 * next node in the tree to have it fill old's position.
+		 */
 		node = node->rb_right;
-		while ((left = node->rb_left) != NULL)
-			node = left;
+		while ((tmp = node->rb_left) != NULL)
+			node = tmp;
 
-		if (rb_parent(old)) {
-			if (rb_parent(old)->rb_left == old)
-				rb_parent(old)->rb_left = node;
+		/* Graft node (old's successor) under old's parent. */
+		if (parent) {
+			if (parent->rb_left == old)
+				parent->rb_left = node;
 			else
-				rb_parent(old)->rb_right = node;
+				parent->rb_right = node;
 		} else
 			root->rb_node = node;
 
-		child = node->rb_right;
 		parent = rb_parent(node);
-		color = rb_color(node);
+		black = rb_is_black(node);
+		node->__rb_parent_color = old->__rb_parent_color;
+
+		/*
+		 * Node doesn't have a left child, since it is old's successor,
+		 * so we can take old's left child and graft it under node.
+		 */
+		node->rb_left = tmp = old->rb_left;
+		rb_set_parent(tmp, node);
 
+		child = node->rb_right;
 		if (parent == old) {
+			/*
+			 * Case 2: old is node's parent (we are done!)
+			 *
+			 *    (o)          (n)
+			 *    / \          / \
+			 *  (x) (n)  ->  (x) (c)
+			 *        \
+			 *        (c)
+			 */
 			parent = node;
 		} else {
+			/*
+			 * Case 3: old is node's ancestor but not its parent
+			 *
+			 *    (o)          (n)
+			 *    / \          / \
+			 *  (x) (y)  ->  (x) (y)
+			 *      /            /
+			 *    (n)          (c)
+			 *      \
+			 *      (c)
+			 */
+			node->rb_right = tmp = old->rb_right;
+			parent->rb_left = child;
+			rb_set_parent(tmp, node);
 			if (child)
 				rb_set_parent(child, parent);
-			parent->rb_left = child;
-
-			node->rb_right = old->rb_right;
-			rb_set_parent(old->rb_right, node);
 		}
-
-		node->__rb_parent_color = old->__rb_parent_color;
-		node->rb_left = old->rb_left;
-		rb_set_parent(old->rb_left, node);
-
-		goto color;
 	}
-
-	parent = rb_parent(node);
-	color = rb_color(node);
-
-	if (child)
-		rb_set_parent(child, parent);
-	if (parent) {
-		if (parent->rb_left == node)
-			parent->rb_left = child;
-		else
-			parent->rb_right = child;
-	} else
-		root->rb_node = child;
-
-color:
-	if (color == RB_BLACK)
+	if (black)
 		__rb_erase_color(child, parent, root);
 }
 EXPORT_SYMBOL(rb_erase);
-- 
1.7.7.3

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

