Path: news.gmane.org!not-for-mail
From: James Courtier-Dutton <james.dutton@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 0/2][RFC] Better handling of insane CMOS values
Date: Tue, 31 Jul 2012 10:54:26 +0100
Lines: 87
Approved: news@gmane.org
Message-ID: <CAAMvbhGnNAChs+6mzdRduzgYmWRXQexsbS=w0wgrRhAKrdL6QA@mail.gmail.com>
References: <1343716548-38742-1-git-send-email-john.stultz@linaro.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Trace: dough.gmane.org 1343728481 22878 80.91.229.3 (31 Jul 2012 09:54:41 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 09:54:41 +0000 (UTC)
Cc: linux-kernel <linux-kernel@vger.kernel.org>,
	Ingo Molnar <mingo@kernel.org>,
	Peter Zijlstra <a.p.zijlstra@chello.nl>,
	Prarit Bhargava <prarit@redhat.com>,
	Thomas Gleixner <tglx@linutronix.de>,
	Zhouping Liu <zliu@redhat.com>, CAI Qian <caiqian@redhat.com>
To: John Stultz <john.stultz@linaro.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 31 11:54:37 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sw99t-00082w-Ri
	for glk-linux-kernel-3@plane.gmane.org; Tue, 31 Jul 2012 11:54:34 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755365Ab2GaJya (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 31 Jul 2012 05:54:30 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:58435 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754749Ab2GaJy1 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 31 Jul 2012 05:54:27 -0400
Original-Received: by yhmm54 with SMTP id m54so5843454yhm.19
        for <linux-kernel@vger.kernel.org>; Tue, 31 Jul 2012 02:54:26 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=ucmu4cjPFXviphIU9RPT82/S5y0rRW5gAdYMbIXeZzI=;
        b=Lue0cO0kz0M6bvKQCRLfqrq8AjWmylsIEmHNWZmVbro3wzOeRlCdlgiv/wkKp3Vs/S
         0LqW//FnhnVt7mib9/lW9BJ/zC0NUbPSHn27ZYizskTgYH8bY5E4KjsD/PzAI8Ph5Gkp
         I+4NS48JYBQlm81gKr3DleJ/9b0IPt0GDW6zrgbz2q1ONBBhKASKMXGunGqMpCbgR4jy
         e0PedRnGCRfOHLZvvZ9pPcHcJ+qYo/W5epZ4pJfHwtjGpxyepHZEt+/64wAk/E/A6WXJ
         w5CAvujuGRVv/2TRTJAnZETpmKpKQsqrooa914SclQV8aMGqT9ywvs8OeBVxSDHD9G7P
         QC8A==
Original-Received: by 10.66.78.99 with SMTP id a3mr5670726pax.22.1343728466458; Tue, 31
 Jul 2012 02:54:26 -0700 (PDT)
Original-Received: by 10.142.185.1 with HTTP; Tue, 31 Jul 2012 02:54:26 -0700 (PDT)
In-Reply-To: <1343716548-38742-1-git-send-email-john.stultz@linaro.org>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335584
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335584>

On 31 July 2012 07:35, John Stultz <john.stultz@linaro.org> wrote:
> So CAI Qian noticed recent boot trouble on a machine that had its CMOS
> clock configured for the year 8200.
> See: http://lkml.org/lkml/2012/7/29/188
>
> While running with a crazy CMOS clock isn't advised, and a simple
> "don't do that" might be reasonable, the behavior has in effect
> regressed recently due to changes in the hrtimer/timekeeping
> interactions.
>
Would it not be easier to work out which CMOS clock values we can
handle correctly, and then do input value validation on the CMOS
values, and if a value is outside the acceptable range, assume a value
equal to the minimum acceptable value.

Also, surely all timer use within the kernel should use the monotonic
time source for timer expiry, and not depend on CMOS time.
I.e. If we want a thread to wake up once every 30 seconds, use the
monotonic time source for that.
conversion to local time should only be needed for timestamps.
We might need a compile/boot time option to assign useable ranges to
local time values.
E.g. For this boot, local time is between year 2000 and 2100
For next boot, local time is between year 2050 and 2150.
Obviously, make the range as wide as we can sensibly handle, so the
setting does not need to be changed very often.
The range will be determined by the amount of bits in the time values.
User space can work on much wider ranges for historical date storage,
but for accessing the current time, smaller ranges are workable.

Kind Regards

James








> This patchset tries to resolve this issue in two ways:
> 1) Change ktime_get_update_offsets to match ktime_get and avoid
> possible precision loss with extremely large timespecs.
>
> 2) Catch any stop attempt to set the time to a value (circa the
> year 2264) large enough to overflow ktime_t.
>
> The end fix here might be an either/or/both combination of these
> two changes, so I wanted to send them out for comment. I'm also
> looking at further ways to test and improve robustness around
> these more extreme time values.
>
> I've also only been able to lightly test. If you want to try this out
> you can add the following to timekeeping_init after the
> read_persistent_clock() call:
>
>         now.tv_sec = 196469280000LL;
>
> thanks
> -john
>
>
> Cc: Ingo Molnar <mingo@kernel.org>
> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
> Cc: Prarit Bhargava <prarit@redhat.com>
> Cc: Thomas Gleixner <tglx@linutronix.de>
> Cc: Zhouping Liu <zliu@redhat.com>
> Cc: CAI Qian <caiqian@redhat.com>
>
>
> John Stultz (2):
>   [RFC] time: Fix problem with large timespecs &
>     ktime_get_update_offsets
>   [RFC] time: Limit time values that would overflow ktime_t
>
>  kernel/time/timekeeping.c |   40 ++++++++++++++++++++++++++++++----------
>  1 file changed, 30 insertions(+), 10 deletions(-)
>
> --
> 1.7.9.5
>
> --
> To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
> the body of a message to majordomo@vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> Please read the FAQ at  http://www.tux.org/lkml/
