Path: news.gmane.org!not-for-mail
From: Jeff Layton <jlayton@redhat.com>
Newsgroups: gmane.linux.redhat.security.audit,gmane.linux.file-systems,gmane.linux.kernel
Subject: [PATCH v5 3/9] audit: reverse arguments to audit_inode_child
Date: Thu, 26 Jul 2012 07:21:07 -0400
Lines: 153
Approved: news@gmane.org
Message-ID: <1343301673-10642-4-git-send-email-jlayton@redhat.com>
References: <1343301673-10642-1-git-send-email-jlayton@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343301719 8982 80.91.229.3 (26 Jul 2012 11:21:59 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 11:21:59 +0000 (UTC)
Cc: linux-fsdevel@vger.kernel.org, linux-audit@redhat.com,
        linux-kernel@vger.kernel.org
To: eparis@redhat.com, viro@zeniv.linux.org.uk
Original-X-From: linux-audit-bounces@redhat.com Thu Jul 26 13:21:59 2012
Return-path: <linux-audit-bounces@redhat.com>
Envelope-to: glrsa-linux-audit@gmane.org
Original-Received: from mx4-phx2.redhat.com ([209.132.183.25])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-audit-bounces@redhat.com>)
	id 1SuM8k-0000zu-HD
	for glrsa-linux-audit@gmane.org; Thu, 26 Jul 2012 13:21:58 +0200
Original-Received: from lists01.pubmisc.prod.ext.phx2.redhat.com (lists01.pubmisc.prod.ext.phx2.redhat.com [10.5.19.33])
	by mx4-phx2.redhat.com (8.13.8/8.13.8) with ESMTP id q6QBLXGl031109;
	Thu, 26 Jul 2012 07:21:33 -0400
Original-Received: from int-mx10.intmail.prod.int.phx2.redhat.com
	(int-mx10.intmail.prod.int.phx2.redhat.com [10.5.11.23])
	by lists01.pubmisc.prod.ext.phx2.redhat.com (8.13.8/8.13.8) with ESMTP
	id q6QBLVN9011635 for <linux-audit@listman.util.phx.redhat.com>;
	Thu, 26 Jul 2012 07:21:31 -0400
Original-Received: from mx1.redhat.com (ext-mx16.extmail.prod.ext.phx2.redhat.com
	[10.5.110.21])
	by int-mx10.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with ESMTP
	id q6QBLQJR026204
	for <linux-audit@redhat.com>; Thu, 26 Jul 2012 07:21:26 -0400
Original-Received: from mail-gg0-f174.google.com (mail-gg0-f174.google.com
	[209.85.161.174])
	by mx1.redhat.com (8.14.4/8.14.4) with ESMTP id q6QBLLt2011478
	for <linux-audit@redhat.com>; Thu, 26 Jul 2012 07:21:25 -0400
Original-Received: by mail-gg0-f174.google.com with SMTP id u4so1952946ggl.33
	for <linux-audit@redhat.com>; Thu, 26 Jul 2012 04:21:24 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=google.com; s=20120113;
	h=sender:from:to:cc:subject:date:message-id:x-mailer:in-reply-to
	:references:x-gm-message-state;
	bh=dBdYB6AAFVd8ujnfoBJwIXd5HUi7AILfwqSvPfafjoc=;
	b=gmb5+IDBVxQtE89mIQ515m8hwi+x0A97ZffWWvAn03yyCeICiSEbY59bQVUHcc9B5S
	0tv1STq6h0Zhy0fBHMhBx+GI+vvM32e0n7371Lk0yO9TWy3eK5F2joWFRHAR7mkAyxAA
	1m+6M7sVJ0ym7fCXB/jJ5X/wvRwF2aBEgeiLKUuPRteFfMaOZgE2H/0gsLOOulweKjGC
	81usIgjPgtc6VovAGn1u3dw0qq0BsrnLUIrWwH9ViPkQxhgKmGYiCDYfpPZp69NFeFp3
	1ly+rEnC5DQj7UrF/DvoOmR9UCSduK6HsYYjE/zcrevcjBAr670bhF5bGsehBQVLWbyR
	o6pw==
Original-Received: by 10.236.103.100 with SMTP id e64mr3896498yhg.5.1343301684120;
	Thu, 26 Jul 2012 04:21:24 -0700 (PDT)
Original-Received: from salusa.poochiereds.net (cpe-076-182-054-194.nc.res.rr.com.
	[76.182.54.194])
	by mx.google.com with ESMTPS id e24sm41620099yhh.4.2012.07.26.04.21.22
	(version=SSLv3 cipher=OTHER); Thu, 26 Jul 2012 04:21:23 -0700 (PDT)
In-Reply-To: <1343301673-10642-1-git-send-email-jlayton@redhat.com>
X-Gm-Message-State: ALoCoQkRw9dIIkKbvNYF3bBGIBppjHTjZd8poWeXwgl2dsL8+pweS8DnjEYwCctbvhZRPX0dPURB
X-RedHat-Spam-Score: -2.6  (BAYES_00,RCVD_IN_DNSWL_LOW)
X-RedHat-Possible-Forgery: <jlayton@poochiereds.net> Jeff Layton
	<jlayton@redhat.com>
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.23
X-Scanned-By: MIMEDefang 2.68 on 10.5.110.21
X-loop: linux-audit@redhat.com
X-BeenThere: linux-audit@redhat.com
X-Mailman-Version: 2.1.12
Precedence: junk
List-Id: Linux Audit Discussion <linux-audit.redhat.com>
List-Unsubscribe: <https://www.redhat.com/mailman/options/linux-audit>,
	<mailto:linux-audit-request@redhat.com?subject=unsubscribe>
List-Archive: <https://www.redhat.com/archives/linux-audit>
List-Post: <mailto:linux-audit@redhat.com>
List-Help: <mailto:linux-audit-request@redhat.com?subject=help>
List-Subscribe: <https://www.redhat.com/mailman/listinfo/linux-audit>,
	<mailto:linux-audit-request@redhat.com?subject=subscribe>
Original-Sender: linux-audit-bounces@redhat.com
Errors-To: linux-audit-bounces@redhat.com
Xref: news.gmane.org gmane.linux.redhat.security.audit:4338 gmane.linux.file-systems:66235 gmane.linux.kernel:1333561
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333561>

Most of the callers get called with an inode and dentry in the reverse
order. The compiler then has to reshuffle the arg registers and/or
stack in order to pass them on to audit_inode_child.

Reverse those arguments for a micro-optimization.

Reported-by: Eric Paris <eparis@redhat.com>
Signed-off-by: Jeff Layton <jlayton@redhat.com>
---
 fs/btrfs/ioctl.c         |  2 +-
 fs/namei.c               |  2 +-
 include/linux/audit.h    | 14 +++++++-------
 include/linux/fsnotify.h |  8 ++++----
 kernel/auditsc.c         |  8 ++++----
 5 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 1e9f6c0..5c83f4d 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -592,7 +592,7 @@ static int btrfs_may_delete(struct inode *dir,struct dentry *victim,int isdir)
 		return -ENOENT;
 
 	BUG_ON(victim->d_parent->d_inode != dir);
-	audit_inode_child(victim, dir);
+	audit_inode_child(dir, victim);
 
 	error = inode_permission(dir, MAY_WRITE | MAY_EXEC);
 	if (error)
diff --git a/fs/namei.c b/fs/namei.c
index f252f36..1077c2a 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -2060,7 +2060,7 @@ static int may_delete(struct inode *dir,struct dentry *victim,int isdir)
 		return -ENOENT;
 
 	BUG_ON(victim->d_parent->d_inode != dir);
-	audit_inode_child(victim, dir);
+	audit_inode_child(dir, victim);
 
 	error = inode_permission(dir, MAY_WRITE | MAY_EXEC);
 	if (error)
diff --git a/include/linux/audit.h b/include/linux/audit.h
index 22f292a..51eca54 100644
--- a/include/linux/audit.h
+++ b/include/linux/audit.h
@@ -461,8 +461,8 @@ extern void __audit_syscall_exit(int ret_success, long ret_value);
 extern void __audit_getname(const char *name);
 extern void audit_putname(const char *name);
 extern void __audit_inode(const char *name, const struct dentry *dentry);
-extern void __audit_inode_child(const struct dentry *dentry,
-				const struct inode *parent);
+extern void __audit_inode_child(const struct inode *parent,
+				const struct dentry *dentry);
 extern void __audit_seccomp(unsigned long syscall, long signr, int code);
 extern void __audit_ptrace(struct task_struct *t);
 
@@ -501,10 +501,10 @@ static inline void audit_inode(const char *name, const struct dentry *dentry) {
 	if (unlikely(!audit_dummy_context()))
 		__audit_inode(name, dentry);
 }
-static inline void audit_inode_child(const struct dentry *dentry,
-				     const struct inode *parent) {
+static inline void audit_inode_child(const struct inode *parent,
+				     const struct dentry *dentry) {
 	if (unlikely(!audit_dummy_context()))
-		__audit_inode_child(dentry, parent);
+		__audit_inode_child(parent, dentry);
 }
 void audit_core_dumps(long signr);
 
@@ -630,9 +630,9 @@ extern int audit_signals;
 #define audit_getname(n) do { ; } while (0)
 #define audit_putname(n) do { ; } while (0)
 #define __audit_inode(n,d) do { ; } while (0)
-#define __audit_inode_child(i,p) do { ; } while (0)
+#define __audit_inode_child(p,d) do { ; } while (0)
 #define audit_inode(n,d) do { (void)(d); } while (0)
-#define audit_inode_child(i,p) do { ; } while (0)
+#define audit_inode_child(p,d) do { ; } while (0)
 #define audit_core_dumps(i) do { ; } while (0)
 #define audit_seccomp(i,s,c) do { ; } while (0)
 #define auditsc_get_stamp(c,t,s) (0)
diff --git a/include/linux/fsnotify.h b/include/linux/fsnotify.h
index a6dfe69..9c28471 100644
--- a/include/linux/fsnotify.h
+++ b/include/linux/fsnotify.h
@@ -109,7 +109,7 @@ static inline void fsnotify_move(struct inode *old_dir, struct inode *new_dir,
 
 	if (source)
 		fsnotify(source, FS_MOVE_SELF, moved->d_inode, FSNOTIFY_EVENT_INODE, NULL, 0);
-	audit_inode_child(moved, new_dir);
+	audit_inode_child(new_dir, moved);
 }
 
 /*
@@ -155,7 +155,7 @@ static inline void fsnotify_inoderemove(struct inode *inode)
  */
 static inline void fsnotify_create(struct inode *inode, struct dentry *dentry)
 {
-	audit_inode_child(dentry, inode);
+	audit_inode_child(inode, dentry);
 
 	fsnotify(inode, FS_CREATE, dentry->d_inode, FSNOTIFY_EVENT_INODE, dentry->d_name.name, 0);
 }
@@ -168,7 +168,7 @@ static inline void fsnotify_create(struct inode *inode, struct dentry *dentry)
 static inline void fsnotify_link(struct inode *dir, struct inode *inode, struct dentry *new_dentry)
 {
 	fsnotify_link_count(inode);
-	audit_inode_child(new_dentry, dir);
+	audit_inode_child(dir, new_dentry);
 
 	fsnotify(dir, FS_CREATE, inode, FSNOTIFY_EVENT_INODE, new_dentry->d_name.name, 0);
 }
@@ -181,7 +181,7 @@ static inline void fsnotify_mkdir(struct inode *inode, struct dentry *dentry)
 	__u32 mask = (FS_CREATE | FS_ISDIR);
 	struct inode *d_inode = dentry->d_inode;
 
-	audit_inode_child(dentry, inode);
+	audit_inode_child(inode, dentry);
 
 	fsnotify(inode, mask, d_inode, FSNOTIFY_EVENT_INODE, dentry->d_name.name, 0);
 }
diff --git a/kernel/auditsc.c b/kernel/auditsc.c
index 5c45b9b..12b007b 100644
--- a/kernel/auditsc.c
+++ b/kernel/auditsc.c
@@ -2176,9 +2176,9 @@ out:
 }
 
 /**
- * audit_inode_child - collect inode info for created/removed objects
- * @dentry: dentry being audited
+ * __audit_inode_child - collect inode info for created/removed objects
  * @parent: inode of dentry parent
+ * @dentry: dentry being audited
  *
  * For syscalls that create or remove filesystem objects, audit_inode
  * can only collect information for the filesystem object's parent.
@@ -2188,8 +2188,8 @@ out:
  * must be hooked prior, in order to capture the target inode during
  * unsuccessful attempts.
  */
-void __audit_inode_child(const struct dentry *dentry,
-			 const struct inode *parent)
+void __audit_inode_child(const struct inode *parent,
+			 const struct dentry *dentry)
 {
 	struct audit_context *context = current->audit_context;
 	const char *found_parent = NULL, *found_child = NULL;
-- 
1.7.11.2

