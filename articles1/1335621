Path: news.gmane.org!not-for-mail
From: Konstantin Khlebnikov <khlebnikov@openvz.org>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: [PATCH v3 05/10] mm: kill vma flag VM_INSERTPAGE
Date: Tue, 31 Jul 2012 14:42:17 +0400
Lines: 126
Approved: news@gmane.org
Message-ID: <20120731104217.20515.69943.stgit@zurg>
References: <20120731103724.20515.60334.stgit@zurg>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343731353 12898 80.91.229.3 (31 Jul 2012 10:42:33 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 10:42:33 +0000 (UTC)
Cc: Carsten Otte <cotte@de.ibm.com>, Ingo Molnar <mingo@redhat.com>,
 Linus Torvalds <torvalds@linux-foundation.org>,
 Peter Zijlstra <a.p.zijlstra@chello.nl>, Nick Piggin <npiggin@kernel.dk>
To: linux-mm@kvack.org, Andrew Morton <akpm@linux-foundation.org>,
 linux-kernel@vger.kernel.org
Original-X-From: owner-linux-mm@kvack.org Tue Jul 31 12:42:28 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1Sw9uB-0004YU-RU
	for glkm-linux-mm-2@m.gmane.org; Tue, 31 Jul 2012 12:42:24 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 8616B6B007B; Tue, 31 Jul 2012 06:42:22 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 6F67B6B007D; Tue, 31 Jul 2012 06:42:22 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 3856E6B0080; Tue, 31 Jul 2012 06:42:22 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx174.postini.com [74.125.245.174])
	by kanga.kvack.org (Postfix) with SMTP id 4C38E6B007B
	for <linux-mm@kvack.org>; Tue, 31 Jul 2012 06:42:21 -0400 (EDT)
Original-Received: from mail-lb0-f169.google.com ([209.85.217.169]) (using TLSv1) by na3sys010amx174.postini.com ([74.125.244.10]) with SMTP;
	Tue, 31 Jul 2012 10:42:21 GMT
Original-Received: by mail-lb0-f169.google.com with SMTP id n8so4882724lbj.14
        for <linux-mm@kvack.org>; Tue, 31 Jul 2012 03:42:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:subject:to:from:cc:date:message-id:in-reply-to:references
         :user-agent:mime-version:content-type:content-transfer-encoding;
        bh=eA4wNJRYerAhbW3JOmePbAzcNZsXh38w64O2giNx7ss=;
        b=qqkdqatVlBRYXknEGv6nNTHY0+sskRF55jPmVLwyDUSqxmW7Ot/qdYtpOi85D/54wl
         4mDNCi/CgwUwA2GgsLO1PVLjw3J2h/80D4ismGgQlpIAr0pOaDWe3R+9gEvxQHH92DwQ
         Rt6XPAU0Cwq8FCGrqa5avsiWHr5+pzj12j2+q8u6Fki+mWrRDtz4jNo6OKkueFNkVzPw
         fMde/LaVKGceO5dN4AuPa8C9LAlz35d0IJD4XUG6jTyLxjAht4RZGWPCtiKO8qkwYrqV
         bJ5Y9lB7d+NkXWNgjYS9LnOOMYnHMFq90XfU0504kHEmHFVLiA3rpguYtRa3uwJPld+F
         nr1w==
Original-Received: by 10.152.122.12 with SMTP id lo12mr14503713lab.3.1343731340688;
        Tue, 31 Jul 2012 03:42:20 -0700 (PDT)
Original-Received: from localhost ([94.181.234.27])
        by mx.google.com with ESMTPS id q8sm21611lbj.2.2012.07.31.03.42.18
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 31 Jul 2012 03:42:19 -0700 (PDT)
In-Reply-To: <20120731103724.20515.60334.stgit@zurg>
User-Agent: StGit/0.15
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.0100) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <khlebnikov@openvz.org> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83219 gmane.linux.kernel:1335621
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335621>

This patch merges VM_INSERTPAGE into VM_MIXEDMAP.
VM_MIXEDMAP VMA can mix pure-pfn ptes, special ptes and normal ptes.

Now copy_page_range() always copies VM_MIXEDMAP VMA on fork like VM_PFNMAP.
If driver populates whole VMA at mmap() it probably not expects page-faults.

This patch removes special check from vma_wants_writenotify() which disables
pages write tracking for VMA populated via vm_instert_page(). BDI below mapped
file should not use dirty-accounting, moreover do_wp_page() can handle this.

vm_insert_page() still marks vma after first usage. Usually it is called from
f_op->mmap() handler under mm->mmap_sem write-lock, so it able to change
vma->vm_flags. Caller must set VM_MIXEDMAP at mmap time if it wants to call
this function from other places, for example from page-fault handler.

Signed-off-by: Konstantin Khlebnikov <khlebnikov@openvz.org>
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Cc: Nick Piggin <npiggin@kernel.dk>
Cc: Carsten Otte <cotte@de.ibm.com>
Cc: Ingo Molnar <mingo@redhat.com>
---
 include/linux/mm.h |    1 -
 mm/huge_memory.c   |    3 +--
 mm/ksm.c           |    2 +-
 mm/memory.c        |   14 ++++++++++++--
 mm/mmap.c          |    2 +-
 5 files changed, 15 insertions(+), 7 deletions(-)

diff --git a/include/linux/mm.h b/include/linux/mm.h
index 22c945b..cdff0ed 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -103,7 +103,6 @@ extern unsigned int kobjsize(const void *objp);
 #define VM_HUGETLB	0x00400000	/* Huge TLB Page VM */
 #define VM_NONLINEAR	0x00800000	/* Is non-linear (remap_file_pages) */
 #define VM_ARCH_1	0x01000000	/* Architecture-specific flag */
-#define VM_INSERTPAGE	0x02000000	/* The vma has had "vm_insert_page()" done on it */
 #define VM_NODUMP	0x04000000	/* Do not include in the core dump */
 
 #define VM_CAN_NONLINEAR 0x08000000	/* Has ->fault & does nonlinear pages */
diff --git a/mm/huge_memory.c b/mm/huge_memory.c
index 67721f8..8b3c55a 100644
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@ -1491,8 +1491,7 @@ out:
 	return ret;
 }
 
-#define VM_NO_THP (VM_SPECIAL|VM_INSERTPAGE|VM_MIXEDMAP| \
-		   VM_HUGETLB|VM_SHARED|VM_MAYSHARE)
+#define VM_NO_THP (VM_SPECIAL|VM_MIXEDMAP|VM_HUGETLB|VM_SHARED|VM_MAYSHARE)
 
 int hugepage_madvise(struct vm_area_struct *vma,
 		     unsigned long *vm_flags, int advice)
diff --git a/mm/ksm.c b/mm/ksm.c
index d1cbe2a..f9ccb16 100644
--- a/mm/ksm.c
+++ b/mm/ksm.c
@@ -1469,7 +1469,7 @@ int ksm_madvise(struct vm_area_struct *vma, unsigned long start,
 		 */
 		if (*vm_flags & (VM_MERGEABLE | VM_SHARED  | VM_MAYSHARE   |
 				 VM_PFNMAP    | VM_IO      | VM_DONTEXPAND |
-				 VM_RESERVED  | VM_HUGETLB | VM_INSERTPAGE |
+				 VM_RESERVED  | VM_HUGETLB |
 				 VM_NONLINEAR | VM_MIXEDMAP))
 			return 0;		/* just ignore the advice */
 
diff --git a/mm/memory.c b/mm/memory.c
index aca6f22..2fb27a0 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -1047,7 +1047,8 @@ int copy_page_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
 	 * readonly mappings. The tradeoff is that copy_page_range is more
 	 * efficient than faulting.
 	 */
-	if (!(vma->vm_flags & (VM_HUGETLB|VM_NONLINEAR|VM_PFNMAP|VM_INSERTPAGE))) {
+	if (!(vma->vm_flags & (VM_HUGETLB | VM_NONLINEAR |
+			       VM_PFNMAP | VM_MIXEDMAP))) {
 		if (!vma->anon_vma)
 			return 0;
 	}
@@ -2082,6 +2083,11 @@ out:
  * ask for a shared writable mapping!
  *
  * The page does not need to be reserved.
+ *
+ * Usually this function is called from f_op->mmap() handler
+ * under mm->mmap_sem write-lock, so it can change vma->vm_flags.
+ * Caller must set VM_MIXEDMAP on vma if it wants to call this
+ * function from other places, for example from page-fault handler.
  */
 int vm_insert_page(struct vm_area_struct *vma, unsigned long addr,
 			struct page *page)
@@ -2090,7 +2096,11 @@ int vm_insert_page(struct vm_area_struct *vma, unsigned long addr,
 		return -EFAULT;
 	if (!page_count(page))
 		return -EINVAL;
-	vma->vm_flags |= VM_INSERTPAGE;
+	if (!(vma->vm_flags & VM_MIXEDMAP)) {
+		BUG_ON(down_read_trylock(&vma->vm_mm->mmap_sem));
+		BUG_ON(vma->vm_flags & VM_PFNMAP);
+		vma->vm_flags |= VM_MIXEDMAP;
+	}
 	return insert_page(vma, addr, page, vma->vm_page_prot);
 }
 EXPORT_SYMBOL(vm_insert_page);
diff --git a/mm/mmap.c b/mm/mmap.c
index 3edfcdf..47a74c4 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -1188,7 +1188,7 @@ int vma_wants_writenotify(struct vm_area_struct *vma)
 		return 0;
 
 	/* Specialty mapping? */
-	if (vm_flags & (VM_PFNMAP|VM_INSERTPAGE))
+	if (vm_flags & VM_PFNMAP)
 		return 0;
 
 	/* Can the mapping track the dirty pages? */

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

