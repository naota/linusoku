Path: news.gmane.org!not-for-mail
From: Jeff Layton <jlayton@redhat.com>
Newsgroups: gmane.linux.file-systems,gmane.linux.kernel
Subject: [PATCH] vfs: don't let do_last pass negative dentry to audit_inode
Date: Wed, 25 Jul 2012 10:19:47 -0400
Lines: 81
Approved: news@gmane.org
Message-ID: <1343225987-6807-1-git-send-email-jlayton@redhat.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343226002 32132 80.91.229.3 (25 Jul 2012 14:20:02 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 14:20:02 +0000 (UTC)
Cc: miklos@szeredi.hu, linux-fsdevel@vger.kernel.org,
	linux-kernel@vger.kernel.org
To: viro@zeniv.linux.org.uk
Original-X-From: linux-fsdevel-owner@vger.kernel.org Wed Jul 25 16:20:01 2012
Return-path: <linux-fsdevel-owner@vger.kernel.org>
Envelope-to: lnx-linux-fsdevel@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-fsdevel-owner@vger.kernel.org>)
	id 1Su2RU-0004LB-Lh
	for lnx-linux-fsdevel@plane.gmane.org; Wed, 25 Jul 2012 16:20:01 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933117Ab2GYOT6 (ORCPT <rfc822;lnx-linux-fsdevel@m.gmane.org>);
	Wed, 25 Jul 2012 10:19:58 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:48180 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S933089Ab2GYOT5 (ORCPT
	<rfc822;linux-fsdevel@vger.kernel.org>);
	Wed, 25 Jul 2012 10:19:57 -0400
Original-Received: by ghrr11 with SMTP id r11so756119ghr.19
        for <linux-fsdevel@vger.kernel.org>; Wed, 25 Jul 2012 07:19:56 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=sender:from:to:cc:subject:date:message-id:x-mailer
         :x-gm-message-state;
        bh=tgqEVIUOvhGNlypSsw2vDkOO6UkL7/C34ONIaGOYNXY=;
        b=a7oETq9Z9XxMuproBLlzopVNY4jol2u1iAYnstthxC3GMwy5+CXhatX5LrxyzkMwsB
         Ij67DhqnesPOECU3bvC7NOBA1pfl7DNxospKrX/WXWmdgvGAcn9HZAZLQUjHScYx2B5F
         Be8iTmC1U7zNiqDyh3YQoQ5AMSjDsb99n7tXbx+6cuQAk5KgbJwTKHa7B1IlpzxE30Xw
         uX4NjZCUpWArKEmBjSdE3SCVMdruVNMzXWDppQqAhq2ROwg7HIIyvFED34hipAw7ij4C
         +GSCXmBBy2ieUA3uCfW+te5dyo5M68Mq0u317KrmmCspevPaD6vhzaC9nsVx5LZ/bB35
         s8Og==
Original-Received: by 10.236.73.198 with SMTP id v46mr9395037yhd.80.1343225996479;
        Wed, 25 Jul 2012 07:19:56 -0700 (PDT)
Original-Received: from salusa.poochiereds.net (cpe-076-182-054-194.nc.res.rr.com. [76.182.54.194])
        by mx.google.com with ESMTPS id o43sm31327388yhm.0.2012.07.25.07.19.54
        (version=SSLv3 cipher=OTHER);
        Wed, 25 Jul 2012 07:19:55 -0700 (PDT)
X-Mailer: git-send-email 1.7.11.2
X-Gm-Message-State: ALoCoQl8uEuS4WOsfgXC3Yv0Pd+9OTvQelP8oy0KjDMlkS/00qqb+MQ8j5jAvH6Xh5ykT/n86AnW
Original-Sender: linux-fsdevel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-fsdevel.vger.kernel.org>
X-Mailing-List: linux-fsdevel@vger.kernel.org
Xref: news.gmane.org gmane.linux.file-systems:66197 gmane.linux.kernel:1333009
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333009>

I can reliably reproduce the following panic by simply setting an audit
rule on a recent 3.5.0+ kernel:

 BUG: unable to handle kernel NULL pointer dereference at 0000000000000040
 IP: [<ffffffff810d1250>] audit_copy_inode+0x10/0x90
 PGD 7acd9067 PUD 7b8fb067 PMD 0
 Oops: 0000 [#86] SMP
 Modules linked in: nfs nfs_acl auth_rpcgss fscache lockd sunrpc tpm_bios btrfs zlib_deflate libcrc32c kvm_amd kvm joydev virtio_net pcspkr i2c_piix4 floppy virtio_balloon microcode virtio_blk cirrus drm_kms_helper ttm drm i2c_core [last unloaded: scsi_wait_scan]
 CPU 0
 Pid: 1286, comm: abrt-dump-oops Tainted: G      D      3.5.0+ #1 Bochs Bochs
 RIP: 0010:[<ffffffff810d1250>]  [<ffffffff810d1250>] audit_copy_inode+0x10/0x90
 RSP: 0018:ffff88007aebfc38  EFLAGS: 00010282
 RAX: 0000000000000000 RBX: ffff88003692d860 RCX: 00000000000038c4
 RDX: 0000000000000000 RSI: ffff88006baf5d80 RDI: ffff88003692d860
 RBP: ffff88007aebfc68 R08: 0000000000000000 R09: 0000000000000000
 R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000
 R13: ffff880036d30f00 R14: ffff88006baf5d80 R15: ffff88003692d800
 FS:  00007f7562634740(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 0000000000000040 CR3: 000000003643d000 CR4: 00000000000006f0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
 Process abrt-dump-oops (pid: 1286, threadinfo ffff88007aebe000, task ffff880079614530)
 Stack:
  ffff88007aebfdf8 ffff88007aebff28 ffff88007aebfc98 ffffffff81211358
  ffff88003692d860 0000000000000000 ffff88007aebfcc8 ffffffff810d4968
  ffff88007aebfcc8 ffff8800000038c4 0000000000000000 0000000000000000
 Call Trace:
  [<ffffffff81211358>] ? ext4_lookup+0xe8/0x160
  [<ffffffff810d4968>] __audit_inode+0x118/0x2d0
  [<ffffffff811955a9>] do_last+0x999/0xe80
  [<ffffffff81191fe8>] ? inode_permission+0x18/0x50
  [<ffffffff81171efa>] ? kmem_cache_alloc_trace+0x11a/0x130
  [<ffffffff81195b4a>] path_openat+0xba/0x420
  [<ffffffff81196111>] do_filp_open+0x41/0xa0
  [<ffffffff811a24bd>] ? alloc_fd+0x4d/0x120
  [<ffffffff811855cd>] do_sys_open+0xed/0x1c0
  [<ffffffff810d40cc>] ? __audit_syscall_entry+0xcc/0x300
  [<ffffffff811856c1>] sys_open+0x21/0x30
  [<ffffffff81611ca9>] system_call_fastpath+0x16/0x1b
  RSP <ffff88007aebfc38>
 CR2: 0000000000000040

The problem is that do_last is passing a negative dentry to audit_inode.
The comments on lookup_open note that it can pass back a negative dentry
if O_CREAT is not set.

This patch fixes the oops, but I'm not clear on whether there's a better
approach.

Cc: Miklos Szeredi <miklos@szeredi.hu>
Signed-off-by: Jeff Layton <jlayton@redhat.com>
---
 fs/namei.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/fs/namei.c b/fs/namei.c
index 2ccc35c..0b951d4 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -2608,9 +2608,10 @@ retry_lookup:
 	}
 
 	/*
-	 * It already exists.
+	 * create/update audit record if it already exists.
 	 */
-	audit_inode(pathname, path->dentry);
+	if (path->dentry->d_inode)
+		audit_inode(pathname, path->dentry);
 
 	/*
 	 * If atomic_open() acquired write access it is dropped now due to
-- 
1.7.11.2

--
To unsubscribe from this list: send the line "unsubscribe linux-fsdevel" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

