Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 03/41] mm: fix lost kswapd wakeup in kswapd_stop()
Date: Mon, 30 Jul 2012 10:31:02 -0700
Lines: 85
Approved: news@gmane.org
Message-ID: <20120730172901.577904115@linuxfoundation.org>
References: <20120730172901.306897424@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343669583 24723 80.91.229.3 (30 Jul 2012 17:33:03 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 17:33:03 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk,
	Aaditya Kumar <aaditya.kumar@ap.sony.com>,
	KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>,
	Minchan Kim <minchan@kernel.org>, Mel Gorman <mel@csn.ul.ie>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 30 19:33:01 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Svtq1-0002Oh-0s
	for glk-linux-kernel-3@plane.gmane.org; Mon, 30 Jul 2012 19:33:01 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754680Ab2G3RcV (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 30 Jul 2012 13:32:21 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:38517 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754534Ab2G3RcR (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 30 Jul 2012 13:32:17 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rp8so10147880pbb.19
        for <linux-kernel@vger.kernel.org>; Mon, 30 Jul 2012 10:32:17 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=mWBGgST15rfKhPcLz09rkzFssKHnvX5kBtsT19RdJhc=;
        b=ebPlOlstELh5pOYoX7/v2Afv4wJ5pjAuguCDYoPcpjhvEkyo5a8n9AEcwU0f1oramE
         CDLEnL+HNi3A0vqmM243YYNxb7fsBQWI0H03wNCU5JtzUTmF5GFPaNBhgg3rOpXMz1Sc
         G2EOnuVqeaWRpA6O/8LH7j0bMGV2M3SN/eaZHxGbkPYnKrOC96gVFaYjznD/tupeHK5t
         wZsW54w846DY4o0KeOkXwzFZ+QyYFY2CGntTG5cH1PNQENurTvhWTuAp1aDRRwqdb/Ml
         0FLftJr8gsYx3ZkWRC8eb1qsViwzO7ZGEBarpj6lqQGJSf4GdyKrkCXACLtHj6JLDnDl
         d5zg==
Original-Received: by 10.68.235.236 with SMTP id up12mr36796910pbc.79.1343669536837;
        Mon, 30 Jul 2012 10:32:16 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id hf4sm8302408pbc.4.2012.07.30.10.32.14
        (version=TLSv1/SSLv3 cipher=OTHER);
        Mon, 30 Jul 2012 10:32:15 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120730172901.306897424@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQnXER9CH/iCfIl6XxIrS29wl/upcRWtSHBZ4WHJUg56kBbKCOEc5bZNX0oDnjaqol40B2Ua
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335190 gmane.linux.kernel.stable:28935
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335190>

From: Greg KH <gregkh@linuxfoundation.org>

3.0-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Aaditya Kumar <aaditya.kumar.30@gmail.com>

commit 1c7e7f6c0703d03af6bcd5ccc11fc15d23e5ecbe upstream.

Offlining memory may block forever, waiting for kswapd() to wake up
because kswapd() does not check the event kthread->should_stop before
sleeping.

The proper pattern, from Documentation/memory-barriers.txt, is:

   ---  waker  ---
   event_indicated = 1;
   wake_up_process(event_daemon);

   ---  sleeper  ---
   for (;;) {
      set_current_state(TASK_UNINTERRUPTIBLE);
      if (event_indicated)
         break;
      schedule();
   }

   set_current_state() may be wrapped by:
      prepare_to_wait();

In the kswapd() case, event_indicated is kthread->should_stop.

  === offlining memory (waker) ===
   kswapd_stop()
      kthread_stop()
         kthread->should_stop = 1
         wake_up_process()
         wait_for_completion()

  ===  kswapd_try_to_sleep (sleeper) ===
   kswapd_try_to_sleep()
      prepare_to_wait()
           .
           .
      schedule()
           .
           .
      finish_wait()

The schedule() needs to be protected by a test of kthread->should_stop,
which is wrapped by kthread_should_stop().

Reproducer:
   Do heavy file I/O in background.
   Do a memory offline/online in a tight loop

Signed-off-by: Aaditya Kumar <aaditya.kumar@ap.sony.com>
Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
Reviewed-by: Minchan Kim <minchan@kernel.org>
Acked-by: Mel Gorman <mel@csn.ul.ie>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 mm/vmscan.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -2695,7 +2695,10 @@ static void kswapd_try_to_sleep(pg_data_
 		 * them before going back to sleep.
 		 */
 		set_pgdat_percpu_threshold(pgdat, calculate_normal_threshold);
-		schedule();
+
+		if (!kthread_should_stop())
+			schedule();
+
 		set_pgdat_percpu_threshold(pgdat, calculate_pressure_threshold);
 	} else {
 		if (remaining)


