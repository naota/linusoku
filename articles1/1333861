Path: news.gmane.org!not-for-mail
From: Peter Zijlstra <peterz@infradead.org>
Newsgroups: gmane.linux.kernel
Subject: Re: thp and memory barrier assumptions
Date: Thu, 26 Jul 2012 22:33:25 +0200
Lines: 33
Approved: news@gmane.org
Message-ID: <1343334805.32120.13.camel@twins>
References: <1343334698.32120.11.camel@twins>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7BIT
X-Trace: dough.gmane.org 1343334831 10278 80.91.229.3 (26 Jul 2012 20:33:51 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 20:33:51 +0000 (UTC)
Cc: Rik van Riel <riel@redhat.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	paulmck <paulmck@linux.vnet.ibm.com>,
	Oleg Nesterov <oleg@redhat.com>,
	linux-kernel <linux-kernel@vger.kernel.org>,
	Hugh Dickins <hughd@google.com>
To: Andrea Arcangeli <aarcange@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 22:33:50 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuUkn-0008Sv-Oz
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 22:33:50 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752269Ab2GZUdl (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 16:33:41 -0400
Original-Received: from merlin.infradead.org ([205.233.59.134]:54218 "EHLO
	merlin.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752083Ab2GZUdl convert rfc822-to-8bit (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 16:33:41 -0400
Original-Received: from canuck.infradead.org ([134.117.69.58])
	by merlin.infradead.org with esmtps (Exim 4.76 #1 (Red Hat Linux))
	id 1SuUkT-0002J4-7t; Thu, 26 Jul 2012 20:33:29 +0000
Original-Received: from dhcp-089-099-019-018.chello.nl ([89.99.19.18] helo=twins)
	by canuck.infradead.org with esmtpsa (Exim 4.76 #1 (Red Hat Linux))
	id 1SuUkS-00089K-59; Thu, 26 Jul 2012 20:33:28 +0000
Original-Received: by twins (Postfix, from userid 1000)
	id 232658471CA5; Thu, 26 Jul 2012 22:33:25 +0200 (CEST)
In-Reply-To: <1343334698.32120.11.camel@twins>
X-Mailer: Evolution 3.2.2- 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333861
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333861>

On Thu, 2012-07-26 at 22:31 +0200, Peter Zijlstra wrote:
> __do_huge_pmd_anonymous_page() contains:
> 
>                 /*
>                  * The spinlocking to take the lru_lock inside
>                  * page_add_new_anon_rmap() acts as a full memory
>                  * barrier to be sure clear_huge_page writes become
>                  * visible after the set_pmd_at() write.
>                  */
>                 page_add_new_anon_rmap(page, vma, haddr);
> 
> 
> page_add_new_anon_rmap() doesn't look to actually do a LOCK+UNLOCK
> except for unevictable pages.
> 
> But even if it did do an unconditional LOCK+UNLOCK that doesn't make a
> full memory barrier, see Documentation/memory-barriers.txt.
> 
> In particular:
> 
>         *A = a;
>         LOCK
>         UNLOCK
>         *B = b;
> 
> may occur as:
> 
>         LOCK, STORE *B, STORE *A, UNLOCK
> 


Also, what is that barrier() in handle_mm_fault() doing? And why doesn't
it have a comment explaining that?
