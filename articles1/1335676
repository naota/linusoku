Path: news.gmane.org!not-for-mail
From: Mitsuo Hayasaka <mitsuo.hayasaka.hu@hitachi.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH] sysctl: fix improper indication of integer sysctl parameter
Date: Tue, 31 Jul 2012 22:03:14 +0900
Lines: 91
Approved: news@gmane.org
Message-ID: <20120731130314.24441.85882.stgit@ltc137.sdl.hitachi.co.jp>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343739381 13374 80.91.229.3 (31 Jul 2012 12:56:21 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 12:56:21 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, yrl.pp-manager.tt@hitachi.com,
	Mitsuo Hayasaka <mitsuo.hayasaka.hu@hitachi.com>,
	"Eric W. Biederman" <ebiederm@xmission.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	David Howells <dhowells@redhat.com>,
	James Morris <james.l.morris@oracle.com>
To: "Eric W. Biederman" <ebiederm@xmission.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	David Howells <dhowells@redhat.com>,
	James Morris <james.l.morris@oracle.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 31 14:56:19 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SwBzn-0002dm-5O
	for glk-linux-kernel-3@plane.gmane.org; Tue, 31 Jul 2012 14:56:19 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756314Ab2GaM4K (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 31 Jul 2012 08:56:10 -0400
Original-Received: from mail7.hitachi.co.jp ([133.145.228.42]:37108 "EHLO
	mail7.hitachi.co.jp" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756297Ab2GaM4H (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 31 Jul 2012 08:56:07 -0400
Original-Received: from mlsv3.hitachi.co.jp (unknown [133.144.234.166])
	by mail7.hitachi.co.jp (Postfix) with ESMTP id B182437AC3;
	Tue, 31 Jul 2012 21:56:05 +0900 (JST)
Original-Received: from mfilter03.hitachi.co.jp by mlsv3.hitachi.co.jp (8.13.1/8.13.1) id q6VCu5xc030871; Tue, 31 Jul 2012 21:56:05 +0900
Original-Received: from vshuts4.hitachi.co.jp (vshuts4.hitachi.co.jp [10.201.6.80])
	by mfilter03.hitachi.co.jp (Switch-3.3.4/Switch-3.3.4) with ESMTP id q6VCu4Yb023639;
	Tue, 31 Jul 2012 21:56:05 +0900
X-AuditID: b753bd60-932c5ba0000047ca-3f-5017d5e49c28
Original-Received: from hsdlmain.sdl.hitachi.co.jp (unknown [133.144.14.194])
	by vshuts4.hitachi.co.jp (Symantec Mail Security) with ESMTP id 6F4752043C1;
	Tue, 31 Jul 2012 21:56:04 +0900 (JST)
Original-Received: from hsdlvgate2.sdl.hitachi.co.jp by hsdlmain.sdl.hitachi.co.jp (8.13.8/3.7W11021512) id q6VCu4i0010078; Tue, 31 Jul 2012 21:56:04 +0900
X-AuditID: b753bd60-932c5ba0000047ca-3f-5017d5e49c28
Original-Received: from sdl99w.sdl.hitachi.co.jp (sdl99w.sdl.hitachi.co.jp [133.144.14.250])
	by hsdlvgate2.sdl.hitachi.co.jp (Symantec Mail Security) with ESMTP id 16268236561;
	Tue, 31 Jul 2012 21:56:04 +0900 (JST)
Original-Received: from ltc137.sdl.hitachi.co.jp (unknown [10.232.29.64])
	by sdl99w.sdl.hitachi.co.jp (Postfix) with ESMTP id 06E9453C1FA;
	Tue, 31 Jul 2012 21:55:56 +0900 (JST)
User-Agent: StGIT/0.14.3
X-Brightmail-Tracker: AAAAAA==
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335676
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335676>

Hi,

This patch fixes the improper type casting of integer
sysctl parameters.

When we read the sysctl parameter, they are always treated
as signed integer, and are casted into unsigned long type
in the current kernel. If we set a value equivalent to
(the maximum value in signed integer + 1) which is a power
of 2 and just causes the overflow, they outputs unexpected
value.

This bug can be reproduced as follows.

Example)
 # echo $((1<<31)) > /proc/sys/fs/lease-break-time
 # cat /proc/sys/fs/lease-break-time
 -18446744071562067968
   (It should be -2147483648.)
or
 # echo XXX > /proc/sys/fs/pipe-max-size
   (where XXX is an arbitrary number between (1<<30 + 1) and
    (1<<31 - 1) since the pipe-max-size is rounded up to a
    power of 2 in kernel.)
 # cat /proc/sys/fs/pipe-max-size
 -18446744071562067968
   (It should be -2147483648.)

To fix this problem, this patch casts the negative integer
into unsigned int type, instead of unsigned long type.

Signed-off-by: Mitsuo Hayasaka <mitsuo.hayasaka.hu@hitachi.com>
Cc: "Eric W. Biederman" <ebiederm@xmission.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: David Howells <dhowells@redhat.com>
Cc: James Morris <james.l.morris@oracle.com>
---

 kernel/sysctl.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index 97186b9..e282b5b 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -1789,7 +1789,7 @@ static int do_proc_dointvec_conv(bool *negp, unsigned long *lvalp,
 		int val = *valp;
 		if (val < 0) {
 			*negp = true;
-			*lvalp = (unsigned long)-val;
+			*lvalp = (unsigned int)-val;
 		} else {
 			*negp = false;
 			*lvalp = (unsigned long)val;
@@ -1982,7 +1982,7 @@ static int do_proc_dointvec_minmax_conv(bool *negp, unsigned long *lvalp,
 		int val = *valp;
 		if (val < 0) {
 			*negp = true;
-			*lvalp = (unsigned long)-val;
+			*lvalp = (unsigned int)-val;
 		} else {
 			*negp = false;
 			*lvalp = (unsigned long)val;
@@ -2197,7 +2197,7 @@ static int do_proc_dointvec_jiffies_conv(bool *negp, unsigned long *lvalp,
 		unsigned long lval;
 		if (val < 0) {
 			*negp = true;
-			lval = (unsigned long)-val;
+			lval = (unsigned int)-val;
 		} else {
 			*negp = false;
 			lval = (unsigned long)val;
@@ -2220,7 +2220,7 @@ static int do_proc_dointvec_userhz_jiffies_conv(bool *negp, unsigned long *lvalp
 		unsigned long lval;
 		if (val < 0) {
 			*negp = true;
-			lval = (unsigned long)-val;
+			lval = (unsigned int)-val;
 		} else {
 			*negp = false;
 			lval = (unsigned long)val;
@@ -2241,7 +2241,7 @@ static int do_proc_dointvec_ms_jiffies_conv(bool *negp, unsigned long *lvalp,
 		unsigned long lval;
 		if (val < 0) {
 			*negp = true;
-			lval = (unsigned long)-val;
+			lval = (unsigned int)-val;
 		} else {
 			*negp = false;
 			lval = (unsigned long)val;

