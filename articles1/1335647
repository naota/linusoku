Path: news.gmane.org!not-for-mail
From: Fabio Baltieri <fabio.baltieri@gmail.com>
Newsgroups: gmane.linux.can,gmane.linux.kernel
Subject: Re: [PATCH can-next v3 1/2] can: add tx/rx LED trigger support
Date: Tue, 31 Jul 2012 13:55:39 +0200
Lines: 114
Approved: news@gmane.org
Message-ID: <20120731115539.GA30417@gmail.com>
References: <1343676041-29572-1-git-send-email-fabio.baltieri@gmail.com>
 <50179B81.3040907@grandegger.com>
 <5017AFAB.1040609@pengutronix.de>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343735636 14415 80.91.229.3 (31 Jul 2012 11:53:56 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 11:53:56 +0000 (UTC)
Cc: Wolfgang Grandegger <wg@grandegger.com>, linux-can@vger.kernel.org,
	linux-kernel@vger.kernel.org,
	Oliver Hartkopp <socketcan@hartkopp.net>
To: Marc Kleine-Budde <mkl@pengutronix.de>
Original-X-From: linux-can-owner@vger.kernel.org Tue Jul 31 13:53:56 2012
Return-path: <linux-can-owner@vger.kernel.org>
Envelope-to: glc-linux-can2@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-can-owner@vger.kernel.org>)
	id 1SwB1O-0001pi-W9
	for glc-linux-can2@plane.gmane.org; Tue, 31 Jul 2012 13:53:55 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756034Ab2GaLxx (ORCPT <rfc822;glc-linux-can2@m.gmane.org>);
	Tue, 31 Jul 2012 07:53:53 -0400
Original-Received: from mail-bk0-f46.google.com ([209.85.214.46]:56411 "EHLO
	mail-bk0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756030Ab2GaLxw (ORCPT
	<rfc822;linux-can@vger.kernel.org>); Tue, 31 Jul 2012 07:53:52 -0400
Original-Received: by bkwj10 with SMTP id j10so3245643bkw.19
        for <multiple recipients>; Tue, 31 Jul 2012 04:53:50 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:x-operating-system
         :user-agent;
        bh=X4oboUgS/CKMfcfdzUiN6WNmAqqrmvF+Fa3ozsYpuyU=;
        b=IvFLtLqBQTfqZP/+nwIg2HC1I/Ftfel1Vaqx45lWjhMWTv+4vt3goMOYFiukKW7O1l
         mbrb/ZZUNbl0oXz4BchJm/aQ1gSFRlT1y8D7qqF7jP5KHZDJYYgAhNYq5716Uycqc7zH
         YqvsG+nDzS2XfjEMDPguKvyK3bFvA9GDLth3YMvu87GsW6qtCgQf2s9ckMCP43LLPICb
         r8mJkcr9tkU/EPPzR9XKXKzGCgYkn+01g3A2dYtGcUD1ay2jPX+GXSek0FcX8iJHH23J
         yQMxRYXLj4ky+IQ4vgxatc7RfD2wx2p8EZOHO8XEUlyz2/K9pj3jkf6G46vVNYNZgpd7
         7Blg==
Original-Received: by 10.204.133.194 with SMTP id g2mr5084898bkt.13.1343735630505;
        Tue, 31 Jul 2012 04:53:50 -0700 (PDT)
Original-Received: from localhost (host228-251-static.95-94-b.business.telecomitalia.it. [94.95.251.228])
        by mx.google.com with ESMTPS id 14sm5230476bkq.12.2012.07.31.04.53.48
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 31 Jul 2012 04:53:49 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <5017AFAB.1040609@pengutronix.de>
X-Operating-System: Linux balto-eee 3.5.0-balto-eee-07086-g6f8d3bf GNU/Linux
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-can-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-can.vger.kernel.org>
X-Mailing-List: linux-can@vger.kernel.org
Xref: news.gmane.org gmane.linux.can:1848 gmane.linux.kernel:1335647
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335647>

On Tue, Jul 31, 2012 at 12:12:59PM +0200, Marc Kleine-Budde wrote:
> >> +/*
> >> + * Register CAN LED triggers for a CAN device
> >> + *
> >> + * This is normally called from a driver's probe function
> >> + */
> >> +void can_led_init(struct net_device *netdev)
> >> +{
> >> +	struct can_priv *priv = netdev_priv(netdev);
> >> +
> >> +	priv->tx_led_trig_name = kasprintf(GFP_KERNEL, "%s-tx", netdev->name);
> >> +	if (!priv->tx_led_trig_name)
> >> +		goto tx_led_failed;
> > 
> > Just return here?

Right.

> >> +	priv->rx_led_trig_name = kasprintf(GFP_KERNEL, "%s-rx", netdev->name);
> >> +	if (!priv->rx_led_trig_name)
> >> +		goto rx_led_failed;
> >> +
> >> +	led_trigger_register_simple(priv->tx_led_trig_name,
> >> +				    &priv->tx_led_trig);
> >> +	led_trigger_register_simple(priv->rx_led_trig_name,
> >> +				    &priv->rx_led_trig);
> >> +
> >> +	return;
> >> +
> >> +rx_led_failed:
> >> +	kfree(priv->tx_led_trig_name);
> >> +	priv->tx_led_trig_name = NULL;
> >> +tx_led_failed:
> >> +	return;
> > 
> > In case of error the function returns silently. Is this by purpose? What
> > happens if CAN_LEDS is enabled but no LEDs are assigned?
> 
> It's a bit strange, but led_trigger_register_simple() can fail silently,
> too. Or better it has no return value, but does a warning printk in case
> of an error.

Well, that's in line with the behviour of leds trigger registration in
other subsystems out there (mac80211 and power_supply for instance) but
now that you pointed it out, I agree that this is not really nice to the
user.  led_trigger_register_simple already has a printk to KERN_ERR, I
may add another one in the error path (if we keep the kasprintf).

> 
> > 
> >> +}
> >> +EXPORT_SYMBOL_GPL(can_led_init);
> >> +
> >> +/*
> >> + * Unregister CAN LED triggers for a CAN device
> >> + *
> >> + * This is normally called from a driver's remove function
> >> + */
> >> +void can_led_exit(struct net_device *netdev)
> >> +{
> >> +	struct can_priv *priv = netdev_priv(netdev);
> >> +
> >> +	led_trigger_unregister_simple(priv->tx_led_trig);
> >> +	led_trigger_unregister_simple(priv->rx_led_trig);
> >> +
> >> +	kfree(priv->tx_led_trig_name);
> >> +	kfree(priv->rx_led_trig_name);
> >> +}
> >> +EXPORT_SYMBOL_GPL(can_led_exit);
> >> diff --git a/include/linux/can/dev.h b/include/linux/can/dev.h
> >> index 2b2fc34..167b04a 100644
> >> --- a/include/linux/can/dev.h
> >> +++ b/include/linux/can/dev.h
> >> @@ -16,6 +16,7 @@
> >>  #include <linux/can.h>
> >>  #include <linux/can/netlink.h>
> >>  #include <linux/can/error.h>
> >> +#include <linux/can/led.h>
> >>  
> >>  /*
> >>   * CAN mode
> >> @@ -52,6 +53,13 @@ struct can_priv {
> >>  
> >>  	unsigned int echo_skb_max;
> >>  	struct sk_buff **echo_skb;
> >> +
> >> +#ifdef CONFIG_CAN_LEDS
> >> +	struct led_trigger *tx_led_trig;
> >> +	char *tx_led_trig_name;
> >> +	struct led_trigger *rx_led_trig;
> >> +	char *rx_led_trig_name;
> >> +#endif
> > 
> > Do we need to store the names?
> 
> Yes, Seems, so the name is not copied:
> 
> http://lxr.free-electrons.com/source/drivers/leds/led-triggers.c#L253
> 
> Marc

Actually we may try to exploit struct led_trigger to get back the
pointers, but then we have to free the names before calling
led_trigger_unregister, and that's going to be race against
led_trigger_show().  Anyway, those pointers would go away using a
devm-based allocation, so I'll keep that in mind.

Thanks,
Fabio
--
To unsubscribe from this list: send the line "unsubscribe linux-can" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

