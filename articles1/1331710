Path: news.gmane.org!not-for-mail
From: James Bottomley <James.Bottomley@HansenPartnership.com>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.janitors,gmane.linux.ports.parisc
Subject: Re: [next:akpm 129/309] net/core/sock.c:274:36: error: initializer
 element is not constant
Date: Mon, 23 Jul 2012 12:20:20 +0100
Lines: 79
Approved: news@gmane.org
Message-ID: <1343042420.3027.11.camel@dabdike.int.hansenpartnership.com>
References: <20120722163058.GB13376@localhost>
	 <20120723111619.GT9222@suse.de>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343042437 17370 80.91.229.3 (23 Jul 2012 11:20:37 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 23 Jul 2012 11:20:37 +0000 (UTC)
Cc: Fengguang Wu <fengguang.wu@intel.com>,
	kernel-janitors@vger.kernel.org,
	Kyle McMartin <kyle@parisc-linux.org>,
	Andrew Morton <akpm@linux-foundation.org>,
	LKML <linux-kernel@vger.kernel.org>,
	Parisc List <linux-parisc@vger.kernel.org>
To: Mel Gorman <mgorman@suse.de>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 23 13:20:35 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StGgk-00037E-RT
	for glk-linux-kernel-3@plane.gmane.org; Mon, 23 Jul 2012 13:20:35 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752566Ab2GWLU1 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 23 Jul 2012 07:20:27 -0400
Original-Received: from bedivere.hansenpartnership.com ([66.63.167.143]:40552 "EHLO
	bedivere.hansenpartnership.com" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1752263Ab2GWLUZ (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 23 Jul 2012 07:20:25 -0400
Original-Received: from localhost (localhost [127.0.0.1])
	by bedivere.hansenpartnership.com (Postfix) with ESMTP id A454C8EE144;
	Mon, 23 Jul 2012 04:20:24 -0700 (PDT)
Original-Received: from bedivere.hansenpartnership.com ([127.0.0.1])
	by localhost (bedivere.hansenpartnership.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id E1zMOIPVD2gX; Mon, 23 Jul 2012 04:20:24 -0700 (PDT)
Original-Received: from [10.234.27.60] (unknown [217.41.238.220])
	by bedivere.hansenpartnership.com (Postfix) with ESMTPSA id 0D4738EE092;
	Mon, 23 Jul 2012 04:20:22 -0700 (PDT)
In-Reply-To: <20120723111619.GT9222@suse.de>
X-Mailer: Evolution 3.2.3 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331710 gmane.linux.kernel.janitors:25186 gmane.linux.ports.parisc:4499
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331710>

[Parisc list cc added]
On Mon, 2012-07-23 at 12:16 +0100, Mel Gorman wrote:
> On Mon, Jul 23, 2012 at 12:30:58AM +0800, Fengguang Wu wrote:
> > Hi Mel,
> > 
> > To be frank, I don't quite understand this build failure..
> > 
> > tree:   next/akpm akpm
> > head:   37e2ad4953983527f7bdb6831bf478eedcc84082
> > commit: 799dc3a908b1df8b766c35aefc24c1b5356aa051 [129/309] netvm: allow skb allocation to use PFMEMALLOC reserves
> > config: parisc-defconfig (attached as .config)
> > 
> > All related error/warning messages:
> > 
> > net/core/sock.c:274:36: error: initializer element is not constant
> > net/core/sock.c:274:36: error: (near initialization for 'memalloc_socks')
> > net/core/sock.c:274:36: error: initializer element is not constant
> > 
> 
> It looks parisc specific so am adding some parisc because this builds but
> I am less sure if it is actually correct. If it's correct, it should be
> appear before the swap-over-nfs patches to avoid bisection problems.
> I've added some parisc folk for review.
> 
> ---8<---
> parisc: Redefine ATOMIC_INIT and ATOMIC64_INIT like other architectures
> 
> The following build error occured during a parisc build with
> swap-over-NFS patches applied.
> 
> net/core/sock.c:274:36: error: initializer element is not constant
> net/core/sock.c:274:36: error: (near initialization for 'memalloc_socks')
> net/core/sock.c:274:36: error: initializer element is not constant
> 
> It's not obvious but this is due to how ATOMIC_INIT is defined on
> parisc. It should affect any user of STATIC_KEY_INIT_FALSE on that
> platform.
> 
> This patch makes the definition of ATOMIC_INIT on parisc to look like
> other arches definition.
> 
> Reported-by: Fengguang Wu <fengguang.wu@intel.com>
> Signed-off-by: Mel Gorman <mgorman@suse.de>
> ---
>  arch/parisc/include/asm/atomic.h |    4 ++--
>  1 file changed, 2 insertions(+), 2 deletions(-)
> 
> diff --git a/arch/parisc/include/asm/atomic.h b/arch/parisc/include/asm/atomic.h
> index 6c6defc..af9cf30 100644
> --- a/arch/parisc/include/asm/atomic.h
> +++ b/arch/parisc/include/asm/atomic.h
> @@ -141,7 +141,7 @@ static __inline__ int __atomic_add_unless(atomic_t *v, int a, int u)
>  
>  #define atomic_sub_and_test(i,v)	(atomic_sub_return((i),(v)) == 0)
>  
> -#define ATOMIC_INIT(i)	((atomic_t) { (i) })
> +#define ATOMIC_INIT(i)	{ (i) }
>  
>  #define smp_mb__before_atomic_dec()	smp_mb()
>  #define smp_mb__after_atomic_dec()	smp_mb()
> @@ -150,7 +150,7 @@ static __inline__ int __atomic_add_unless(atomic_t *v, int a, int u)
>  
>  #ifdef CONFIG_64BIT
>  
> -#define ATOMIC64_INIT(i) ((atomic64_t) { (i) })
> +#define ATOMIC64_INIT(i) { (i) }
>  
>  static __inline__ s64
>  __atomic64_add_return(s64 i, atomic64_t *v)

OK, I don't understand this either ... why would not casting to the
appropriate type suddenly stop warning about the initialiser being non
constant.  It looks like some type of gcc bug to me.  Our toolchain
expert (Dave) hangs out on the parisc list ... he'll want to know your
gcc -v.

James


