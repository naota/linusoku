Path: news.gmane.org!not-for-mail
From: Rik van Riel <riel@redhat.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 10/19] mm, mpol: Use special PROT_NONE to migrate pages
Date: Tue, 31 Jul 2012 17:24:03 -0400
Lines: 56
Approved: news@gmane.org
Message-ID: <50184CF3.8040505@redhat.com>
References: <20120731191204.540691987@chello.nl> <20120731192808.950441936@chello.nl>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343769877 16982 80.91.229.3 (31 Jul 2012 21:24:37 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 21:24:37 +0000 (UTC)
Cc: mingo@kernel.org, oleg@redhat.com, pjt@google.com,
	akpm@linux-foundation.org, torvalds@linux-foundation.org,
	tglx@linutronix.de, Lee.Schermerhorn@hp.com,
	linux-kernel@vger.kernel.org
To: Peter Zijlstra <a.p.zijlstra@chello.nl>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 31 23:24:35 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SwJvZ-00029c-H7
	for glk-linux-kernel-3@plane.gmane.org; Tue, 31 Jul 2012 23:24:29 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753956Ab2GaVYW (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 31 Jul 2012 17:24:22 -0400
Original-Received: from mx1.redhat.com ([209.132.183.28]:18619 "EHLO mx1.redhat.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752631Ab2GaVYU (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 31 Jul 2012 17:24:20 -0400
Original-Received: from int-mx01.intmail.prod.int.phx2.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])
	by mx1.redhat.com (8.14.4/8.14.4) with ESMTP id q6VLO6tk027808
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Tue, 31 Jul 2012 17:24:06 -0400
Original-Received: from annuminas.surriel.com (ovpn-113-30.phx2.redhat.com [10.3.113.30])
	by int-mx01.intmail.prod.int.phx2.redhat.com (8.13.8/8.13.8) with ESMTP id q6VLO3FN016312
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Tue, 31 Jul 2012 17:24:04 -0400
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20120430 Thunderbird/12.0.1
In-Reply-To: <20120731192808.950441936@chello.nl>
X-Scanned-By: MIMEDefang 2.67 on 10.5.11.11
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1336033
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336033>

On 07/31/2012 03:12 PM, Peter Zijlstra wrote:

> +	if (unlikely(pmd_trans_splitting(entry))) {
> +		spin_unlock(&mm->page_table_lock);
> +		wait_split_huge_page(vma->anon_vma, pmd);
> +		return;
> +	}
> +
> +#ifdef CONFIG_NUMA
> +	page = pmd_page(entry);
> +	VM_BUG_ON(!PageCompound(page) || !PageHead(page));
> +
> +	get_page(page);
> +	spin_unlock(&mm->page_table_lock);
> +
> +	/*
> +	 * XXX should we serialize against split_huge_page ?
> +	 */

I believe we are already serialized here, because we check
for pmd_trans_splitting while holding the page table lock.

The THP code grabs the page table lock when modifying this
status, so we should be good.

> +	/*
> +	 * Due to lacking code to migrate thp pages, we'll split
> +	 * (which preserves the special PROT_NONE) and re-take the
> +	 * fault on the normal pages.
> +	 */
> +	split_huge_page(page);
> +	put_page(page);
> +	return;

Likewise, the THP code serializes split_huge_page, and has
protection against multiple simultaneous invocations of
split_huge_page.

A second invocation of split_huge_page will see that the
page was already split, and it will bail out.

> +do_fixup:
> +	spin_lock(&mm->page_table_lock);
> +	if (unlikely(!pmd_same(*pmd, entry)))
> +		goto out_unlock;

If the THP was split for another reason than a NUMA
fault, the !pmd_same check here should result in us
doing the right thing automatically.

I believe this code is correct.

Acked-by: Rik van Riel <riel@redhat.com>

-- 
All rights reversed
