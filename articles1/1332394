Path: news.gmane.org!not-for-mail
From: Cong Wang <xiyou.wangcong@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: Re: x86/mm: Limit 2/4M size calculation to x86_32
Date: Tue, 24 Jul 2012 23:52:34 +0800
Lines: 45
Approved: news@gmane.org
Message-ID: <CAM_iQpVPzB69R1_4E_J5Yw=d1TncqHe0+dWEwOufQniNcpBVtg@mail.gmail.com>
References: <5000259D.9020303@canonical.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Trace: dough.gmane.org 1343145165 2947 80.91.229.3 (24 Jul 2012 15:52:45 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 15:52:45 +0000 (UTC)
Cc: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
	Ingo Molnar <mingo@elte.hu>, Yinghai Lu <yinghai@kernel.org>,
	Tejun Heo <tj@kernel.org>
To: Stefan Bader <stefan.bader@canonical.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 17:52:44 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SthPg-0006wY-8D
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 17:52:44 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755747Ab2GXPwg (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 24 Jul 2012 11:52:36 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:63338 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755468Ab2GXPwf (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 24 Jul 2012 11:52:35 -0400
Original-Received: by pbbrp8 with SMTP id rp8so12863950pbb.19
        for <linux-kernel@vger.kernel.org>; Tue, 24 Jul 2012 08:52:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=caVnp78RC19e/pmXRf6ISC7x5gnie4QKm+Sw2HdUqCQ=;
        b=hqOIdo+uy+rs6Iz1fPwzC/fK1zH1aIPn0lDCztp5RLX/4PgSkNdfvohRhBwk43lTwp
         q4nS1QYcTBQSvZJehO6qp8OjYJyW7FLazCwxRL+f4ybyVy6NbXdfqhKvwnq0MtABxADX
         LxYzPMoBjmqhIHoQaKXiwrC7FxAsnvvUXwAsVtusTMM4tiUn2EMvs6+oJDT8m4MKgVfC
         Gq1Mpsvmu2mmF8VoBrQdfBbCdzcu8oRotHRA8bCv6nMLzKOS+zxlYZfhQUFFVoNUyyrL
         HUdEr7rjUvE4AdWJZ6atHE9Ahc8ldK6EO1GqWCRy9W8bzS3KkuQ0rzZh9fvc6B8v8mxV
         mOAA==
Original-Received: by 10.68.138.170 with SMTP id qr10mr42454798pbb.120.1343145154874;
 Tue, 24 Jul 2012 08:52:34 -0700 (PDT)
Original-Received: by 10.68.189.37 with HTTP; Tue, 24 Jul 2012 08:52:34 -0700 (PDT)
In-Reply-To: <5000259D.9020303@canonical.com>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332394
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332394>

On Fri, Jul 13, 2012 at 9:41 PM, Stefan Bader
<stefan.bader@canonical.com> wrote:
> I was bisecting a problem on 64bit where any attempt to cause a crash kernel to
> boot would hang. The bisect ended up on commit 722bc6b (x86/mm: Fix the size
> calculation of mapping tables) and somehow, looking at the calling function and
> the ranges printed on boot, I think the calculations should only be done in the
> 32bit case.
>
> On 64bit:
> [    0.000000] init_memory_mapping: [mem 0x00000000-0x77e87fff]
> [    0.000000]  [mem 0x00000000-0x77dfffff] page 2M
> [    0.000000]  [mem 0x77e00000-0x77e87fff] page 4k
>
> Attached patch would fix this if you agree with it. Thanks.
>
> -Stefan
>
>
> From 6b679d1af20656929c0e829f29eed60b0a86a74f Mon Sep 17 00:00:00 2001
> From: Stefan Bader <stefan.bader@canonical.com>
> Date: Fri, 13 Jul 2012 15:16:33 +0200
> Subject: [PATCH] x86/mm: Limit 2/4M size calculation to x86_32
>
> commit 722bc6b (x86/mm: Fix the size calculation of mapping tables)
> did modify the extra space calculation for mapping tables in order
> to make up for the first 2/4M memory range using 4K pages.
> However this setup is only used when compiling for 32bit. On 64bit
> there is only the trailing area of 4K pages (which is already added).
>
> The code was already adapted once for things went wrong on a 8TB
> machine (bd2753b x86/mm: Only add extra pages count for the first memory
> range during pre-allocation early page table space), but it looks a bit
> like it currently would overdo things for 64bit.
> I only noticed while bisecting for the reason I could not make a crash
> kernel boot (which ended up on this patch).
>
> Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
> Cc: WANG Cong <xiyou.wangcong@gmail.com>
> Cc: Yinghai Lu <yinghai@kernel.org>
> Cc: Tejun Heo <tj@kernel.org>

Acked-by: Cong Wang <xiyou.wangcong@gmail.com>

Sorry for that I was not aware of x86_64 is different with x86 in the
first 2/4M.
