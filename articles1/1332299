Path: news.gmane.org!not-for-mail
From: Andy Lee <raphael.andy.lee@gmail.com>
Newsgroups: gmane.linux.kernel.mmc,gmane.linux.kernel
Subject: [PATCH] mmc: core: Remove bounce buffer in mmc_send_cxd_data()
Date: Tue, 24 Jul 2012 22:10:04 +0900
Lines: 129
Approved: news@gmane.org
Message-ID: <CAPOY1bUqm1Lb4ppf5UYqUA+cbK3_sHE=zJu3x6-UNb+uKiYiWg@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343135416 14873 80.91.229.3 (24 Jul 2012 13:10:16 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 13:10:16 +0000 (UTC)
Cc: linux-mmc@vger.kernel.org, linux-kernel@vger.kernel.org
To: Chris Ball <cjb@laptop.org>
Original-X-From: linux-mmc-owner@vger.kernel.org Tue Jul 24 15:10:12 2012
Return-path: <linux-mmc-owner@vger.kernel.org>
Envelope-to: glkm-linux-mmc@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-mmc-owner@vger.kernel.org>)
	id 1StesK-0007mK-1Z
	for glkm-linux-mmc@plane.gmane.org; Tue, 24 Jul 2012 15:10:08 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754056Ab2GXNKG (ORCPT <rfc822;glkm-linux-mmc@m.gmane.org>);
	Tue, 24 Jul 2012 09:10:06 -0400
Original-Received: from mail-qc0-f174.google.com ([209.85.216.174]:37290 "EHLO
	mail-qc0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754001Ab2GXNKF (ORCPT
	<rfc822;linux-mmc@vger.kernel.org>); Tue, 24 Jul 2012 09:10:05 -0400
Original-Received: by mail-qc0-f174.google.com with SMTP id o28so3793366qcr.19
        for <multiple recipients>; Tue, 24 Jul 2012 06:10:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:cc:content-type;
        bh=bWeYBxYnqvLek3RupWmf8vOoFDMMCRv+xhm/GWOUTAc=;
        b=YRPQp5qQwVapPo0z77q3Ok2XSL2nlviYLqL4oFWzWmCzdPMyCpIwiNXjEdyPYNXGKN
         PfrNPQdT7QVpzlT0KOjkj+IuJIlzGt3+p+tOh61DJzm0STcDWEanjbXxwoGFESccWZVH
         Vg9rszZpFmaWAySoYY+IVrw8RZn2tY6GK3oYjT0tf5zGigoA9JA1z2DXYtxWjNG7qFQq
         751u+BKZOF3sYB2Pe17wYE2zT1+fNB8XqLFlTK/OlDNAhKFNL+b0coX0jOTeWNUdmLYx
         qpbJlFfKh2BvIaamuQzjPYm0IpTJQZ2xtI+ua3Xuk3NmO5UtfN8xVCDL87wzINAd+4/e
         9JXg==
Original-Received: by 10.224.188.140 with SMTP id da12mr25880497qab.43.1343135404925;
 Tue, 24 Jul 2012 06:10:04 -0700 (PDT)
Original-Received: by 10.49.60.71 with HTTP; Tue, 24 Jul 2012 06:10:04 -0700 (PDT)
Original-Sender: linux-mmc-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-mmc.vger.kernel.org>
X-Mailing-List: linux-mmc@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel.mmc:15713 gmane.linux.kernel:1332299
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332299>

It is expected that Extended CSD register(the size of this register
is larger than CID/CSD) will be referenced more frequently as more
fields have been added to Extended CSD.
This patch is intended to avoid the use of bounce buffer for reading
Extended CSD register in mmc_send_cxd_data(). It seems that it is
not a good option to double the memory used.

Signed-off-by: kyungsik.lee <kyungsik.lee@lge.com>
---
 drivers/mmc/core/mmc_ops.c |   45 ++++++++++++++++++++++++++++---------------
 1 files changed, 29 insertions(+), 16 deletions(-)

diff --git a/drivers/mmc/core/mmc_ops.c b/drivers/mmc/core/mmc_ops.c
index 0ed2cc5..b1a7df3 100644
--- a/drivers/mmc/core/mmc_ops.c
+++ b/drivers/mmc/core/mmc_ops.c
@@ -238,14 +238,6 @@ mmc_send_cxd_data(struct mmc_card *card, struct
mmc_host *host,
 	struct mmc_command cmd = {0};
 	struct mmc_data data = {0};
 	struct scatterlist sg;
-	void *data_buf;
-
-	/* dma onto stack is unsafe/nonportable, but callers to this
-	 * routine normally provide temporary on-stack buffers ...
-	 */
-	data_buf = kmalloc(len, GFP_KERNEL);
-	if (data_buf == NULL)
-		return -ENOMEM;

 	mrq.cmd = &cmd;
 	mrq.data = &data;
@@ -266,7 +258,7 @@ mmc_send_cxd_data(struct mmc_card *card, struct
mmc_host *host,
 	data.sg = &sg;
 	data.sg_len = 1;

-	sg_init_one(&sg, data_buf, len);
+	sg_init_one(&sg, buf, len);

 	if (opcode == MMC_SEND_CSD || opcode == MMC_SEND_CID) {
 		/*
@@ -280,9 +272,6 @@ mmc_send_cxd_data(struct mmc_card *card, struct
mmc_host *host,

 	mmc_wait_for_req(host, &mrq);

-	memcpy(buf, data_buf, len);
-	kfree(data_buf);
-
 	if (cmd.error)
 		return cmd.error;
 	if (data.error)
@@ -294,24 +283,37 @@ mmc_send_cxd_data(struct mmc_card *card, struct
mmc_host *host,
 int mmc_send_csd(struct mmc_card *card, u32 *csd)
 {
 	int ret, i;
+	u32 *csd_t;

 	if (!mmc_host_is_spi(card->host))
 		return mmc_send_cxd_native(card->host, card->rca << 16,
 				csd, MMC_SEND_CSD);

-	ret = mmc_send_cxd_data(card, card->host, MMC_SEND_CSD, csd, 16);
+	csd_t = kmalloc(16, GFP_KERNEL);
+	if (!csd_t)
+		return -ENOMEM;
+
+	ret = mmc_send_cxd_data(card, card->host, MMC_SEND_CSD, csd_t, 16);
 	if (ret)
-		return ret;
+		goto err;
+
+	memcpy(csd, csd_t, 16);

 	for (i = 0;i < 4;i++)
 		csd[i] = be32_to_cpu(csd[i]);

+	kfree(csd_t);
 	return 0;
+
+err:
+	kfree(csd_t);
+	return ret;
 }

 int mmc_send_cid(struct mmc_host *host, u32 *cid)
 {
 	int ret, i;
+	u32 *cid_t;

 	if (!mmc_host_is_spi(host)) {
 		if (!host->card)
@@ -320,14 +322,25 @@ int mmc_send_cid(struct mmc_host *host, u32 *cid)
 				cid, MMC_SEND_CID);
 	}

-	ret = mmc_send_cxd_data(NULL, host, MMC_SEND_CID, cid, 16);
+	cid_t = kmalloc(16, GFP_KERNEL);
+	if (!cid_t)
+		return -ENOMEM;
+
+	ret = mmc_send_cxd_data(NULL, host, MMC_SEND_CID, cid_t, 16);
 	if (ret)
-		return ret;
+		goto err;
+
+	memcpy(cid, cid_t, 16);

 	for (i = 0;i < 4;i++)
 		cid[i] = be32_to_cpu(cid[i]);

+	kfree(cid_t);
 	return 0;
+
+err:
+	kfree(cid_t);
+	return ret;
 }

 int mmc_send_ext_csd(struct mmc_card *card, u8 *ext_csd)
-- 
1.7.0.4
--
To unsubscribe from this list: send the line "unsubscribe linux-mmc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

