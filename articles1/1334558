Path: news.gmane.org!not-for-mail
From: Tejun Heo <tj@kernel.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [PATCH 03/15] workqueue: add missing smp_wmb() in process_one_work()
Date: Fri, 27 Jul 2012 16:54:56 -0700
Lines: 39
Approved: news@gmane.org
Message-ID: <1343433308-26614-4-git-send-email-tj@kernel.org>
References: <1343433308-26614-1-git-send-email-tj@kernel.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343433487 22708 80.91.229.3 (27 Jul 2012 23:58:07 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 27 Jul 2012 23:58:07 +0000 (UTC)
Cc: torvalds@linux-foundation.org, akpm@linux-foundation.org,
	padovan@profusion.mobi, marcel@holtmann.org, peterz@infradead.org,
	mingo@redhat.com, davem@davemloft.net, dougthompson@xmission.com,
	ibm-acpi@hmh.eng.br, cbou@mail.ru, rui.zhang@intel.com,
	Tejun Heo <tj@kernel.org>, Oleg Nesterov <oleg@redhat.com>,
	stable@vger.kernel.org
To: linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Jul 28 01:58:05 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuuPz-0002vY-6q
	for glk-linux-kernel-3@plane.gmane.org; Sat, 28 Jul 2012 01:58:03 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752773Ab2G0Xza (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 27 Jul 2012 19:55:30 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:47011 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752454Ab2G0XzW (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 27 Jul 2012 19:55:22 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rp8so5796097pbb.19
        for <multiple recipients>; Fri, 27 Jul 2012 16:55:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:from:to:cc:subject:date:message-id:x-mailer:in-reply-to
         :references;
        bh=/e8UdzLD4kwUWLUhi3umnsZATW0gxZW3Iukh2ThsHg8=;
        b=PJDNf8Tti7MRe3EitvwfxD2RDl2VkT9H51w2yOAvNQTdhD1Wm2rZdvyErY8REP061I
         n9LbxpLVow67jNidBiuaf6Nob7yP25jfULBNO0ZSLkS0du3fpAW/SCzLyCozHzkR63wf
         piH/N0eiVCO0+FWycTbe4CVrU2oBVI94jm2FIF3v0YFiEagNth1n6fqj93LidQaQ03NJ
         aPAhR3rij9kSa37Ngdq+VUSY7pO1vSYJ40ZIr21CgH00lfJbnqENpgHPNsROelcRC2k4
         8Wwja9IeqsE3Hfmy5WItnS2Ie3z3Rm6us/FRkR+wRafM50J+9xfdwo9aGzCnbyzLTmHC
         /DoQ==
Original-Received: by 10.68.226.73 with SMTP id rq9mr17189621pbc.145.1343433322316;
        Fri, 27 Jul 2012 16:55:22 -0700 (PDT)
Original-Received: from wtj.mtv.corp.google.com (wtj.mtv.corp.google.com [172.18.110.84])
        by mx.google.com with ESMTPS id ph1sm2797326pbb.45.2012.07.27.16.55.20
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 27 Jul 2012 16:55:21 -0700 (PDT)
X-Mailer: git-send-email 1.7.7.3
In-Reply-To: <1343433308-26614-1-git-send-email-tj@kernel.org>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1334558 gmane.linux.kernel.stable:28910
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334558>

WORK_STRUCT_PENDING is used to claim ownership of a work item and
process_one_work() releases it before starting execution.  When
someone else grabs PENDING, all pre-release updates to the work item
should be visible and all updates made by the new owner should happen
afterwards.

Grabbing PENDING uses test_and_set_bit() and thus has a full barrier;
however, clearing doesn't have a matching wmb.  Given the preceding
spin_unlock and use of clear_bit, I don't believe this can be a
problem on an actual machine and there hasn't been any related report
but it still is theretically possible for clear_pending to permeate
upwards and happen before work->entry update.

Add an explicit smp_wmb() before work_clear_pending().

Signed-off-by: Tejun Heo <tj@kernel.org>
Cc: Oleg Nesterov <oleg@redhat.com>
Cc: stable@vger.kernel.org
---
 kernel/workqueue.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index 70f95ab..5c26d36 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -1997,7 +1997,9 @@ __acquires(&gcwq->lock)
 
 	spin_unlock_irq(&gcwq->lock);
 
+	smp_wmb();	/* paired with test_and_set_bit(PENDING) */
 	work_clear_pending(work);
+
 	lock_map_acquire_read(&cwq->wq->lockdep_map);
 	lock_map_acquire(&lockdep_map);
 	trace_workqueue_execute_start(work);
-- 
1.7.7.3

