Path: news.gmane.org!not-for-mail
From: Aaron Lu <aaron.lu@amd.com>
Newsgroups: gmane.linux.kernel,gmane.linux.scsi,gmane.linux.ide
Subject: Re: [PATCH 5/5] block: genhd: add an interface to set disk's poll
 interval
Date: Tue, 24 Jul 2012 07:52:14 +0800
Lines: 93
Approved: news@gmane.org
Message-ID: <20120723235211.GB1965@localhost.localdomain>
References: <1343026180-22236-1-git-send-email-aaron.lu@amd.com>
 <1343026180-22236-6-git-send-email-aaron.lu@amd.com>
 <1343069014.25735.28.camel@ejdallLaptop>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343087563 6692 80.91.229.3 (23 Jul 2012 23:52:43 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 23 Jul 2012 23:52:43 +0000 (UTC)
Cc: Jeff Garzik <jgarzik@pobox.com>,
	Alan Stern <stern@rowland.harvard.edu>,
	Lin Ming <minggr@gmail.com>, linux-kernel@vger.kernel.org,
	linux-pm@vger.kernel.org, linux-scsi@vger.kernel.org,
	linux-ide@vger.kernel.org, Aaron Lu <aaron.lwe@gmail.com>
To: Betty Dall <betty.dall@hp.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 01:52:41 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StSQX-000686-58
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 01:52:37 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755315Ab2GWXwY (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 23 Jul 2012 19:52:24 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:59848 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755178Ab2GWXwU (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 23 Jul 2012 19:52:20 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rp8so11663894pbb.19
        for <multiple recipients>; Mon, 23 Jul 2012 16:52:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent;
        bh=1gpgwuurROumYk3RBP/L5BIc9ZQvQUFdWTVLogywki4=;
        b=d5mMpVBu+UVIxgQ6RVghEsiXax1j9wADy1egtf8Yj60yzdPfBHtebZwfyMb3bsUpGs
         VlvioRgucR/FDIU9NAr7SLHHJppo0r1V8fpz9FHxAIY3xeowlh/mLbSyh5ANl2oHKrUE
         QvEPGTNloqKaZk/vIaVfMMIKuSVj73hYFdE/UmF03Gjq/sEWUGrbrtdi66DSMU54H/QH
         s1h7P3BTcAqB9YO56wmwkUKfIUTBYkaImmzPdUhz/FKhJRxFh9UOnFRDW29OhHKHfggE
         5UacXdfQbgp+F6faR/TXvQ5CV3h1TBrZbfIu7ZEiCIVeicepXoPjHn0hUBFIaeh/xsbM
         oGCg==
Original-Received: by 10.68.195.97 with SMTP id id1mr40416020pbc.91.1343087540363;
        Mon, 23 Jul 2012 16:52:20 -0700 (PDT)
Original-Received: from localhost.localdomain ([222.65.147.213])
        by mx.google.com with ESMTPS id qa5sm10888648pbb.19.2012.07.23.16.52.16
        (version=SSLv3 cipher=OTHER);
        Mon, 23 Jul 2012 16:52:19 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <1343069014.25735.28.camel@ejdallLaptop>
User-Agent: Mutt/1.5.20 (2009-12-10)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332041 gmane.linux.scsi:76500 gmane.linux.ide:52433
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332041>

On Mon, Jul 23, 2012 at 12:43:34PM -0600, Betty Dall wrote:
> Hi Aaron,

Hi,

> 
> On Mon, 2012-07-23 at 14:49 +0800, Aaron Lu wrote:
> > Set the ODD's in kernel poll interval to 2s for the user in case the
> > user is using an old distro on which udev will not set the system wide
> > block parameter events_dfl_poll_msecs.
> Why did you pick 2 seconds? 

Just a random pick, no special meaning here.
On newer distros, udev will also pick 2s for the events_dfl_poll_msecs
parameter, so I just followed that :-)
Do you see any problem with this setting?

> 
> > 
> > Signed-off-by: Aaron Lu <aaron.lu@amd.com>
> > ---
> >  block/genhd.c         | 23 +++++++++++++++++------
> >  drivers/scsi/sr.c     |  1 +
> >  include/linux/genhd.h |  1 +
> >  3 files changed, 19 insertions(+), 6 deletions(-)
> > 
> > diff --git a/block/genhd.c b/block/genhd.c
> > index bdb3682..de9b9d9 100644
> > --- a/block/genhd.c
> > +++ b/block/genhd.c
> > @@ -1619,6 +1619,19 @@ static void disk_events_workfn(struct work_struct *work)
> >  		kobject_uevent_env(&disk_to_dev(disk)->kobj, KOBJ_CHANGE, envp);
> >  }
> >  
> > +int disk_events_set_poll_msecs(struct gendisk *disk, long intv)
> > +{
> > +	if (intv < 0 && intv != -1)
> > +		return -EINVAL;
> > +
> > +	disk_block_events(disk);
> > +	disk->ev->poll_msecs = intv;
> > +	__disk_unblock_events(disk, true);
> > +
> > +	return 0;
> > +}
> > +EXPORT_SYMBOL(disk_events_set_poll_msecs);
> > +
> >  /*
> >   * A disk events enabled device has the following sysfs nodes under
> >   * its /sys/block/X/ directory.
> > @@ -1675,16 +1688,14 @@ static ssize_t disk_events_poll_msecs_store(struct device *dev,
> >  {
> >  	struct gendisk *disk = dev_to_disk(dev);
> >  	long intv;
> > +	int ret;
> >  
> >  	if (!count || !sscanf(buf, "%ld", &intv))
> >  		return -EINVAL;
> >  
> > -	if (intv < 0 && intv != -1)
> > -		return -EINVAL;
> > -
> > -	disk_block_events(disk);
> > -	disk->ev->poll_msecs = intv;
> > -	__disk_unblock_events(disk, true);
> > +	ret = disk_events_set_poll_msecs(disk, intv);
> > +	if (ret)
> > +		return ret;
> >  
> >  	return count;
> >  }
> > diff --git a/drivers/scsi/sr.c b/drivers/scsi/sr.c
> > index 2f159aa..78c4226 100644
> > --- a/drivers/scsi/sr.c
> > +++ b/drivers/scsi/sr.c
> > @@ -869,6 +869,7 @@ static int sr_probe(struct device *dev)
> >  	dev_set_drvdata(dev, cd);
> >  	disk->flags |= GENHD_FL_REMOVABLE;
> >  	add_disk(disk);
> > +	disk_events_set_poll_msecs(disk, 2000);
> 
> Could you check that disk event's poll_msecs is the default (-1) before
> setting it to 2s? I am thinking of a case when the probe happens after
> the call to disk_events_poll_msecs_store() and this code would overwrite
> the user specified value.

The block device sr0 is created by this driver in this probe function,
so the user should not be able to set the poll interval before probe,
right?

Thanks,
Aaron

