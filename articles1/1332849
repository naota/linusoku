Path: news.gmane.org!not-for-mail
From: Cyrill Gorcunov <gorcunov@openvz.org>
Newsgroups: gmane.linux.kernel,gmane.linux.file-systems
Subject: [patch 5/7] fs, epoll: Add procfs fdinfo helper v2
Date: Wed, 25 Jul 2012 13:47:23 +0400
Lines: 117
Approved: news@gmane.org
Message-ID: <20120725095025.013094662@openvz.org>
References: <20120725094718.089879534@openvz.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343210248 25805 80.91.229.3 (25 Jul 2012 09:57:28 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 09:57:28 +0000 (UTC)
Cc: Al Viro <viro@zeniv.linux.org.uk>,
	Alexey Dobriyan <adobriyan@gmail.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	Pavel Emelyanov <xemul@parallels.com>,
	James Bottomley <jbottomley@parallels.com>,
	Matthew Helsley <matt.helsley@gmail.com>,
	Cyrill Gorcunov <gorcunov@openvz.org>,
	Al Viro <viro@ZenIV.linux.org.uk>
To: linux-kernel@vger.kernel.org, linux-fsdevel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Jul 25 11:57:26 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StyLO-00024X-Er
	for glk-linux-kernel-3@plane.gmane.org; Wed, 25 Jul 2012 11:57:26 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755087Ab2GYJ5L (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 25 Jul 2012 05:57:11 -0400
Original-Received: from mail-lb0-f174.google.com ([209.85.217.174]:62054 "EHLO
	mail-lb0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753773Ab2GYJzl (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 25 Jul 2012 05:55:41 -0400
Original-Received: by lbbgm6 with SMTP id gm6so505129lbb.19
        for <multiple recipients>; Wed, 25 Jul 2012 02:55:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:message-id:user-agent:date:from:to:cc:subject:references
         :content-disposition;
        bh=qg6psqP4d1oWpf0AvJYHZXJ8dJEjiRakawGbmumkQSY=;
        b=sNKtuVr9X1+LYy7oScfRDiku4djTMAa1VgK9mRMPm6fOp7I1cpKrbtAGGjyq6nAn/m
         LBqhbTR5CiDjPAoEX/OMxArKh5XHCT+Xoj1+wLoyAeCjgrJo11W70BdETW3kgbjFLVjK
         8QiN2AB91Z9F7f9t7lFlI0g94Y4aIU0VOO2uR9ubENzsteJ3vJTuJiLRgj4uhz+6OJfU
         +QlMgoSRLUomvesP0pMCiQegBKlUAloRjC8+gaJel2/gkXZB9V9odAl7lR4zFgU97pBt
         5WWtyLIC8YqiX6OUNp/6hvv6ll8NXPMebxVJhnIiLne1R07tc3qdrKZ64MNRzAzjgXzj
         eIdQ==
Original-Received: by 10.112.99.71 with SMTP id eo7mr11762829lbb.84.1343210139560;
        Wed, 25 Jul 2012 02:55:39 -0700 (PDT)
Original-Received: from moon.localdomain ([188.134.33.181])
        by mx.google.com with ESMTPS id s3sm4470827lbk.11.2012.07.25.02.55.37
        (version=TLSv1/SSLv3 cipher=OTHER);
        Wed, 25 Jul 2012 02:55:38 -0700 (PDT)
Original-Received: by moon.localdomain (Postfix, from userid 1000)
	id 6D361A0086; Wed, 25 Jul 2012 13:50:25 +0400 (MSK)
User-Agent: quilt/0.48-1
Content-Disposition: inline; filename=seq-fdinfo-eventpoll-5
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332849 gmane.linux.file-systems:66194
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332849>

This allow us to print out eventpoll target file descriptor,
events and data, the /proc/pid/fdinfo/fd consists of

 | pos:	0
 | flags:	02
 | tfd:        5 events:       1d data: ffffffffffffffff

This feature is CONFIG_CHECKPOINT_RESTORE only.

v2:
 - don't walk over all rb nodes on seq-next,
   try to continue from pervious position

Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org>
CC: Al Viro <viro@ZenIV.linux.org.uk>
CC: Alexey Dobriyan <adobriyan@gmail.com>
CC: Andrew Morton <akpm@linux-foundation.org>
CC: Pavel Emelyanov <xemul@parallels.com>
CC: James Bottomley <jbottomley@parallels.com>
CC: Matthew Helsley <matt.helsley@gmail.com>
---
 fs/eventpoll.c |   67 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 67 insertions(+)

Index: linux-2.6.git/fs/eventpoll.c
===================================================================
--- linux-2.6.git.orig/fs/eventpoll.c
+++ linux-2.6.git/fs/eventpoll.c
@@ -38,6 +38,8 @@
 #include <asm/io.h>
 #include <asm/mman.h>
 #include <linux/atomic.h>
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
 
 /*
  * LOCKING:
@@ -1897,6 +1899,69 @@ SYSCALL_DEFINE6(epoll_pwait, int, epfd,
 	return error;
 }
 
+#if defined(CONFIG_PROC_FS) && defined(CONFIG_CHECKPOINT_RESTORE)
+
+static void *seq_start(struct seq_file *m, loff_t *pos)
+{
+	struct proc_fdinfo_extra *extra = m->private;
+	struct eventpoll *ep = extra->f_file->private_data;
+	struct rb_node *rbp;
+	loff_t num = *pos;
+
+	mutex_lock(&ep->mtx);
+	for (rbp = rb_first(&ep->rbr); rbp; rbp = rb_next(rbp)) {
+		if (num-- == 0)
+			return rbp;
+	}
+
+	return NULL;
+}
+
+static void seq_stop(struct seq_file *m, void *v)
+{
+	struct proc_fdinfo_extra *extra = m->private;
+	struct eventpoll *ep = extra->f_file->private_data;
+	mutex_unlock(&ep->mtx);
+}
+
+static void *seq_next(struct seq_file *m, void *p, loff_t *pos)
+{
+	struct rb_node *rbp = p;
+	++*pos;
+	return (void *)rb_next(rbp);
+}
+
+static int seq_show(struct seq_file *m, void *v)
+{
+	struct rb_node *rbp = v;
+	struct epitem *epi = rb_entry(rbp, struct epitem, rbn);
+
+	return seq_printf(m, "tfd: %8d events: %8x data: %16llx\n",
+			  epi->ffd.fd, epi->event.events,
+			  (long long)epi->event.data);
+}
+
+static const struct seq_operations ep_fdinfo_ops = {
+	.start		= seq_start,
+	.next		= seq_next,
+	.stop		= seq_stop,
+	.show		= seq_show,
+};
+
+static struct proc_fdinfo_driver ep_fdinfo = {
+	.name		= "eventpoll",
+	.ops		= &ep_fdinfo_ops,
+	.probe		= is_file_epoll,
+};
+
+static int __init ep_register_fdinfo_driver(void)
+{
+	return proc_register_fdinfo_driver(&ep_fdinfo);
+}
+#else
+static void ep_register_fdinfo_driver(void) { }
+#endif /* CONFIG_PROC_FS && CONFIG_CHECKPOINT_RESTORE */
+
 static int __init eventpoll_init(void)
 {
 	struct sysinfo si;
@@ -1929,6 +1994,8 @@ static int __init eventpoll_init(void)
 	pwq_cache = kmem_cache_create("eventpoll_pwq",
 			sizeof(struct eppoll_entry), 0, SLAB_PANIC, NULL);
 
+	ep_register_fdinfo_driver();
+
 	return 0;
 }
 fs_initcall(eventpoll_init);

