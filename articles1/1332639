Path: news.gmane.org!not-for-mail
From: Tejun Heo <tj@kernel.org>
Newsgroups: gmane.linux.kernel
Subject: [GIT PULL] workqueue changes for v3.6-rc1
Date: Tue, 24 Jul 2012 17:05:38 -0700
Lines: 53
Approved: news@gmane.org
Message-ID: <20120725000538.GE5776@google.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343174798 13683 80.91.229.3 (25 Jul 2012 00:06:38 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 00:06:38 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org
To: Linus Torvalds <torvalds@linux-foundation.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Jul 25 02:06:38 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Stp7c-0005AA-FK
	for glk-linux-kernel-3@plane.gmane.org; Wed, 25 Jul 2012 02:06:36 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755999Ab2GYAGZ (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 24 Jul 2012 20:06:25 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:50105 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753284Ab2GYAFn (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 24 Jul 2012 20:05:43 -0400
Original-Received: by pbbrp8 with SMTP id rp8so411808pbb.19
        for <linux-kernel@vger.kernel.org>; Tue, 24 Jul 2012 17:05:42 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:date:from:to:cc:subject:message-id:mime-version:content-type
         :content-disposition:user-agent;
        bh=V6ozNuFsYCwXNMZIGbo72Y/IGSY8smEMORoyMPVZRZ4=;
        b=TZzhUfCFNzj2OKm33YRA3Dn9LwNqsm143xA+858BeE8qRu06LHRqGg/0J0n8DYEJ6T
         etY21LUJnfHn3ogZD4hJFz/7AhYgXopKujo/Mfj/LvfYWI9mOWtOMLY8tsF5PwvBtmuI
         PiwpiOi5YWLoxVXhAGG97AMY1inWJCEvVN3cTBkSxO3jqKioSmWGIYRo/XgG92z72fiM
         wfKP8x5c5qSYhGE28j2BY5/uoITFWbyYi+IET3o3V4et2UuXsxNY5+ipbML+Na9cgzb9
         BXxs3/8/NdLx/LsOp5W8YkhKgeESDtul3ZPBv8T1Bh417b5DtOavgXGMfzwvl4WNfgdc
         PklA==
Original-Received: by 10.68.217.40 with SMTP id ov8mr46988350pbc.131.1343174742597;
        Tue, 24 Jul 2012 17:05:42 -0700 (PDT)
Original-Received: from google.com (wtj.mtv.corp.google.com [172.18.110.84])
        by mx.google.com with ESMTPS id wf7sm13113278pbc.34.2012.07.24.17.05.40
        (version=SSLv3 cipher=OTHER);
        Tue, 24 Jul 2012 17:05:41 -0700 (PDT)
Content-Disposition: inline
User-Agent: Mutt/1.5.20 (2009-06-14)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332639
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332639>

Hello, Linus.

Please pull from the following branch to receive workqueue changes for
v3.6-rc1.

  git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq.git for-3.6

There are three major changes.

* WQ_HIGHPRI has been reimplemented so that high priority work items
  are served by worker threads with -20 nice value from dedicated
  highpri worker pools.

* CPU hotplug support has been reimplemented such that idle workers
  are kept across CPU hotplug events.  This makes CPU hotplug cheaper
  (for PM) and makes the code simpler.

* flush_kthread_work() has been reimplemented so that a work item can
  be freed while executing.  This removes an annoying behavior
  difference between kthread_worker and workqueue.

Thanks.

Tejun Heo (18):
      workqueue: don't use WQ_HIGHPRI for unbound workqueues
      workqueue: factor out worker_pool from global_cwq
      workqueue: use @pool instead of @gcwq or @cpu where applicable
      workqueue: separate out worker_pool flags
      workqueue: introduce NR_WORKER_POOLS and for_each_worker_pool()
      workqueue: reimplement WQ_HIGHPRI using a separate worker_pool
      workqueue: perform cpu down operations from low priority cpu_notifier()
      workqueue: drop CPU_DYING notifier operation
      workqueue: ROGUE workers are UNBOUND workers
      workqueue: use mutex for global_cwq manager exclusion
      workqueue: drop @bind from create_worker()
      workqueue: reimplement CPU online rebinding to handle idle workers
      workqueue: don't butcher idle workers on an offline CPU
      workqueue: remove CPU offline trustee
      workqueue: simplify CPU hotplug code
      kthread_worker: reorganize to prepare for flush_kthread_work() reimplementation
      kthread_worker: reimplement flush_kthread_work() to allow freeing the work item being executed
      workqueue: fix spurious CPU locality WARN from process_one_work()

 Documentation/workqueue.txt      |  103 ++---
 include/linux/cpu.h              |    5 +-
 include/linux/kthread.h          |    8 +-
 include/trace/events/workqueue.h |    2 +-
 kernel/kthread.c                 |   88 ++--
 kernel/workqueue.c               | 1144 ++++++++++++++++++--------------------
 6 files changed, 628 insertions(+), 722 deletions(-)

--
tejun
