Path: news.gmane.org!not-for-mail
From: David Sterba <dave@jikos.cz>
Newsgroups: gmane.linux.kernel,gmane.comp.file-systems.btrfs
Subject: Re: [PATCH v2] Btrfs: allow mount -o remount,compress=no
Date: Thu, 19 Jul 2012 03:28:05 +0200
Lines: 44
Approved: news@gmane.org
Message-ID: <20120719012805.GD17430@twin.jikos.cz>
References: <20120406102232.GH14256@twin.jikos.cz>
 <1334582871-3670-1-git-send-email-arnd@arndnet.de>
 <20120416144233.GC20982@twin.jikos.cz>
 <4FE95B45.8030909@arndnet.de>
 <20120628154037.GA28144@twin.jikos.cz>
 <CAKcLGm_cMiEBinmSxkWpY9jm8tW1qbBALcNS-u7DNQhHRF+NFg@mail.gmail.com>
Reply-To: dave@jikos.cz
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342661316 18106 80.91.229.3 (19 Jul 2012 01:28:36 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 19 Jul 2012 01:28:36 +0000 (UTC)
Cc: dave@jikos.cz, Arnd Hannemann <arnd@arndnet.de>,
	chris.mason@fusionio.com, linux-btrfs@vger.kernel.org,
	linux-kernel@vger.kernel.org, ierdnah@gmail.com
To: Mitch Harder <mitch.harder@sabayonlinux.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 19 03:28:34 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SrfXd-0000aF-TI
	for glk-linux-kernel-3@plane.gmane.org; Thu, 19 Jul 2012 03:28:34 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754725Ab2GSB2W (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 18 Jul 2012 21:28:22 -0400
Original-Received: from twin.jikos.cz ([89.185.236.188]:35971 "EHLO twin.jikos.cz"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754063Ab2GSB2T (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Wed, 18 Jul 2012 21:28:19 -0400
Original-Received: from twin.jikos.cz (dave@localhost [127.0.0.1])
	by twin.jikos.cz (8.13.6/8.13.6) with ESMTP id q6J1S5Xm019588
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Thu, 19 Jul 2012 03:28:06 +0200
Original-Received: (from dave@localhost)
	by twin.jikos.cz (8.13.6/8.13.6/Submit) id q6J1S53q019587;
	Thu, 19 Jul 2012 03:28:05 +0200
Mail-Followup-To: Mitch Harder <mitch.harder@sabayonlinux.org>,
	dave@jikos.cz, Arnd Hannemann <arnd@arndnet.de>,
	chris.mason@fusionio.com, linux-btrfs@vger.kernel.org,
	linux-kernel@vger.kernel.org, ierdnah@gmail.com
Content-Disposition: inline
In-Reply-To: <CAKcLGm_cMiEBinmSxkWpY9jm8tW1qbBALcNS-u7DNQhHRF+NFg@mail.gmail.com>
User-Agent: Mutt/1.5.21 (2011-07-01)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330037 gmane.comp.file-systems.btrfs:18709
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330037>

On Fri, Jul 13, 2012 at 10:19:14AM -0500, Mitch Harder wrote:
> I was testing the lz4(hc) patches, and I found the the compression
> INCOMPAT flags are not being updated using the method in this patch.
> 
> The compression INCOMPAT flags are generally checked and updated in
> the open_ctree() function.
> 
> But, on remount, open_ctree() is not called.

This currently happens with lzo as well, right?

* mount without any compression
* remount -o compress=lzo
* write data
* umount
* => filesystem has lzo data without incompat bit set

> I was going to test a patch to update the INCOMPAT flags similar to
> the way lzo INCOMPAT is updated when specifying the compress method in
> defragmentation.
> 
> http://kerneltrap.org/mailarchive/linux-btrfs/2010/11/18/6886194

This is clear that the incompatibility should be set, because the user
wants it so and the lz4 patches should do the same. I see that the hc
incompatibility does not though, that has to be fixed.

> But, let me know if it is preferred to just return -EINVAL when trying
> to remount with a compression method that has an INCOMPAT not yet seen
> by that volume.

Let's say it returns EINVAL upon remount, then I need to do umount/mount
with the desired option. Remount is usually not done by accident, so
similar to the defrag, I'd expect the operation to succeed, but I as a
user may not know that it brings a backward incompatibility. Getting rid
of an incompat is not straightfoward at all, so I understand the
caution.

My preference is to let remount succeed and set the incompat bit,
possibly with a KERN_INFO message to syslog in case the bit is yet
unseen by the volume.


david
