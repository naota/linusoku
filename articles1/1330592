Path: news.gmane.org!not-for-mail
From: Anton Vorontsov <anton.vorontsov@linaro.org>
Newsgroups: gmane.linux.kernel
Subject: [PATCH] pstore/ram: Fix possible NULL dereference
Date: Thu, 19 Jul 2012 16:43:41 -0700
Lines: 53
Approved: news@gmane.org
Message-ID: <1342741421-17956-1-git-send-email-anton.vorontsov@linaro.org>
References: <20120719142856.GA25184@elgon.mountain>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1342741588 19357 80.91.229.3 (19 Jul 2012 23:46:28 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 19 Jul 2012 23:46:28 +0000 (UTC)
Cc: Dan Carpenter <dan.carpenter@oracle.com>,
	John Stultz <john.stultz@linaro.org>, arve@android.com,
	Rebecca Schultz Zavin <rebecca@android.com>,
	Marco Stornelli <marco.stornelli@gmail.com>,
	linux-kernel@vger.kernel.org, devel@driverdev.osuosl.org,
	linaro-kernel@lists.linaro.org, patches@linaro.org,
	kernel-team@android.com
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	Kees Cook <keescook@chromium.org>,
	Colin Cross <ccross@android.com>,
	Tony Luck <tony.luck@intel.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Jul 20 01:46:25 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Ss0QD-0002Bm-Q2
	for glk-linux-kernel-3@plane.gmane.org; Fri, 20 Jul 2012 01:46:18 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752066Ab2GSXqK (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 19 Jul 2012 19:46:10 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:34179 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751287Ab2GSXqI (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 19 Jul 2012 19:46:08 -0400
Original-Received: by yhmm54 with SMTP id m54so3450037yhm.19
        for <linux-kernel@vger.kernel.org>; Thu, 19 Jul 2012 16:46:08 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :x-gm-message-state;
        bh=NENQAFU7SDcHCGi1Pck+1dyZfQFgY6lvKgkCgZAhnFA=;
        b=h7NOEDea2usxcBrGZX5fxH3soyy9d6FQeturAwAwunDN6cWOFD5EOitM9v2wui5zdl
         OE/36QcSJs6Rjmv1i/fUa8wYPtol2Zn+e1T/PLmlIJN7TUi9g2CGpwo8CVj0CE74JiWz
         2+T8pFF8uavLs9QcyAa1gjdQUZJA6/pIQqH+gOeJVJnn1HeFOwnTxZCSBfdYDSTTsGNq
         87TkgsUvDQYEw6ZlrKEYl2yklNb58wzAWDGoKrH0EOFLIR55ZqX1H4Njb2m9DMaonQ+9
         z4Kqx2e+bLYV77h8+hGhwTlrYn7Xl/Yob2TzRU+aGx14xs6ZJ3l4dkaUw0GLsKTM0ATI
         RAsA==
Original-Received: by 10.66.72.225 with SMTP id g1mr7378611pav.3.1342741567569;
        Thu, 19 Jul 2012 16:46:07 -0700 (PDT)
Original-Received: from localhost (m940536d0.tmodns.net. [208.54.5.148])
        by mx.google.com with ESMTPS id nu5sm2672927pbb.53.2012.07.19.16.46.02
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 19 Jul 2012 16:46:06 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.4
In-Reply-To: <20120719142856.GA25184@elgon.mountain>
X-Gm-Message-State: ALoCoQmDegbetg++UhCIUMWase62SuhxsQsai0HqFSXrUtdtFl9xf/cG9+K6lCBCdK54Gwpd/+IT
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330592
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330592>

We can dereference 'cxt->cprz' if console and dump logging are disabled
(which is unlikely, but still possible to do). This patch fixes the issue
by changing the code so that we don't dereference przs at all, we can
just calculate bufsize from console_size and record_size values.

Plus, while at it, the patch improves the buffer size calculation.

After Kay's printk rework, we know the optimal buffer size for console
logging -- it is LOG_LINE_MAX (defined privately in printk.c). Previously,
if only console logging was enabled, we would allocate unnecessary large
buffer in pstore, while we only need LOG_LINE_MAX. (Pstore console logging
is still capable of handling buffers > LOG_LINE_MAX, it will just do
multiple calls to psinfo->write).

Note that I don't export the constant, since we will do even a better
thing soon: we will switch console logging to a new write_buf API, which
will eliminate the need for the additional buffer; and so we won't need
the constant.

Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: Anton Vorontsov <anton.vorontsov@linaro.org>
---
 fs/pstore/ram.c |   13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/fs/pstore/ram.c b/fs/pstore/ram.c
index b86b2b7..c34fccf 100644
--- a/fs/pstore/ram.c
+++ b/fs/pstore/ram.c
@@ -414,13 +414,14 @@ static int __devinit ramoops_probe(struct platform_device *pdev)
 
 	cxt->pstore.data = cxt;
 	/*
-	 * Console can handle any buffer size, so prefer dumps buffer
-	 * size since usually it is smaller.
+	 * Console can handle any buffer size, so prefer LOG_LINE_MAX. If we
+	 * have to handle dumps, we must have at least record_size buffer. And
+	 * for ftrace, bufsize is irrelevant (if bufsize is 0, buf will be
+	 * ZERO_SIZE_PTR).
 	 */
-	if (cxt->przs)
-		cxt->pstore.bufsize = cxt->przs[0]->buffer_size;
-	else
-		cxt->pstore.bufsize = cxt->cprz->buffer_size;
+	if (cxt->console_size)
+		cxt->pstore.bufsize = 1024; /* LOG_LINE_MAX */
+	cxt->pstore.bufsize = max(cxt->record_size, cxt->pstore.bufsize);
 	cxt->pstore.buf = kmalloc(cxt->pstore.bufsize, GFP_KERNEL);
 	spin_lock_init(&cxt->pstore.buf_lock);
 	if (!cxt->pstore.buf) {
-- 
1.7.10.4

