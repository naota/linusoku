Path: news.gmane.org!not-for-mail
From: Linus Torvalds <torvalds@linux-foundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.usb.general
Subject: Re: [RFC] firmware load: defer request_firmware during early boot and resume
Date: Sun, 22 Jul 2012 12:46:13 -0700
Lines: 24
Approved: news@gmane.org
Message-ID: <CA+55aFyOgWtyd=STeDrR687qKqu6TQ_q-aUTKcr_aQJNYrOhCg@mail.gmail.com>
References: <CACVXFVNWOcrR9tYhU1wVUSJ_DJ8x+SCk993Sn9dYDe2kzJBDuQ@mail.gmail.com>
 <CA+55aFwZRvtpE2e3zNqvtobpPROqw_bOwNt+=DBzmScV0_rq=w@mail.gmail.com>
 <CACVXFVPupumYqeBwTwgK3C04VQBxOjkFMbaKQ-Gsz3teCWqQ=w@mail.gmail.com>
 <CA+55aFwte5bc-4FC758pBN3FbrtKQfwm_Mv_banekhL=kSF8kg@mail.gmail.com> <20120722125843.GC18939@liondog.tnic>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1342986412 10121 80.91.229.3 (22 Jul 2012 19:46:52 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 22 Jul 2012 19:46:52 +0000 (UTC)
To: Borislav Petkov <borislav.petkov@amd.com>,
	Linus Torvalds <torvalds@linux-foundation.org>,
	Ming Lei <tom.leiming@gmail.com>,
	Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
	linux-usb <linux-usb@vger.kernel.org>,
	Alan Stern <stern@rowland.harvard.edu>,
	Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	Oliver Neukum <oneukum@suse.de>,
	"Rafael J. Wysocki" <rjw@sisk.pl>
Original-X-From: linux-kernel-owner@vger.kernel.org Sun Jul 22 21:46:47 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1St272-0005ah-EM
	for glk-linux-kernel-3@plane.gmane.org; Sun, 22 Jul 2012 21:46:44 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752574Ab2GVTqh (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 22 Jul 2012 15:46:37 -0400
Original-Received: from mail-we0-f174.google.com ([74.125.82.174]:47686 "EHLO
	mail-we0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752429Ab2GVTqf (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 22 Jul 2012 15:46:35 -0400
Original-Received: by weyx8 with SMTP id x8so3803135wey.19
        for <multiple recipients>; Sun, 22 Jul 2012 12:46:34 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:from:date
         :x-google-sender-auth:message-id:subject:to:content-type;
        bh=X/Pr/MkjFX65jEekSUmhTxpdigFRsBQebwTPl6+gAZk=;
        b=O1OguMm3OZW57YnOfJG4bCQcwLXti/vi5HhR2DpFdw6DRPj2YdlfgQ2wXcawlfijKU
         EXLd1FITPekR1f1NcHGOQHa++X14z9I4BNgup5+2tfxyk8yIG3IwAmoXlTE2HJSlTkdY
         loidj0jEfKN5qCBegPqVxplkIH0hupY2UEj3d065b2n3BFKT6dLKqGz3xrJBADjhVhM7
         E/kLpePmAJLZv6WVLMZDkxbW3AsMTOxEq+hv543OWhbmGX86MtwKth6TH5t19hED5M/s
         BHcoarWggjIHe+vLbr0s2RlUuskjLLl3ZYtqJAMHJawhRClPa/m+IHkcuAa6PgZxFGDc
         02bA==
Original-Received: by 10.216.132.18 with SMTP id n18mr7520838wei.194.1342986394208;
 Sun, 22 Jul 2012 12:46:34 -0700 (PDT)
Original-Received: by 10.216.142.14 with HTTP; Sun, 22 Jul 2012 12:46:13 -0700 (PDT)
In-Reply-To: <20120722125843.GC18939@liondog.tnic>
X-Google-Sender-Auth: OUQFwMxotzzhcEw49CNrFgnP2mg
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331405 gmane.linux.usb.general:68067
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331405>

On Sun, Jul 22, 2012 at 5:58 AM, Borislav Petkov <bp@alien8.de> wrote:
>
> Question: is there any other reason
>
>   [besides maybe embedded people who care about each single Kb of memory
>    on the system]
>
> why we don't make this cache/uncache firmware thing *implicit*? That is,
> load it once at driver open time and keep it in memory during the whole
> driver's lifetime. And this all taken care of by the driver core, btw.

So some firmware is a *lot* more than "a few kB". We're talking
hundreds of kB, sometimes more. And to make matters worse, we keep it
in memory with vmalloc(), which is a limited resource on 32-bit
systems. So it can actually be worse than just the memory use itself.

Also, as you already mentioned, there's the "cache coherency" issue.
There are real advantages to reloading the firmware occasionally,
because it might have changed on disk. So..

I do think we might want to consider it, although I do suspect that we
do want to throw it out because of the problems with infinite caches.

                Linus
