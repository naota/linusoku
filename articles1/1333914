Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 02/23] md/raid1: close some possible races on write errors during resync
Date: Thu, 26 Jul 2012 14:19:41 -0700
Lines: 58
Approved: news@gmane.org
Message-ID: <20120726211406.053709887@linuxfoundation.org>
References: <20120726211420.GA7678@kroah.com>
 <20120726211405.959857593@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343337876 6469 80.91.229.3 (26 Jul 2012 21:24:36 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 21:24:36 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk,
	Alexander Lyakas <alex.bolshoy@gmail.com>,
	NeilBrown <neilb@suse.de>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 23:24:35 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuVXu-0000ms-Ir
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 23:24:34 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752995Ab2GZVVY (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 17:21:24 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:55834 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752965Ab2GZVVU (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 17:21:20 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rp8so3808655pbb.19
        for <linux-kernel@vger.kernel.org>; Thu, 26 Jul 2012 14:21:20 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=9xRZ2+yr+Z/BYBmQ5cO1IAkB9hwMCs2vMrXuZ8uBJwU=;
        b=PEvwe0UJrETvbOMYGO9E/8SkdarCKdCQl2Rde/hdqlM/9d5JEs842rcCEumvh5yL7g
         tmqKtzI5Hw90WP3wGstXt7Bfg5o4s51D7xnY4nmhM14EF+hid2sLBw02X4Thmcy0IBAS
         VV+g+PumzBovUcVjy+F8GXqDLuSH0HP5bVyezpaEt8G/8CyObWIKRT0VGgiiydhSMise
         b6rcsdmTLqLEfDL+kDilY8VM2rkregJdJbGBxU1z7i5RwkNeXmhnX99aU2QFk0Xp0sw5
         F+HUeYNwifG7TJ/EfzQNc/qbIDn9/g//SfQtfEgtFLWtQTKZegVzKsUbrBXYbMFZZSKO
         /q+A==
Original-Received: by 10.68.224.170 with SMTP id rd10mr5824454pbc.106.1343337680398;
        Thu, 26 Jul 2012 14:21:20 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id jv6sm419842pbc.40.2012.07.26.14.21.18
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 26 Jul 2012 14:21:19 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120726211405.959857593@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQlOqv8p/4/fzWinfD+vBy+4QYlbQnqrUql1gvKcw2CQnUhDt4WyqPyFAb+SOleJSfS46D1j
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333914 gmane.linux.kernel.stable:28856
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333914>

From: Greg KH <gregkh@linuxfoundation.org>

3.4-stable review patch.  If anyone has any objections, please let me know.

------------------

From: NeilBrown <neilb@suse.de>

commit 58e94ae18478c08229626daece2fc108a4a23261 upstream.

commit 4367af556133723d0f443e14ca8170d9447317cb
   md/raid1: clear bad-block record when write succeeds.

Added a 'reschedule_retry' call possibility at the end of
end_sync_write, but didn't add matching code at the end of
sync_request_write.  So if the writes complete very quickly, or
scheduling makes it seem that way, then we can miss rescheduling
the request and the resync could hang.

Also commit 73d5c38a9536142e062c35997b044e89166e063b
    md: avoid races when stopping resync.

Fix a race condition in this same code in end_sync_write but didn't
make the change in sync_request_write.

This patch updates sync_request_write to fix both of those.
Patch is suitable for 3.1 and later kernels.

Reported-by: Alexander Lyakas <alex.bolshoy@gmail.com>
Original-version-by: Alexander Lyakas <alex.bolshoy@gmail.com>
Signed-off-by: NeilBrown <neilb@suse.de>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 drivers/md/raid1.c |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@ -1821,8 +1821,14 @@ static void sync_request_write(struct md
 
 	if (atomic_dec_and_test(&r1_bio->remaining)) {
 		/* if we're here, all write(s) have completed, so clean up */
-		md_done_sync(mddev, r1_bio->sectors, 1);
-		put_buf(r1_bio);
+		int s = r1_bio->sectors;
+		if (test_bit(R1BIO_MadeGood, &r1_bio->state) ||
+		    test_bit(R1BIO_WriteError, &r1_bio->state))
+			reschedule_retry(r1_bio);
+		else {
+			put_buf(r1_bio);
+			md_done_sync(mddev, s, 1);
+		}
 	}
 }
 


