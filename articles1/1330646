Path: news.gmane.org!not-for-mail
From: <cjren@qca.qualcomm.com>
Newsgroups: gmane.linux.kernel,gmane.linux.network
Subject: [PATCH] atl1c: fix issue of io access mode for AR8152 v2.1
Date: Fri, 20 Jul 2012 11:01:58 +0800
Lines: 79
Approved: news@gmane.org
Message-ID: <1342753318-4507-1-git-send-email-cjren@qca.qualcomm.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain
X-Trace: dough.gmane.org 1342753340 26757 80.91.229.3 (20 Jul 2012 03:02:20 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 03:02:20 +0000 (UTC)
Cc: <qca-linux-team@qualcomm.com>, <nic-devel@qualcomm.com>
To: <davem@davemloft.net>, <netdev@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Jul 20 05:02:19 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Ss3Tt-0004hq-4S
	for glk-linux-kernel-3@plane.gmane.org; Fri, 20 Jul 2012 05:02:17 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753065Ab2GTDCK (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 19 Jul 2012 23:02:10 -0400
Original-Received: from wolverine02.qualcomm.com ([199.106.114.251]:43252 "EHLO
	wolverine02.qualcomm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751353Ab2GTDCH (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 19 Jul 2012 23:02:07 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
  d=qca.qualcomm.com; i=@qca.qualcomm.com; q=dns/txt;
  s=qcdkim; t=1342753328; x=1374289328;
  h=from:to:cc:subject:date:message-id:mime-version;
  bh=dYX7C9cA8G8RX+U1EJoWJo122KsCWn6wALPbLFHMfSc=;
  b=OWqjYDT8WzfxW6lB/iZIWsKxPvQzaC3AoiPSzyz2F3HCBtaJ5t2kJ9HA
   mkVlY8podS8VYaY9l4V3mrSpBMWPGrqSHeXek+HT+FfN3RgCd3xiD9HJB
   /RN1zP8qSwveyGvYpu6NTQkGZxT1qIzf+J9YEcTEjIT4S5w+8KWP2bhFg
   g=;
X-IronPort-AV: E=McAfee;i="5400,1158,6777"; a="210258193"
Original-Received: from ironmsg02-l.qualcomm.com ([172.30.48.16])
  by wolverine02.qualcomm.com with ESMTP; 19 Jul 2012 20:02:07 -0700
X-IronPort-AV: E=Sophos;i="4.77,619,1336374000"; 
   d="scan'208";a="121801045"
Original-Received: from nasanexhc13.na.qualcomm.com ([172.30.48.20])
  by ironmsg02-L.qualcomm.com with ESMTP/TLS/RC4-SHA; 19 Jul 2012 20:02:06 -0700
Original-Received: from nasanexhc05.na.qualcomm.com (172.30.48.2) by
 nasanexhc13.na.qualcomm.com (172.30.48.20) with Microsoft SMTP Server (TLS)
 id 14.2.309.2; Thu, 19 Jul 2012 20:02:05 -0700
Original-Received: from cren-suse (172.30.48.1) by qcmail1.qualcomm.com (172.30.48.2)
 with Microsoft SMTP Server (TLS) id 14.2.309.2; Thu, 19 Jul 2012 20:02:02
 -0700
Original-Received: by cren-suse (sSMTP sendmail emulation); Fri, 20 Jul 2012 11:01:58
 +0800
X-Mailer: git-send-email 1.7.7
X-Originating-IP: [172.30.48.1]
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330646 gmane.linux.network:237821
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330646>

When io access mode is enabled by BOOTROM or BIOS for AR8152 v2.1,
the register can't be read/write by memory access mode.
Clearing Bit 8  of Register 0x21c could fixed the issue.

Signed-off-by: Cloud Ren <cjren@qca.qualcomm.com>
Cc: stable <stable@vger.kernel.org>
Signed-off-by: xiong <xiong@qca.qualcomm.com>
---
 drivers/net/ethernet/atheros/atl1c/atl1c_hw.h   |    5 +++++
 drivers/net/ethernet/atheros/atl1c/atl1c_main.c |   16 +++++++++++++++-
 2 files changed, 20 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/atheros/atl1c/atl1c_hw.h b/drivers/net/ethernet/atheros/atl1c/atl1c_hw.h
index 17d935b..21d8c4d 100644
--- a/drivers/net/ethernet/atheros/atl1c/atl1c_hw.h
+++ b/drivers/net/ethernet/atheros/atl1c/atl1c_hw.h
@@ -74,6 +74,8 @@ void atl1c_post_phy_linkchg(struct atl1c_hw *hw, u16 link_speed);
 #define PCI_DEVICE_ID_ATHEROS_L1D_2_0	0x1083 /* AR8151 v2.0 Gigabit 1000 */
 #define L2CB_V10			0xc0
 #define L2CB_V11			0xc1
+#define L2CB_V20			0xc0
+#define L2CB_V21			0xc1
 
 /* register definition */
 #define REG_DEVICE_CAP              	0x5C
@@ -87,6 +89,9 @@ void atl1c_post_phy_linkchg(struct atl1c_hw *hw, u16 link_speed);
 #define LINK_CTRL_L1_EN			0x02
 #define LINK_CTRL_EXT_SYNC		0x80
 
+#define REG_PCIE_IND_ACC_ADDR		0x80
+#define REG_PCIE_IND_ACC_DATA		0x84
+
 #define REG_DEV_SERIALNUM_CTRL		0x200
 #define REG_DEV_MAC_SEL_MASK		0x0 /* 0:EUI; 1:MAC */
 #define REG_DEV_MAC_SEL_SHIFT		0
diff --git a/drivers/net/ethernet/atheros/atl1c/atl1c_main.c b/drivers/net/ethernet/atheros/atl1c/atl1c_main.c
index 36d3783..1bf5bbf 100644
--- a/drivers/net/ethernet/atheros/atl1c/atl1c_main.c
+++ b/drivers/net/ethernet/atheros/atl1c/atl1c_main.c
@@ -727,6 +727,8 @@ static const struct atl1c_platform_patch plats[] __devinitdata = {
 
 static void __devinit atl1c_patch_assign(struct atl1c_hw *hw)
 {
+	struct pci_dev	*pdev = hw->adapter->pdev;
+	u32 misc_ctrl;
 	int i = 0;
 
 	hw->msi_lnkpatch = false;
@@ -741,6 +743,18 @@ static void __devinit atl1c_patch_assign(struct atl1c_hw *hw)
 		}
 		i++;
 	}
+
+	if (hw->device_id == PCI_DEVICE_ID_ATHEROS_L2C_B2 &&
+	    hw->revision_id == L2CB_V21) {
+		/* config acess mode */
+		pci_write_config_dword(pdev, REG_PCIE_IND_ACC_ADDR,
+				       REG_PCIE_DEV_MISC_CTRL);
+		pci_read_config_dword(pdev, REG_PCIE_IND_ACC_DATA, &misc_ctrl);
+		misc_ctrl &= ~0x100;
+		pci_write_config_dword(pdev, REG_PCIE_IND_ACC_ADDR,
+				       REG_PCIE_DEV_MISC_CTRL);
+		pci_write_config_dword(pdev, REG_PCIE_IND_ACC_DATA, misc_ctrl);
+	}
 }
 /**
  * atl1c_sw_init - Initialize general software structures (struct atl1c_adapter)
@@ -768,7 +782,7 @@ static int __devinit atl1c_sw_init(struct atl1c_adapter *adapter)
 	hw->device_id = pdev->device;
 	hw->subsystem_vendor_id = pdev->subsystem_vendor;
 	hw->subsystem_id = pdev->subsystem_device;
-	AT_READ_REG(hw, PCI_CLASS_REVISION, &revision);
+	pci_read_config_dword(pdev, PCI_CLASS_REVISION, &revision);
 	hw->revision_id = revision & 0xFF;
 	/* before link up, we assume hibernate is true */
 	hw->hibernate = true;
-- 
1.5.4.5

