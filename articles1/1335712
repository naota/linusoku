Path: news.gmane.org!not-for-mail
From: Lee Jones <lee.jones@linaro.org>
Newsgroups: gmane.linux.alsa.devel,gmane.linux.ports.arm.kernel,gmane.linux.kernel
Subject: [PATCH 05/19] ASoC: codecs: Enable AB8500 CODEC for
	Device Tree
Date: Tue, 31 Jul 2012 14:38:59 +0100
Lines: 146
Approved: news@gmane.org
Message-ID: <1343741953-17828-6-git-send-email-lee.jones@linaro.org>
References: <1343741953-17828-1-git-send-email-lee.jones@linaro.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343742024 3339 80.91.229.3 (31 Jul 2012 13:40:24 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 13:40:24 +0000 (UTC)
Cc: STEricsson_nomadik_linux@list.st.com, Lee Jones <lee.jones@linaro.org>,
 linus.walleij@stericsson.com, arnd@arndb.de
To: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
 olalilja@yahoo.se, ola.o.lilja@stericsson.com, alsa-devel@alsa-project.org,
 lrg@ti.com, broonie@opensource.wolfsonmicro.com
Original-X-From: alsa-devel-bounces@alsa-project.org Tue Jul 31 15:40:20 2012
Return-path: <alsa-devel-bounces@alsa-project.org>
Envelope-to: glad-alsa-devel-2@m.gmane.org
Original-Received: from alsa0.perex.cz ([77.48.224.243])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <alsa-devel-bounces@alsa-project.org>)
	id 1SwCgN-0005DT-B4
	for glad-alsa-devel-2@m.gmane.org; Tue, 31 Jul 2012 15:40:19 +0200
Original-Received: by alsa0.perex.cz (Postfix, from userid 1000)
	id 72FF9265DDB; Tue, 31 Jul 2012 15:39:55 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on mail1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.0 required=5.0 tests=RCVD_IN_DNSWL_LOW,SPF_FAIL
	autolearn=disabled version=3.2.4
Original-Received: from alsa0.perex.cz (localhost [IPv6:::1])
	by alsa0.perex.cz (Postfix) with ESMTP id D1BC7265DAB;
	Tue, 31 Jul 2012 15:39:37 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Original-Received: by alsa0.perex.cz (Postfix, from userid 1000)
 id 587A6265D65; Tue, 31 Jul 2012 15:39:33 +0200 (CEST)
Original-Received: from mail-we0-f179.google.com (mail-we0-f179.google.com
 [74.125.82.179])
 by alsa0.perex.cz (Postfix) with ESMTP id 6B439265D4F
 for <alsa-devel@alsa-project.org>; Tue, 31 Jul 2012 15:39:28 +0200 (CEST)
Original-Received: by mail-we0-f179.google.com with SMTP id x10so3918401wey.38
 for <alsa-devel@alsa-project.org>; Tue, 31 Jul 2012 06:39:30 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
 :x-gm-message-state;
 bh=q3ZEEdd/qXYC5Y6AlKln+CJI5YdB7ByaAkhwKRYMJ7c=;
 b=G7j8ZgWRclXPjr5LX9QQqs5jCRs5DM8RTKkDiQ5RTv9m3geZD9WZWpt29wFJZDwBN9
 L4h+uqgv4zFNqVdAinEWUYnLTqnBi8yBPCRO9YV5yw3lgp5eva6jt3GXTwgs4heu+iL6
 clFIuDe6HXsS+bFXy+RETeSt8JNFIHw6sz03ta+v9ZVMzQ5fJzl4fGEaKHQjYSsou5i1
 UIMN6wUaazlkrh/0vZ/JTNOgZzIQiLK2eECZfHCFKPJR9uCkroFDNyTM55ywFWVIKNA8
 b65u1NxNVEdpyba8BQYiRASlewd2SPI8gA6KkvqBKt1S3oTYke9kKtCP6wJ+UiX2dxtj
 YYqw==
Original-Received: by 10.217.3.71 with SMTP id q49mr2529052wes.33.1343741970491;
 Tue, 31 Jul 2012 06:39:30 -0700 (PDT)
Original-Received: from localhost.localdomain
 (cpc1-aztw13-0-0-cust473.18-1.cable.virginmedia.com. [77.102.241.218])
 by mx.google.com with ESMTPS id el6sm22252911wib.8.2012.07.31.06.39.28
 (version=TLSv1/SSLv3 cipher=OTHER);
 Tue, 31 Jul 2012 06:39:29 -0700 (PDT)
X-Mailer: git-send-email 1.7.9.5
In-Reply-To: <1343741953-17828-1-git-send-email-lee.jones@linaro.org>
X-Gm-Message-State: ALoCoQl1tzj1zAUq/ANnN/rmooozpy8zLVHeWLduyO1+Cc+7s2Xz8wpfGqgtEvjtJE9iRI76ouM9
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <http://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <http://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Original-Sender: alsa-devel-bounces@alsa-project.org
Xref: news.gmane.org gmane.linux.alsa.devel:99467 gmane.linux.ports.arm.kernel:179594 gmane.linux.kernel:1335712
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335712>

We continue to allow the AB8500 CODEC to be registered via the AB8500
Multi Functional Device API, only this time we extract its configuration
from the Device Tree binary.

Signed-off-by: Lee Jones <lee.jones@linaro.org>
---
 include/linux/mfd/abx500/ab8500-codec.h |    6 ++-
 sound/soc/codecs/ab8500-codec.c         |   81 +++++++++++++++++++++++++++++++
 2 files changed, 85 insertions(+), 2 deletions(-)

diff --git a/include/linux/mfd/abx500/ab8500-codec.h b/include/linux/mfd/abx500/ab8500-codec.h
index dc65292..d707941 100644
--- a/include/linux/mfd/abx500/ab8500-codec.h
+++ b/include/linux/mfd/abx500/ab8500-codec.h
@@ -23,7 +23,8 @@ enum amic_type {
 /* Mic-biases */
 enum amic_micbias {
 	AMIC_MICBIAS_VAMIC1,
-	AMIC_MICBIAS_VAMIC2
+	AMIC_MICBIAS_VAMIC2,
+	AMIC_MICBIAS_UNKNOWN
 };
 
 /* Bias-voltage */
@@ -31,7 +32,8 @@ enum ear_cm_voltage {
 	EAR_CMV_0_95V,
 	EAR_CMV_1_10V,
 	EAR_CMV_1_27V,
-	EAR_CMV_1_58V
+	EAR_CMV_1_58V,
+	EAR_CMV_UNKNOWN
 };
 
 /* Analog microphone settings */
diff --git a/sound/soc/codecs/ab8500-codec.c b/sound/soc/codecs/ab8500-codec.c
index 23b4018..fa80961 100644
--- a/sound/soc/codecs/ab8500-codec.c
+++ b/sound/soc/codecs/ab8500-codec.c
@@ -34,6 +34,7 @@
 #include <linux/mfd/abx500/ab8500-sysctrl.h>
 #include <linux/mfd/abx500/ab8500-codec.h>
 #include <linux/regulator/consumer.h>
+#include <linux/of.h>
 
 #include <sound/core.h>
 #include <sound/pcm.h>
@@ -2394,9 +2395,65 @@ struct snd_soc_dai_driver ab8500_codec_dai[] = {
 	}
 };
 
+static void ab8500_codec_of_probe(struct device *dev, struct device_node *np,
+				struct ab8500_codec_platform_data *codec)
+{
+	u32 value;
+
+	if (of_get_property(np, "stericsson,amic1-type-single-ended", NULL))
+		codec->amics.mic1_type = AMIC_TYPE_SINGLE_ENDED;
+	else
+		codec->amics.mic1_type = AMIC_TYPE_DIFFERENTIAL;
+
+	if (of_get_property(np, "stericsson,amic2-type-single-ended", NULL))
+		codec->amics.mic2_type = AMIC_TYPE_SINGLE_ENDED;
+	else
+		codec->amics.mic2_type = AMIC_TYPE_DIFFERENTIAL;
+
+	/* Has a non-standard Vamic been requested? */
+	if (of_get_property(np, "stericsson,amic1a-bias-vamic2", NULL))
+		codec->amics.mic1a_micbias = AMIC_MICBIAS_VAMIC2;
+	else
+		codec->amics.mic1a_micbias = AMIC_MICBIAS_VAMIC1;
+
+	if (of_get_property(np, "stericsson,amic1b-bias-vamic2", NULL))
+		codec->amics.mic1b_micbias = AMIC_MICBIAS_VAMIC2;
+	else
+		codec->amics.mic1b_micbias = AMIC_MICBIAS_VAMIC1;
+
+	if (of_get_property(np, "stericsson,amic2-bias-vamic1", NULL))
+		codec->amics.mic2_micbias = AMIC_MICBIAS_VAMIC1;
+	else
+		codec->amics.mic2_micbias = AMIC_MICBIAS_VAMIC2;
+
+	if (!of_property_read_u32(np, "stericsson,earpeice-cmv", &value)) {
+		switch (value) {
+		case 950 :
+			codec->ear_cmv = EAR_CMV_0_95V;
+			break;
+		case 1100 :
+			codec->ear_cmv = EAR_CMV_1_10V;
+			break;
+		case 1270 :
+			codec->ear_cmv = EAR_CMV_1_27V;
+			break;
+		case 1580 :
+			codec->ear_cmv = EAR_CMV_1_58V;
+			break;
+		default :
+			codec->ear_cmv = EAR_CMV_UNKNOWN;
+			dev_err(dev, "Unsuitable earpiece voltage found in DT\n");
+		}
+	} else {
+		dev_warn(dev, "No earpiece voltage found in DT - using default\n");
+		codec->ear_cmv = EAR_CMV_0_95V;
+	}
+}
+
 static int ab8500_codec_probe(struct snd_soc_codec *codec)
 {
 	struct device *dev = codec->dev;
+	struct device_node *np = dev->of_node;
 	struct ab8500_codec_drvdata *drvdata = dev_get_drvdata(dev);
 	struct ab8500_platform_data *pdata;
 	struct filter_control *fc;
@@ -2407,6 +2464,30 @@ static int ab8500_codec_probe(struct snd_soc_codec *codec)
 	/* Setup AB8500 according to board-settings */
 	pdata = (struct ab8500_platform_data *)dev_get_platdata(dev->parent);
 
+	if (np) {
+		if (!pdata)
+			pdata = devm_kzalloc(dev,
+					sizeof(struct ab8500_platform_data),
+					GFP_KERNEL);
+
+		if (!pdata->codec)
+			pdata->codec
+				= devm_kzalloc(dev,
+					sizeof(struct ab8500_codec_platform_data),
+					GFP_KERNEL);
+
+		if (!(pdata && pdata->codec))
+			return -ENOMEM;
+
+		ab8500_codec_of_probe(dev, np, pdata->codec);
+
+	} else {
+		if (!(pdata && pdata->codec)) {
+			dev_err(dev, "No codec platform data or DT found\n");
+			return -EINVAL;
+		}
+	}
+
 	/* Inform SoC Core that we have our own I/O arrangements. */
 	codec->control_data = (void *)true;
 
-- 
1.7.9.5

