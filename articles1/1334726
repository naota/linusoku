Path: news.gmane.org!not-for-mail
From: walter harms <wharms@bfs.de>
Newsgroups: gmane.linux.kernel,gmane.comp.security.firewalls.netfilter.devel,gmane.linux.kernel.janitors
Subject: Re: [PATCH] netfilter: PTR_RET can be used
Date: Sun, 29 Jul 2012 14:09:46 +0200
Lines: 178
Approved: news@gmane.org
Message-ID: <5015280A.6000105@bfs.de>
References: <20120729004550.GA7049@localhost>
Reply-To: wharms@bfs.de
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343563860 9138 80.91.229.3 (29 Jul 2012 12:11:00 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 29 Jul 2012 12:11:00 +0000 (UTC)
Cc: Pablo Neira Ayuso <pablo@netfilter.org>,
	netfilter-devel@vger.kernel.org, kernel-janitors@vger.kernel.org,
	LKML <linux-kernel@vger.kernel.org>
To: Fengguang Wu <fengguang.wu@intel.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Sun Jul 29 14:10:59 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SvSKm-0007QW-NZ
	for glk-linux-kernel-3@plane.gmane.org; Sun, 29 Jul 2012 14:10:57 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752611Ab2G2MJx (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 29 Jul 2012 08:09:53 -0400
Original-Received: from mx01.sz.bfs.de ([194.94.69.103]:19086 "EHLO mx01.sz.bfs.de"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751631Ab2G2MJu (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Sun, 29 Jul 2012 08:09:50 -0400
Original-Received: from localhost (localhost [127.0.0.1])
	by mx01.sz.bfs.de (Postfix) with ESMTP id B08F14AEDD;
	Sun, 29 Jul 2012 14:09:48 +0200 (CEST)
Original-Received: from localhost (localhost [127.0.0.1])
	by mx01.sz.bfs.de (Postfix) with ESMTP id A32F74AEEC;
	Sun, 29 Jul 2012 14:09:48 +0200 (CEST)
X-Virus-Scanned: by amavisd-new-2.6.1 (20080629) (Debian) at bfs.de
Original-Received: from mx01.sz.bfs.de ([127.0.0.1])
	by localhost (dc-slave-mx01.bfs.de [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id TC7PVBWyW09T; Sun, 29 Jul 2012 14:09:48 +0200 (CEST)
Original-Received: from dc-slave2-fr.fr.bfs.de (dc-slave2-fr.fr.bfs.de [10.177.18.200])
	by mx01.sz.bfs.de (Postfix) with ESMTP id 2E6064AEDD;
	Sun, 29 Jul 2012 14:09:48 +0200 (CEST)
Original-Received: from [134.92.181.33] (unknown [134.92.181.33])
	by dc-slave2-fr.fr.bfs.de (Postfix) with ESMTPSA id 2B177714E41;
	Sun, 29 Jul 2012 14:09:47 +0200 (CEST)
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.1.16) Gecko/20101125 SUSE/3.0.11 Thunderbird/3.0.11
In-Reply-To: <20120729004550.GA7049@localhost>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1334726 gmane.comp.security.firewalls.netfilter.devel:43557 gmane.linux.kernel.janitors:25218
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334726>



Am 29.07.2012 02:45, schrieb Fengguang Wu:
> This quiets the coccinelle warnings:
> 
> net/bridge/netfilter/ebtable_filter.c:107:1-3: WARNING: PTR_RET can be used
> net/bridge/netfilter/ebtable_nat.c:107:1-3: WARNING: PTR_RET can be used
> net/ipv6/netfilter/ip6table_filter.c:65:1-3: WARNING: PTR_RET can be used
> net/ipv6/netfilter/ip6table_mangle.c:100:1-3: WARNING: PTR_RET can be used
> net/ipv6/netfilter/ip6table_raw.c:44:1-3: WARNING: PTR_RET can be used
> net/ipv6/netfilter/ip6table_security.c:62:1-3: WARNING: PTR_RET can be used
> net/ipv4/netfilter/iptable_filter.c:72:1-3: WARNING: PTR_RET can be used
> net/ipv4/netfilter/iptable_mangle.c:107:1-3: WARNING: PTR_RET can be used
> net/ipv4/netfilter/iptable_raw.c:51:1-3: WARNING: PTR_RET can be used
> net/ipv4/netfilter/iptable_security.c:70:1-3: WARNING: PTR_RET can be used
> 
> Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
> ---
>  net/bridge/netfilter/ebtable_filter.c  |    4 +---
>  net/bridge/netfilter/ebtable_nat.c     |    4 +---
>  net/ipv4/netfilter/iptable_filter.c    |    4 +---
>  net/ipv4/netfilter/iptable_mangle.c    |    4 +---
>  net/ipv4/netfilter/iptable_raw.c       |    4 +---
>  net/ipv4/netfilter/iptable_security.c  |    5 +----
>  net/ipv6/netfilter/ip6table_filter.c   |    4 +---
>  net/ipv6/netfilter/ip6table_mangle.c   |    4 +---
>  net/ipv6/netfilter/ip6table_raw.c      |    4 +---
>  net/ipv6/netfilter/ip6table_security.c |    5 +----
>  10 files changed, 10 insertions(+), 32 deletions(-)
> 
> --- linux.orig/net/bridge/netfilter/ebtable_filter.c	2012-07-29 08:41:09.703759534 +0800
> +++ linux/net/bridge/netfilter/ebtable_filter.c	2012-07-29 08:41:14.255759643 +0800
> @@ -100,9 +100,7 @@ static struct nf_hook_ops ebt_ops_filter
>  static int __net_init frame_filter_net_init(struct net *net)
>  {
>  	net->xt.frame_filter = ebt_register_table(net, &frame_filter);
> -	if (IS_ERR(net->xt.frame_filter))
> -		return PTR_ERR(net->xt.frame_filter);
> -	return 0;
> +	return PTR_RET(net->xt.frame_filter);
>  }
>  

i do not understand this,
ebt_register_table() return (struct ebt_table *) on success

Does PTR_RET really return 0 if this is a propper pointer ?

re,
 wh


>  static void __net_exit frame_filter_net_exit(struct net *net)
> --- linux.orig/net/bridge/netfilter/ebtable_nat.c	2012-07-29 08:41:09.671759534 +0800
> +++ linux/net/bridge/netfilter/ebtable_nat.c	2012-07-29 08:41:14.255759643 +0800
> @@ -100,9 +100,7 @@ static struct nf_hook_ops ebt_ops_nat[]
>  static int __net_init frame_nat_net_init(struct net *net)
>  {
>  	net->xt.frame_nat = ebt_register_table(net, &frame_nat);
> -	if (IS_ERR(net->xt.frame_nat))
> -		return PTR_ERR(net->xt.frame_nat);
> -	return 0;
> +	return PTR_RET(net->xt.frame_nat);
>  }
>  
>  static void __net_exit frame_nat_net_exit(struct net *net)
> --- linux.orig/net/ipv4/netfilter/iptable_filter.c	2012-07-29 08:41:09.523759531 +0800
> +++ linux/net/ipv4/netfilter/iptable_filter.c	2012-07-29 08:41:14.259759643 +0800
> @@ -69,9 +69,7 @@ static int __net_init iptable_filter_net
>  	net->ipv4.iptable_filter =
>  		ipt_register_table(net, &packet_filter, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv4.iptable_filter))
> -		return PTR_ERR(net->ipv4.iptable_filter);
> -	return 0;
> +	return PTR_RET(net->ipv4.iptable_filter);
>  }
>  
>  static void __net_exit iptable_filter_net_exit(struct net *net)
> --- linux.orig/net/ipv4/netfilter/iptable_mangle.c	2012-07-29 08:41:09.495759530 +0800
> +++ linux/net/ipv4/netfilter/iptable_mangle.c	2012-07-29 08:41:14.259759643 +0800
> @@ -104,9 +104,7 @@ static int __net_init iptable_mangle_net
>  	net->ipv4.iptable_mangle =
>  		ipt_register_table(net, &packet_mangler, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv4.iptable_mangle))
> -		return PTR_ERR(net->ipv4.iptable_mangle);
> -	return 0;
> +	return PTR_RET(net->ipv4.iptable_mangle);
>  }
>  
>  static void __net_exit iptable_mangle_net_exit(struct net *net)
> --- linux.orig/net/ipv4/netfilter/iptable_raw.c	2012-07-29 08:41:09.467759529 +0800
> +++ linux/net/ipv4/netfilter/iptable_raw.c	2012-07-29 08:41:14.259759643 +0800
> @@ -48,9 +48,7 @@ static int __net_init iptable_raw_net_in
>  	net->ipv4.iptable_raw =
>  		ipt_register_table(net, &packet_raw, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv4.iptable_raw))
> -		return PTR_ERR(net->ipv4.iptable_raw);
> -	return 0;
> +	return PTR_RET(net->ipv4.iptable_raw);
>  }
>  
>  static void __net_exit iptable_raw_net_exit(struct net *net)
> --- linux.orig/net/ipv4/netfilter/iptable_security.c	2012-07-29 08:41:09.439759529 +0800
> +++ linux/net/ipv4/netfilter/iptable_security.c	2012-07-29 08:41:14.259759643 +0800
> @@ -66,10 +66,7 @@ static int __net_init iptable_security_n
>  	net->ipv4.iptable_security =
>  		ipt_register_table(net, &security_table, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv4.iptable_security))
> -		return PTR_ERR(net->ipv4.iptable_security);
> -
> -	return 0;
> +	return PTR_RET(net->ipv4.iptable_security);
>  }
>  
>  static void __net_exit iptable_security_net_exit(struct net *net)
> --- linux.orig/net/ipv6/netfilter/ip6table_filter.c	2012-07-29 08:41:09.643759533 +0800
> +++ linux/net/ipv6/netfilter/ip6table_filter.c	2012-07-29 08:41:14.259759643 +0800
> @@ -61,9 +61,7 @@ static int __net_init ip6table_filter_ne
>  	net->ipv6.ip6table_filter =
>  		ip6t_register_table(net, &packet_filter, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv6.ip6table_filter))
> -		return PTR_ERR(net->ipv6.ip6table_filter);
> -	return 0;
> +	return PTR_RET(net->ipv6.ip6table_filter);
>  }
>  
>  static void __net_exit ip6table_filter_net_exit(struct net *net)
> --- linux.orig/net/ipv6/netfilter/ip6table_mangle.c	2012-07-29 08:41:09.615759532 +0800
> +++ linux/net/ipv6/netfilter/ip6table_mangle.c	2012-07-29 08:41:14.259759643 +0800
> @@ -97,9 +97,7 @@ static int __net_init ip6table_mangle_ne
>  	net->ipv6.ip6table_mangle =
>  		ip6t_register_table(net, &packet_mangler, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv6.ip6table_mangle))
> -		return PTR_ERR(net->ipv6.ip6table_mangle);
> -	return 0;
> +	return PTR_RET(net->ipv6.ip6table_mangle);
>  }
>  
>  static void __net_exit ip6table_mangle_net_exit(struct net *net)
> --- linux.orig/net/ipv6/netfilter/ip6table_raw.c	2012-07-29 08:41:09.583759532 +0800
> +++ linux/net/ipv6/netfilter/ip6table_raw.c	2012-07-29 08:41:14.259759643 +0800
> @@ -40,9 +40,7 @@ static int __net_init ip6table_raw_net_i
>  	net->ipv6.ip6table_raw =
>  		ip6t_register_table(net, &packet_raw, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv6.ip6table_raw))
> -		return PTR_ERR(net->ipv6.ip6table_raw);
> -	return 0;
> +	return PTR_RET(net->ipv6.ip6table_raw);
>  }
>  
>  static void __net_exit ip6table_raw_net_exit(struct net *net)
> --- linux.orig/net/ipv6/netfilter/ip6table_security.c	2012-07-29 08:41:09.555759531 +0800
> +++ linux/net/ipv6/netfilter/ip6table_security.c	2012-07-29 08:41:14.259759643 +0800
> @@ -58,10 +58,7 @@ static int __net_init ip6table_security_
>  	net->ipv6.ip6table_security =
>  		ip6t_register_table(net, &security_table, repl);
>  	kfree(repl);
> -	if (IS_ERR(net->ipv6.ip6table_security))
> -		return PTR_ERR(net->ipv6.ip6table_security);
> -
> -	return 0;
> +	return PTR_RET(net->ipv6.ip6table_security);
>  }
>  
>  static void __net_exit ip6table_security_net_exit(struct net *net)
> --
> To unsubscribe from this list: send the line "unsubscribe kernel-janitors" in
> the body of a message to majordomo@vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> 
> 
