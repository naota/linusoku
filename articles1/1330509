Path: news.gmane.org!not-for-mail
From: Carsten Emde <C.Emde@osadl.org>
Newsgroups: gmane.linux.kernel
Subject: [PATCH 1/1 v2] Honor state disabling in the cpuidle ladder governor
Date: Thu, 19 Jul 2012 20:52:13 +0200
Lines: 78
Approved: news@gmane.org
Message-ID: <20120719190740.215034590@osadl.org>
References: <201207192042.57935.rjw@sisk.pl> <20120717185914.063547728@osadl.org> <5007EC10.1060508@linux.vnet.ibm.com> <5007F1F3.9090706@osadl.org>
 <20120719185212.184458166@osadl.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1342725167 24914 80.91.229.3 (19 Jul 2012 19:12:47 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 19 Jul 2012 19:12:47 +0000 (UTC)
Cc: Deepthi Dharwar <deepthi@linux.vnet.ibm.com>,
	Len Brown <len.brown@intel.com>, Kevin Hilman <khilman@ti.com>,
	Thomas Gleixner <tglx@linutronix.de>,
	LKML <linux-kernel@vger.kernel.org>,
	Linux PM mailing list <linux-pm@vger.kernel.org>,
	Carsten Emde <C.Emde@osadl.org>
To: Rafael Wysocki <rjw@sisk.pl>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 19 21:12:45 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Srw9M-00062J-MC
	for glk-linux-kernel-3@plane.gmane.org; Thu, 19 Jul 2012 21:12:37 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752244Ab2GSTMV (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 19 Jul 2012 15:12:21 -0400
Original-Received: from toro.web-alm.net ([62.245.132.31]:58169 "EHLO toro.web-alm.net"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1750981Ab2GSTMO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 19 Jul 2012 15:12:14 -0400
Original-Received: from toro.web-alm.net (localhost.localdomain [127.0.0.1])
	by toro.web-alm.net (8.12.11.20060308/8.12.11/Web-Alm-2003112001) with ESMTP id q6JJC6P0012567;
	Thu, 19 Jul 2012 21:12:06 +0200
Original-Received: from rack3slot8.osadl.org (uucp@localhost)
	by toro.web-alm.net (8.12.11.20060308/8.12.10/Submit/Web-Alm-2003112001) with bsmtp id q6JJC6Sj012565;
	Thu, 19 Jul 2012 21:12:06 +0200
Original-Received: from rack0slot7.osadl.org (rack0slot7.osadl.org [192.168.255.7])
	by rack3slot8.osadl.org (8.13.8/8.13.8/CE-2010120801) with ESMTP id q6JJ7e5Y012121;
	Thu, 19 Jul 2012 21:07:40 +0200
Original-Received: from rack0slot7.osadl.org (rack0slot7.osadl.org [127.0.0.1])
	by rack0slot7.osadl.org (8.14.5/8.14.5) with ESMTP id q6JJ7egt014314;
	Thu, 19 Jul 2012 21:07:40 +0200
Original-Received: (from root@localhost)
	by rack0slot7.osadl.org (8.14.5/8.14.5/Submit) id q6JJ7eWT014312;
	Thu, 19 Jul 2012 21:07:40 +0200
User-Agent: quilt/0.51-1
Content-Disposition: inline; filename=drivers-cpuidle-ladder-honor-disabling-with-doc.patch
X-Virus-Scanned: ClamAV version 0.94.2, clamav-milter version 0.94.2 on rack3slot8.osadl.org
X-Virus-Status: Clean
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330509
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330509>

There are two cpuidle governors ladder and menu. While the ladder
governor is always available, if CONFIG_CPU_IDLE is selected, the
menu governor additionally requires CONFIG_NO_HZ.

A particular C state can be disabled by writing to the sysfs file
/sys/devices/system/cpu/cpuN/cpuidle/stateN/disable, but this mechanism
is only implemented in the menu governor. Thus, in a system where
CONFIG_NO_HZ is not selected, the ladder governor becomes default and
always will walk through all sleep states - irrespective of whether the
C state was disabled via sysfs or not. The only way to select a specific
C state was to write the related latency to /dev/cpu_dma_latency and
keep the file open as long as this setting was required - not very
practical and not suitable for setting a single core in an SMP system.

With this patch, the ladder governor only will promote to the next
C state, if it has not been disabled, and it will demote, if the
current C state was disabled.

Note that the patch does not make the setting of the sysfs variable
"disable" coherent, i.e. if one is disabling a light state, then all
deeper states are disabled as well, but the "disable" variable does not
reflect it. Likewise, if one enables a deep state but a lighter state
still is disabled, then this has no effect. A related section has been
added to the documentation.

Signed-off-by: Carsten Emde <C.Emde@osadl.org>

---
 Documentation/cpuidle/sysfs.txt    |   10 +++++++++-
 drivers/cpuidle/governors/ladder.c |    4 +++-
 2 files changed, 12 insertions(+), 2 deletions(-)

Index: linux-3.4.4-rt14-rc2-64/Documentation/cpuidle/sysfs.txt
===================================================================
--- linux-3.4.4-rt14-rc2-64.orig/Documentation/cpuidle/sysfs.txt
+++ linux-3.4.4-rt14-rc2-64/Documentation/cpuidle/sysfs.txt
@@ -76,9 +76,17 @@ total 0
 
 
 * desc : Small description about the idle state (string)
-* disable : Option to disable this idle state (bool)
+* disable : Option to disable this idle state (bool) -> see note below
 * latency : Latency to exit out of this idle state (in microseconds)
 * name : Name of the idle state (string)
 * power : Power consumed while in this idle state (in milliwatts)
 * time : Total time spent in this idle state (in microseconds)
 * usage : Number of times this state was entered (count)
+
+Note:
+The behavior and the effect of the disable variable depends on the
+implementation of a particular governor. In the ladder governor, for
+example, it is not coherent, i.e. if one is disabling a light state,
+then all deeper states are disabled as well, but the disable variable
+does not reflect it. Likewise, if one enables a deep state but a lighter
+state still is disabled, then this has no effect.
Index: linux-3.4.4-rt14-rc2-64/drivers/cpuidle/governors/ladder.c
===================================================================
--- linux-3.4.4-rt14-rc2-64.orig/drivers/cpuidle/governors/ladder.c
+++ linux-3.4.4-rt14-rc2-64/drivers/cpuidle/governors/ladder.c
@@ -88,6 +88,7 @@ static int ladder_select_state(struct cp
 
 	/* consider promotion */
 	if (last_idx < drv->state_count - 1 &&
+	    !drv->states[last_idx + 1].disable &&
 	    last_residency > last_state->threshold.promotion_time &&
 	    drv->states[last_idx + 1].exit_latency <= latency_req) {
 		last_state->stats.promotion_count++;
@@ -100,7 +101,8 @@ static int ladder_select_state(struct cp
 
 	/* consider demotion */
 	if (last_idx > CPUIDLE_DRIVER_STATE_START &&
-	    drv->states[last_idx].exit_latency > latency_req) {
+	    (drv->states[last_idx].disable ||
+	    drv->states[last_idx].exit_latency > latency_req)) {
 		int i;
 
 		for (i = last_idx - 1; i > CPUIDLE_DRIVER_STATE_START; i--) {

