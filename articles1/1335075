Path: news.gmane.org!not-for-mail
From: Glauber Costa <glommer@parallels.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel,gmane.linux.openvz.devel,gmane.linux.kernel.cgroups
Subject: Re: [PATCH 04/10] memcg: skip memcg kmem allocations in specified
 code regions
Date: Mon, 30 Jul 2012 18:09:23 +0400
Lines: 27
Approved: news@gmane.org
Message-ID: <50169593.5020506@parallels.com>
References: <1343227101-14217-1-git-send-email-glommer@parallels.com> <1343227101-14217-5-git-send-email-glommer@parallels.com> <20120730125004.GA27293@shutemov.name>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343657386 5901 80.91.229.3 (30 Jul 2012 14:09:46 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 14:09:46 +0000 (UTC)
Cc: <linux-kernel@vger.kernel.org>, <linux-mm@kvack.org>, Andrew Morton
	<akpm@linux-foundation.org>, Christoph Lameter <cl@linux.com>, David Rientjes
	<rientjes@google.com>, Pekka Enberg <penberg@kernel.org>, Greg Thelen
	<gthelen@google.com>, Johannes Weiner <hannes@cmpxchg.org>, Michal Hocko
	<mhocko@suse.cz>, Frederic Weisbecker <fweisbec@gmail.com>,
	<devel@openvz.org>, <cgroups@vger.kernel.org>, Pekka Enberg
	<penberg@cs.helsinki.fi>, Kamezawa Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>,
	Suleiman Souhlal <suleiman@google.com>
To: "Kirill A. Shutemov" <kirill@shutemov.name>
Original-X-From: owner-linux-mm@kvack.org Mon Jul 30 16:09:42 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SvqfF-0000We-4h
	for glkm-linux-mm-2@m.gmane.org; Mon, 30 Jul 2012 16:09:41 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id C012B6B004D; Mon, 30 Jul 2012 10:09:39 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id A13B46B005A; Mon, 30 Jul 2012 10:09:39 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 73ECE6B005D; Mon, 30 Jul 2012 10:09:39 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx110.postini.com [74.125.245.110])
	by kanga.kvack.org (Postfix) with SMTP id 633B36B004D
	for <linux-mm@kvack.org>; Mon, 30 Jul 2012 10:09:38 -0400 (EDT)
Original-Received: from mx2.parallels.com ([64.131.90.16]) (using TLSv1) by na3sys010amx110.postini.com ([74.125.244.10]) with SMTP;
	Mon, 30 Jul 2012 14:09:38 GMT
Original-Received: from [199.115.105.252] (helo=mail.parallels.com)
	by mx2.parallels.com with esmtps (TLSv1:AES128-SHA:128)
	(Exim 4.77)
	(envelope-from <glommer@parallels.com>)
	id 1Svqf4-0000vK-Qg; Mon, 30 Jul 2012 10:09:31 -0400
Original-Received: from straightjacket.localdomain (195.214.232.10) by
 mail.parallels.com (10.255.249.32) with Microsoft SMTP Server (TLS) id
 14.2.247.3; Mon, 30 Jul 2012 07:09:29 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120717 Thunderbird/14.0
In-Reply-To: <20120730125004.GA27293@shutemov.name>
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-pstn-settings: 3 (1.0000:1.0000) s cv gt3 gt2 gt1 r p m c 
X-pstn-addresses: from <glommer@parallels.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83173 gmane.linux.kernel:1335075 gmane.linux.openvz.devel:1946 gmane.linux.kernel.cgroups:3483
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335075>

On 07/30/2012 04:50 PM, Kirill A. Shutemov wrote:
> On Wed, Jul 25, 2012 at 06:38:15PM +0400, Glauber Costa wrote:
>> This patch creates a mechanism that skip memcg allocations during
>> certain pieces of our core code. It basically works in the same way
>> as preempt_disable()/preempt_enable(): By marking a region under
>> which all allocations will be accounted to the root memcg.
>>
>> We need this to prevent races in early cache creation, when we
>> allocate data using caches that are not necessarily created already.
> 
> Why not a GFP_* flag?
> 

The main reason for this is to prevent nested calls of
kmem_cache_create(), since they could create (and in my tests, do
create) funny circular dependencies with each other. So the cache
creation itself would proceed without involving memcg.

At first, it is a bit weird to have cache creation itself depending on a
allocation flag test.

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

