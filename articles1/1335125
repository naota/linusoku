Path: news.gmane.org!not-for-mail
From: Greg Thelen <gthelen-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
Newsgroups: gmane.linux.kernel.cgroups,gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [PATCH V2 5/6] memcg: add per cgroup writeback pages accounting
Date: Mon, 30 Jul 2012 08:02:21 -0700
Lines: 125
Approved: news@gmane.org
Message-ID: <xr93k3xl9ts2.fsf@gthelen.mtv.corp.google.com>
References: <1343384432-19903-1-git-send-email-handai.szj@taobao.com>
	<1343384931-20202-1-git-send-email-handai.szj@taobao.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343660551 3861 80.91.229.3 (30 Jul 2012 15:02:31 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 15:02:31 +0000 (UTC)
Cc: linux-mm-Bw31MaZKKs3YtjvyW6yDsg@public.gmane.org, cgroups-u79uwXL29TY76Z2rM5mHXA@public.gmane.org,
	fengguang.wu-ral2JQCrhuEAvxtiuMwx3w@public.gmane.org, akpm-de/tnXTf+JLsfHDXvbKv3WD2FQJk+8+b@public.gmane.org,
	yinghan-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org, mhocko-AlSwsSmVLrQ@public.gmane.org, linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org,
	hannes-druUgvl0LCNAfugRpC6u6w@public.gmane.org, Sha Zhengju <handai.szj-3b8fjiQLQpfQT0dZR+AlfA@public.gmane.org>
To: Sha Zhengju <handai.szj-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
Original-X-From: cgroups-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org Mon Jul 30 17:02:28 2012
Return-path: <cgroups-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>
Envelope-to: glkc-cgroups-wOFGN7rlS/M9smdsby/KFg@public.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <cgroups-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>)
	id 1SvrUJ-0003LL-KM
	for glkc-cgroups-wOFGN7rlS/M9smdsby/KFg@public.gmane.org; Mon, 30 Jul 2012 17:02:28 +0200
Original-Received: (majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org) by vger.kernel.org via listexpand
	id S1754393Ab2G3PC0 (ORCPT <rfc822;glkc-cgroups@m.gmane.org>);
	Mon, 30 Jul 2012 11:02:26 -0400
Original-Received: from mail-ee0-f74.google.com ([74.125.83.74]:35113 "EHLO
	mail-ee0-f74.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754453Ab2G3PCY (ORCPT
	<rfc822;cgroups-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>); Mon, 30 Jul 2012 11:02:24 -0400
Original-Received: by eekd4 with SMTP id d4so235880eek.1
        for <cgroups-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>; Mon, 30 Jul 2012 08:02:23 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:references:date:in-reply-to:message-id
         :user-agent:mime-version:content-type;
        bh=TeFQZb1LcCP+iHjl1BY141exdOUHTeHOeWHtobVqHd4=;
        b=HJFJLEqbte4ShM9QHpuBSZ6aB7RsHqs1yymDbFs7FD0a08rDASGJXIFNaqXwtzLV4z
         8Hj5WbGWUGODMJiZ5DwOf2blrHCS07OQk5qspsclcDSwjnX0BvbEUibLWsmqmZ19PYP+
         cuezSls1IB6BWo+V0RVdZ9FB0kxLk+qIgtohnEUvwZrJVghj4VaLh1pYFMNMHXAIDpGk
         MStnJ04222dNkKtCygO8dPA5SUoBCHdrMsZqfdVZCRXZa9Koru32wtvv/hGbovpl+oBc
         a1oDHegU1TL7CvbO05o3ng07OweGPZCVWX5R5vvNrWszv7IZIxg9FTaC15HtuVkvwFBS
         OcuA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:references:date:in-reply-to:message-id
         :user-agent:mime-version:content-type:x-gm-message-state;
        bh=TeFQZb1LcCP+iHjl1BY141exdOUHTeHOeWHtobVqHd4=;
        b=KTvr1nmE2NmG7sFpC6rY9c1JBxDRFEqEkEKlA5zkd9a/fysPWPtfesJiqiD0qNIwtl
         Tg5e533K6vO+R/IKY8T/kaC7COEpmOPsEIFGe1FfCmC7+0bMw23UTEQV1WhRLJbvGDwb
         ffr1Sa/1fmbJ+Jt1BEsW6TnAWofUk3HG9kXAGFnJGdAcesFkut4n+X3B5EVW6CZ8KTtu
         p8RtqKFjCJL8LCNd+py1BSKRsJDGY8RoKUPV5XNo9RU8jFU+OIB0OeHKgCUfkjdLL8sf
         x8JSicSEPyqfwsHqfGQ7+D4zl92W8mdfiPmsNQMeP3OE47MT8vhrr3PeNVu9eOkwtUua
         hlYw==
Original-Received: by 10.14.209.196 with SMTP id s44mr2033527eeo.1.1343660543172;
        Mon, 30 Jul 2012 08:02:23 -0700 (PDT)
Original-Received: by 10.14.209.196 with SMTP id s44mr2033506eeo.1.1343660543095;
        Mon, 30 Jul 2012 08:02:23 -0700 (PDT)
Original-Received: from hpza9.eem.corp.google.com ([74.125.121.33])
        by gmr-mx.google.com with ESMTPS id v42si15165656eep.0.2012.07.30.08.02.23
        (version=TLSv1/SSLv3 cipher=AES128-SHA);
        Mon, 30 Jul 2012 08:02:23 -0700 (PDT)
Original-Received: from gthelen.mtv.corp.google.com (gthelen.mtv.corp.google.com [172.18.96.19])
	by hpza9.eem.corp.google.com (Postfix) with ESMTP id B28E95C0060;
	Mon, 30 Jul 2012 08:02:22 -0700 (PDT)
Original-Received: by gthelen.mtv.corp.google.com (Postfix, from userid 104648)
	id 0859E100437; Mon, 30 Jul 2012 08:02:21 -0700 (PDT)
In-Reply-To: <1343384931-20202-1-git-send-email-handai.szj-3b8fjiQLQpfQT0dZR+AlfA@public.gmane.org> (Sha
	Zhengju's message of "Fri, 27 Jul 2012 18:28:51 +0800")
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/23.1 (gnu/linux)
X-Gm-Message-State: ALoCoQkyjzmH3wos0Km9RzCYnLl/DF5n6CKctOf5Vi7QyCawxRRvj5MKW5/mnd1W/OKUQnvESlIdgwH7qZClyUhsMhaz1hMsAs8SY25h3QHzhsFhHi5SmhSCp+xv5WQpZzdeRFrq/bAU0HXuXYo2+VgFTn76vvoddEmtaJgNuivw+8STl0iGqbuZLb02eiwfDpUOd0BMwuFn
Original-Sender: cgroups-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Precedence: bulk
List-ID: <cgroups.vger.kernel.org>
X-Mailing-List: cgroups-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Xref: news.gmane.org gmane.linux.kernel.cgroups:3486 gmane.linux.kernel.mm:83176 gmane.linux.kernel:1335125
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335125>

On Fri, Jul 27 2012, Sha Zhengju wrote:

> From: Sha Zhengju <handai.szj-3b8fjiQLQpfQT0dZR+AlfA@public.gmane.org>
>
> Similar to dirty page, we add per cgroup writeback pages accounting. The lock
> rule still is:
>         mem_cgroup_begin_update_page_stat()
>         modify page WRITEBACK stat
>         mem_cgroup_update_page_stat()
>         mem_cgroup_end_update_page_stat()
>
> There're two writeback interface to modify: test_clear/set_page_writeback.
>
> Signed-off-by: Sha Zhengju <handai.szj-3b8fjiQLQpfQT0dZR+AlfA@public.gmane.org>
> ---
>  include/linux/memcontrol.h |    1 +
>  mm/memcontrol.c            |    5 +++++
>  mm/page-writeback.c        |   17 +++++++++++++++++
>  3 files changed, 23 insertions(+), 0 deletions(-)
>
> diff --git a/include/linux/memcontrol.h b/include/linux/memcontrol.h
> index 8c6b8ca..0c8a699 100644
> --- a/include/linux/memcontrol.h
> +++ b/include/linux/memcontrol.h
> @@ -42,6 +42,7 @@ enum mem_cgroup_stat_index {
>  	MEM_CGROUP_STAT_FILE_MAPPED,  /* # of pages charged as file rss */
>  	MEM_CGROUP_STAT_SWAP, /* # of pages, swapped out */
>  	MEM_CGROUP_STAT_FILE_DIRTY,  /* # of dirty pages in page cache */
> +	MEM_CGROUP_STAT_WRITEBACK,  /* # of pages under writeback */
>  	MEM_CGROUP_STAT_NSTATS,
>  };
>  
> diff --git a/mm/memcontrol.c b/mm/memcontrol.c
> index cdcd547..de91d3d 100644
> --- a/mm/memcontrol.c
> +++ b/mm/memcontrol.c
> @@ -86,6 +86,7 @@ static const char * const mem_cgroup_stat_names[] = {
>  	"mapped_file",
>  	"swap",
>  	"dirty",
> +	"writeback",
>  };
>  
>  enum mem_cgroup_events_index {
> @@ -2607,6 +2608,10 @@ static int mem_cgroup_move_account(struct page *page,
>  		mem_cgroup_move_account_page_stat(from, to,
>  				MEM_CGROUP_STAT_FILE_DIRTY);
>  
> +	if (PageWriteback(page))
> +		mem_cgroup_move_account_page_stat(from, to,
> +				MEM_CGROUP_STAT_WRITEBACK);
> +
>  	mem_cgroup_charge_statistics(from, anon, -nr_pages);
>  
>  	/* caller should have done css_get */
> diff --git a/mm/page-writeback.c b/mm/page-writeback.c
> index 233e7ac..6b06d5e 100644
> --- a/mm/page-writeback.c
> +++ b/mm/page-writeback.c
> @@ -1956,11 +1956,17 @@ EXPORT_SYMBOL(account_page_dirtied);
>  
>  /*
>   * Helper function for set_page_writeback family.
> + *
> + * The caller must hold mem_cgroup_begin/end_update_page_stat() lock
> + * while modifying struct page state and accounting writeback pages.
> + * See test_set_page_writeback for example.
> + *
>   * NOTE: Unlike account_page_dirtied this does not rely on being atomic
>   * wrt interrupts.
>   */
>  void account_page_writeback(struct page *page)
>  {
> +	mem_cgroup_inc_page_stat(page, MEM_CGROUP_STAT_WRITEBACK);
>  	inc_zone_page_state(page, NR_WRITEBACK);
>  }
>  EXPORT_SYMBOL(account_page_writeback);
> @@ -2192,7 +2198,10 @@ int test_clear_page_writeback(struct page *page)
>  {
>  	struct address_space *mapping = page_mapping(page);
>  	int ret;
> +	bool locked;
> +	unsigned long flags;
>  
> +	mem_cgroup_begin_update_page_stat(page, &locked, &flags);

Reusing a variable name (flags) in the same function can cause
confusion.  Please use a different name.  Maybe memcg_flags.

>  	if (mapping) {
>  		struct backing_dev_info *bdi = mapping->backing_dev_info;
>  		unsigned long flags;
> @@ -2213,9 +2222,12 @@ int test_clear_page_writeback(struct page *page)
>  		ret = TestClearPageWriteback(page);
>  	}
>  	if (ret) {
> +		mem_cgroup_dec_page_stat(page, MEM_CGROUP_STAT_WRITEBACK);
>  		dec_zone_page_state(page, NR_WRITEBACK);
>  		inc_zone_page_state(page, NR_WRITTEN);
>  	}
> +
> +	mem_cgroup_end_update_page_stat(page, &locked, &flags);
>  	return ret;
>  }
>  
> @@ -2223,7 +2235,10 @@ int test_set_page_writeback(struct page *page)
>  {
>  	struct address_space *mapping = page_mapping(page);
>  	int ret;
> +	bool locked;
> +	unsigned long flags;
>  
> +	mem_cgroup_begin_update_page_stat(page, &locked, &flags);
>  	if (mapping) {
>  		struct backing_dev_info *bdi = mapping->backing_dev_info;
>  		unsigned long flags;
> @@ -2250,6 +2265,8 @@ int test_set_page_writeback(struct page *page)
>  	}
>  	if (!ret)
>  		account_page_writeback(page);
> +
> +	mem_cgroup_end_update_page_stat(page, &locked, &flags);
>  	return ret;
>  
>  }
