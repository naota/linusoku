Path: news.gmane.org!not-for-mail
From: Ben Chan <benchan@chromium.org>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH v2] staging: gdm72xx: fix reference counting in gdm_wimax_event_init
Date: Wed, 25 Jul 2012 06:53:55 -0700
Lines: 83
Approved: news@gmane.org
Message-ID: <CAC5Y2nMeYvKhMjPFFa-3tGLOOyxXX1B8MZSbXrMLsNDPJmdmzA@mail.gmail.com>
References: <1343141382-31087-1-git-send-email-benchan@chromium.org> <CAHdPZaOTvF=e3j8ypzK8_V5Uh_8Nk1U74uVe4tcXs+cdQvimjg@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343224469 18749 80.91.229.3 (25 Jul 2012 13:54:29 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 13:54:29 +0000 (UTC)
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org,
	Dan Carpenter <dan.carpenter@oracle.com>
To: "devendra.aaru" <devendra.aaru@gmail.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Jul 25 15:54:28 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Su22j-0008C5-JW
	for glk-linux-kernel-3@plane.gmane.org; Wed, 25 Jul 2012 15:54:26 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933104Ab2GYNyS (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 25 Jul 2012 09:54:18 -0400
Original-Received: from mail-vb0-f46.google.com ([209.85.212.46]:33306 "EHLO
	mail-vb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932927Ab2GYNyQ (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 25 Jul 2012 09:54:16 -0400
Original-Received: by vbbff1 with SMTP id ff1so566760vbb.19
        for <linux-kernel@vger.kernel.org>; Wed, 25 Jul 2012 06:54:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:from:date
         :x-google-sender-auth:message-id:subject:to:cc:content-type
         :x-system-of-record;
        bh=fNzLJpQI7NMe2IIPGcdra2x9x++Cqbf/0zluUiZMpq0=;
        b=ZT9YXyqlr2LQXJHPLefj4kiFZEeKoaP4zz2p7n9ckaIe0kcArRE3USLM1ZaXiuZcWp
         1opC7ZSVbOyAPCsSLYPKpJRHJ0+9CdycjQiBE01BB8rNsCWXRVquwAVdyzc2p4Hkc9fP
         L9rwrqZeG7uxzAk6CxbrgzQAAJ7qbeE0kab7ZCvuAM0iV5yQGrVtmW2simxFYHUJEbTS
         TseG0Qn4d0WnOk7E+cZm1p+90fdViJv57UaVj118OWvYquOOVc4a6Ue1xHAwX/pMOxyT
         h0W2j3iVd0BC2k4MaLPO/R3mYQ3Q8l5Z5TjeW9rfMfNC2bfZfdnBuYkd5gx9D248MqdK
         GDYA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:from:date
         :x-google-sender-auth:message-id:subject:to:cc:content-type
         :x-system-of-record:x-gm-message-state;
        bh=fNzLJpQI7NMe2IIPGcdra2x9x++Cqbf/0zluUiZMpq0=;
        b=kaqcXCF200z/A7G0zRiy+jWaI6Uwmx7gvs7x/1CUaL1BNnNqOmgXegKdUbsVnDwCx+
         B+LkUuegJYya+FPO5ZulGibEgJpAmNnxFoKjM0QDz2D625yt2Z8ERoaoOK5JwEgXCw8N
         mU0ZRJQveYiD/uyKkgpgVDNboz5D24L+9Tcw3Cv848b9tP5v/5xQN8SOs1cQy5fsf96E
         QDWJFEbZSzfELASikksecjgto+A32uZRGFiWWLarsMKpk3u+2eOmnxp+sDt69ez4Wx90
         Tw6Hb8mLaOlrjhgRA+bWb9Ldf1/r1iFRPscLUFEj4n4riaiup8XnB1nIFIetvx+MJNsP
         7vwA==
Original-Received: by 10.52.98.101 with SMTP id eh5mr15918292vdb.8.1343224456053;
        Wed, 25 Jul 2012 06:54:16 -0700 (PDT)
Original-Received: by 10.52.98.101 with SMTP id eh5mr15918284vdb.8.1343224455933; Wed,
 25 Jul 2012 06:54:15 -0700 (PDT)
Original-Received: by 10.52.171.139 with HTTP; Wed, 25 Jul 2012 06:53:55 -0700 (PDT)
In-Reply-To: <CAHdPZaOTvF=e3j8ypzK8_V5Uh_8Nk1U74uVe4tcXs+cdQvimjg@mail.gmail.com>
X-Google-Sender-Auth: OdyGkyccCC9-GlC76Hm6Td00T_s
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQnKcYoVA21bmmV7/8RamQ39sJgWt4RZhcPFK1SIpaWnH4MhJ4MVNDuvS/vZxUGeEorFQRSFDOsM0yM7HgVpgt5kAgfFVxRtQJwrbcW8d6gA39QWYp2whHrKAXiS7dlP/XSASUB4yqobR18qrdCtY/6jffZAp/4KQHn7PHXfnSfQmx1t1UmpSzM+9KotW3IkSKrYuxxq
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332993
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332993>

Hi Devendra,

Thanks for cleaning up the driver.  If I understand the code
correctly, the original author wanted to initialize wm_event once and
reuse it for multiple devices, and thus reference counted it with
ref_cnt.

For instance, each time gdm_usb_probe() is called, it may call
register_wimax_device() / gdm_wimax_event_init(). wm_event is
initialized the first time when wm_event.ref_cnt == 0 (alternatively,
the code could check !wm_event.sock). Subsequent calls to
gdm_wimax_event_init() will simply increase the ref count. Similarly,
gdm_usb_disconnect() calls unregister_wimax_device() /
gdm_wimax_event_exit(), which decreases the ref count and disposes
wm_event when ref_cnt becomes zero.

The code change in commit 8df858ea76b76dde9a39d4edd9aaded983582cfe
only prevents ref_cnt from increasing beyond one. So the code no
longer work when there are multiple devices (i.e. wm_event could be
disposed even when there is an active device).

Thanks,
Ben


On Tue, Jul 24, 2012 at 9:50 PM, devendra.aaru <devendra.aaru@gmail.com> wrote:
> On Tue, Jul 24, 2012 at 8:34 PM, Ben Chan <benchan@chromium.org> wrote:
>> This patch fixes the commit "staging/gdm72xx: cleanup little at
>> gdm_wimax_event_rcv" (8df858ea76b76dde9a39d4edd9aaded983582cfe),
>> which mishandles the reference counting of wm_event.
>>
>> Signed-off-by: Ben Chan <benchan@chromium.org>
>> ---
>> Fixed the commit message as suggested by Dan Carpenter.
>>
>>  drivers/staging/gdm72xx/gdm_wimax.c |   16 ++++++++++------
>>  1 files changed, 10 insertions(+), 6 deletions(-)
>>
>> diff --git a/drivers/staging/gdm72xx/gdm_wimax.c b/drivers/staging/gdm72xx/gdm_wimax.c
>> index 0716efc..6cb8107 100644
>> --- a/drivers/staging/gdm72xx/gdm_wimax.c
>> +++ b/drivers/staging/gdm72xx/gdm_wimax.c
>> @@ -258,12 +258,16 @@ static int gdm_wimax_event_init(void)
>>         if (!wm_event.ref_cnt) {
>>                 wm_event.sock = netlink_init(NETLINK_WIMAX,
>>                                                 gdm_wimax_event_rcv);
>> -               if (wm_event.sock)
>> -                       wm_event.ref_cnt++;
>> -               INIT_LIST_HEAD(&wm_event.evtq);
>> -               INIT_LIST_HEAD(&wm_event.freeq);
>> -               INIT_WORK(&wm_event.ws, __gdm_wimax_event_send);
>> -               spin_lock_init(&wm_event.evt_lock);
>> +               if (wm_event.sock) {
>> +                       INIT_LIST_HEAD(&wm_event.evtq);
>> +                       INIT_LIST_HEAD(&wm_event.freeq);
>> +                       INIT_WORK(&wm_event.ws, __gdm_wimax_event_send);
>> +                       spin_lock_init(&wm_event.evt_lock);
>> +               }
>> +       }
>> +
>> +       if (wm_event.sock) {
>> +               wm_event.ref_cnt++;
>>                 return 0;
>>         }
>>
>> --
>> 1.7.7.3
>>
>
> Hi Ben,
>
> I have some basic understanding about this flow of the function,
>
> Here is my understanding of the thing i have done when i was doing
> some cleanups to this driver.
>
> The ref_cnt will be 0 at first time. if so the sock creation happens
> only once, and register_wimax_device only calls this function.
> so i think doing the ref_cnt++ inside the if (!wm_event.ref_cnt) is valid.
>
> Please suggest me if i am wrong.
>
> Thanks,
