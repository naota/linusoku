Path: news.gmane.org!not-for-mail
From: Oleg Nesterov <oleg@redhat.com>
Newsgroups: gmane.linux.kernel.hardened.devel,gmane.linux.kernel
Subject: Re: [PATCH] proc: do not allow negative offsets on
	/proc/<pid>/environ
Date: Sun, 22 Jul 2012 22:00:49 +0200
Lines: 34
Approved: news@gmane.org
Message-ID: <20120722200049.GA29222@redhat.com>
References: <1342974959-2748-1-git-send-email-tixxdz@opendz.org>
Reply-To: kernel-hardening@lists.openwall.com
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342987433 17667 80.91.229.3 (22 Jul 2012 20:03:53 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 22 Jul 2012 20:03:53 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, kernel-hardening@lists.openwall.com,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Vasiliy Kulikov <segoon@openwall.com>,
        WANG Cong <xiyou.wangcong@gmail.com>,
        Solar Designer <solar@openwall.com>, Kees Cook <keescook@chromium.org>
To: Djalal Harouni <tixxdz@opendz.org>
Original-X-From: kernel-hardening-return-1336-glkh-kernel-hardening=m.gmane.org@lists.openwall.com Sun Jul 22 22:03:51 2012
Return-path: <kernel-hardening-return-1336-glkh-kernel-hardening=m.gmane.org@lists.openwall.com>
Envelope-to: glkh-kernel-hardening@plane.gmane.org
Original-Received: from mother.openwall.net ([195.42.179.200])
	by plane.gmane.org with smtp (Exim 4.69)
	(envelope-from <kernel-hardening-return-1336-glkh-kernel-hardening=m.gmane.org@lists.openwall.com>)
	id 1St2Nb-0001Xe-CL
	for glkh-kernel-hardening@plane.gmane.org; Sun, 22 Jul 2012 22:03:51 +0200
Original-Received: (qmail 11688 invoked by uid 550); 22 Jul 2012 20:03:50 -0000
Mailing-List: contact kernel-hardening-help@lists.openwall.com; run by ezmlm
Precedence: bulk
List-Post: <mailto:kernel-hardening@lists.openwall.com>
List-Help: <mailto:kernel-hardening-help@lists.openwall.com>
List-Unsubscribe: <mailto:kernel-hardening-unsubscribe@lists.openwall.com>
List-Subscribe: <mailto:kernel-hardening-subscribe@lists.openwall.com>
Delivered-To: mailing list kernel-hardening@lists.openwall.com
Original-Received: (qmail 11680 invoked from network); 22 Jul 2012 20:03:50 -0000
Content-Disposition: inline
In-Reply-To: <1342974959-2748-1-git-send-email-tixxdz@opendz.org>
User-Agent: Mutt/1.5.18 (2008-05-17)
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.25
Xref: news.gmane.org gmane.linux.kernel.hardened.devel:473 gmane.linux.kernel:1331407
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331407>

On 07/22, Djalal Harouni wrote:
>
> __mem_open() which is called by both /proc/<pid>/environ and
> /proc/<pid>/mem ->open() handlers will allow the use of negative offsets.
> /proc/<pid>/mem has negative offsets but not /proc/<pid>/environ.

Probablt the patch makes sense, but I can't understand the changelog...

> Allowing negative offsets on /proc/<pid>/environ can turn it to act like
> /proc/<pid>/mem. A negative offset will pass the
> fs/read_write.c:lseek_execute() and the environ_read() checks and will
> point to another VMA.

which VMA?

environ_read() can only read the memory from [env_start, env_end], and
it should check *ppos anyway to ensure it doesn't read something else.

>  static int mem_open(struct inode *inode, struct file *file)
>  {
> -	return __mem_open(inode, file, PTRACE_MODE_ATTACH);
> +	int ret = __mem_open(inode, file, PTRACE_MODE_ATTACH);
> +	if (!ret)
> +		/* OK to pass negative loff_t, we can catch out-of-range */
> +		file->f_mode |= FMODE_UNSIGNED_OFFSET;
> +
> +	return ret;

I guess you can set FMODE_UNSIGNED_OFFSET unconditionally, it doesn't
matter if __mem_open() fails. But I won't insist.

Oleg.


