Path: news.gmane.org!not-for-mail
From: Vinod Koul <vinod.koul@linux.intel.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH V2] dma: tegra: enable/disable dma clock
Date: Tue, 24 Jul 2012 10:38:18 +0530
Lines: 79
Approved: news@gmane.org
Message-ID: <1343106498.1726.5974.camel@vkoul-udesk3>
References: <1342771268-5252-1-git-send-email-ldewangan@nvidia.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343106495 25600 80.91.229.3 (24 Jul 2012 05:08:15 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 05:08:15 +0000 (UTC)
Cc: dan.j.williams@intel.com, swarren@nvidia.com,
	linux-kernel@vger.kernel.org
To: Laxman Dewangan <ldewangan@nvidia.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 07:08:15 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StXLw-0001yo-QK
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 07:08:13 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752709Ab2GXFH4 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 24 Jul 2012 01:07:56 -0400
Original-Received: from mga09.intel.com ([134.134.136.24]:41459 "EHLO mga09.intel.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751350Ab2GXFHz (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 24 Jul 2012 01:07:55 -0400
Original-Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by orsmga102.jf.intel.com with ESMTP; 23 Jul 2012 22:07:55 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="4.67,352,1309762800"; 
   d="scan'208";a="170506848"
Original-Received: from vkoul-udesk3.iind.intel.com (HELO [10.223.84.41]) ([10.223.84.41])
  by orsmga001.jf.intel.com with ESMTP; 23 Jul 2012 22:07:52 -0700
In-Reply-To: <1342771268-5252-1-git-send-email-ldewangan@nvidia.com>
X-Mailer: Evolution 2.28.3 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332135
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332135>

On Fri, 2012-07-20 at 13:31 +0530, Laxman Dewangan wrote:
> Enable the DMA clock when allocating channel and
> disable clock when freeing channels.
> 
> Signed-off-by: Laxman Dewangan <ldewangan@nvidia.com>
> ---
> Changes from V1 to V2:
> - Enable/disable clock when allocating/freeing channels.
> - rewrite the description to reflect change.
> 
>  drivers/dma/tegra20-apb-dma.c |   18 +++++++++++++++++-
>  1 files changed, 17 insertions(+), 1 deletions(-)
> 
> diff --git a/drivers/dma/tegra20-apb-dma.c b/drivers/dma/tegra20-apb-dma.c
> index d52dbc6..24acd71 100644
> --- a/drivers/dma/tegra20-apb-dma.c
> +++ b/drivers/dma/tegra20-apb-dma.c
> @@ -1119,15 +1119,21 @@ struct dma_async_tx_descriptor *tegra_dma_prep_dma_cyclic(
>  static int tegra_dma_alloc_chan_resources(struct dma_chan *dc)
>  {
>  	struct tegra_dma_channel *tdc = to_tegra_dma_chan(dc);
> +	struct tegra_dma *tdma = tdc->tdma;
> +	int ret;
>  
>  	dma_cookie_init(&tdc->dma_chan);
>  	tdc->config_init = false;
> -	return 0;
> +	ret = clk_prepare_enable(tdma->dma_clk);
> +	if (ret < 0)
> +		dev_err(tdc2dev(tdc), "clk_prepare_enable failed: %d\n", ret);
> +	return ret;
>  }
>  
>  static void tegra_dma_free_chan_resources(struct dma_chan *dc)
>  {
>  	struct tegra_dma_channel *tdc = to_tegra_dma_chan(dc);
> +	struct tegra_dma *tdma = tdc->tdma;
>  
>  	struct tegra_dma_desc *dma_desc;
>  	struct tegra_dma_sg_req *sg_req;
> @@ -1163,6 +1169,7 @@ static void tegra_dma_free_chan_resources(struct dma_chan *dc)
>  		list_del(&sg_req->node);
>  		kfree(sg_req);
>  	}
> +	clk_disable_unprepare(tdma->dma_clk);
What if another channel is active, disabling clock can cause bad
behavior. You should check here if all channels are idle and then
disable, or is this handled by clock API?
>  }
>  
>  /* Tegra20 specific DMA controller information */
> @@ -1255,6 +1262,13 @@ static int __devinit tegra_dma_probe(struct platform_device *pdev)
>  		}
>  	}
>  
> +	/* Enable clock before accessing registers */
> +	ret = clk_prepare_enable(tdma->dma_clk);
> +	if (ret < 0) {
> +		dev_err(&pdev->dev, "clk_prepare_enable failed: %d\n", ret);
> +		goto err_pm_disable;
> +	}
> +
>  	/* Reset DMA controller */
>  	tegra_periph_reset_assert(tdma->dma_clk);
>  	udelay(2);
> @@ -1265,6 +1279,8 @@ static int __devinit tegra_dma_probe(struct platform_device *pdev)
>  	tdma_write(tdma, TEGRA_APBDMA_CONTROL, 0);
>  	tdma_write(tdma, TEGRA_APBDMA_IRQ_MASK_SET, 0xFFFFFFFFul);
>  
> +	clk_disable_unprepare(tdma->dma_clk);
> +
>  	INIT_LIST_HEAD(&tdma->dma_dev.channels);
>  	for (i = 0; i < cdata->nr_channels; i++) {
>  		struct tegra_dma_channel *tdc = &tdma->channels[i];


-- 
~Vinod

