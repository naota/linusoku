Path: news.gmane.org!not-for-mail
From: Jeff Layton <jlayton@redhat.com>
Newsgroups: gmane.linux.kernel,gmane.linux.redhat.security.audit,gmane.linux.file-systems
Subject: [PATCH v5 4/9] audit: add a new "type" field to audit_names struct
Date: Thu, 26 Jul 2012 07:21:08 -0400
Lines: 112
Approved: news@gmane.org
Message-ID: <1343301673-10642-5-git-send-email-jlayton@redhat.com>
References: <1343301673-10642-1-git-send-email-jlayton@redhat.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343301705 8881 80.91.229.3 (26 Jul 2012 11:21:45 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 11:21:45 +0000 (UTC)
Cc: linux-audit@redhat.com, linux-fsdevel@vger.kernel.org,
	linux-kernel@vger.kernel.org
To: eparis@redhat.com, viro@zeniv.linux.org.uk
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 13:21:44 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuM8T-0000l5-JU
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 13:21:41 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752587Ab2GZLV1 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 07:21:27 -0400
Original-Received: from mail-gg0-f174.google.com ([209.85.161.174]:34575 "EHLO
	mail-gg0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752533Ab2GZLVZ (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 07:21:25 -0400
Original-Received: by mail-gg0-f174.google.com with SMTP id u4so1792082ggl.19
        for <linux-kernel@vger.kernel.org>; Thu, 26 Jul 2012 04:21:25 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=sender:from:to:cc:subject:date:message-id:x-mailer:in-reply-to
         :references:x-gm-message-state;
        bh=TJ1+DZYx4SSfwfg4iftlhopvwtzHZhb56ElY+ZwgI98=;
        b=KpLiLk+iCdDr4aFhZg91JB/EQld9REeX68OpqZCfJTPXdkTk6TENW+HEKnYduy4c4P
         VsWQRI/bA18wPwVakVTNh6lrG6RFTy38qftpgkRnuG5N+WpIq23Dgoav/62W5oZqJrAd
         C2xvUTgR12ll9wQwM9tPuQZG2NFCcB9IliAaNmwt7PnxW+BENSjF85YTDfiGk5//UfJg
         ZNhz/qZl9eWBKU2sKTxIgkNuu9w7ZKSUz9wZQShbwkD8MaPeG+t0kzgO0G2gLeUXVHjV
         xL4xt3pSWEjI8bW/jIbfWYsYa8pkunr7pQq6iTTYxqnqF9sTUEu9TgodLarrlgbRmMFm
         Q8eA==
Original-Received: by 10.101.60.16 with SMTP id n16mr7084190ank.16.1343301685416;
        Thu, 26 Jul 2012 04:21:25 -0700 (PDT)
Original-Received: from salusa.poochiereds.net (cpe-076-182-054-194.nc.res.rr.com. [76.182.54.194])
        by mx.google.com with ESMTPS id e24sm41620099yhh.4.2012.07.26.04.21.24
        (version=SSLv3 cipher=OTHER);
        Thu, 26 Jul 2012 04:21:24 -0700 (PDT)
X-Mailer: git-send-email 1.7.11.2
In-Reply-To: <1343301673-10642-1-git-send-email-jlayton@redhat.com>
X-Gm-Message-State: ALoCoQlLNs57ZR++u4IDCwKT+N6dcRoCWABOkVMDbcjsAllYl0aK6NtUohYPJ3WxI8YPx6xUvN4Y
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333558 gmane.linux.redhat.security.audit:4335 gmane.linux.file-systems:66232
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333558>

For now, we just have two possibilities:

UNKNOWN: for a new audit_names record that we don't know anything about yet
NORMAL: for everything else

In later patches, we'll add other types so we can distinguish and update
records created under different circumstances.

Signed-off-by: Jeff Layton <jlayton@redhat.com>
---
 include/linux/audit.h |  5 +++++
 kernel/auditsc.c      | 15 ++++++++++-----
 2 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/include/linux/audit.h b/include/linux/audit.h
index 51eca54..7acbfc8 100644
--- a/include/linux/audit.h
+++ b/include/linux/audit.h
@@ -449,6 +449,11 @@ struct audit_field {
 extern int __init audit_register_class(int class, unsigned *list);
 extern int audit_classify_syscall(int abi, unsigned syscall);
 extern int audit_classify_arch(int arch);
+
+/* audit_names->type values */
+#define	AUDIT_TYPE_UNKNOWN	0	/* we don't know yet */
+#define AUDIT_TYPE_NORMAL	1	/* a "normal" audit record */
+
 #ifdef CONFIG_AUDITSYSCALL
 /* These are defined in auditsc.c */
 				/* Public API */
diff --git a/kernel/auditsc.c b/kernel/auditsc.c
index 12b007b..21c4223 100644
--- a/kernel/auditsc.c
+++ b/kernel/auditsc.c
@@ -120,6 +120,7 @@ struct audit_names {
 	struct audit_cap_data fcap;
 	unsigned int	fcap_ver;
 	int		name_len;	/* number of name's characters to log */
+	unsigned char	type;		/* record type */
 	bool		name_put;	/* call __putname() for this name */
 	/*
 	 * This was an allocated audit_names and not from the array of
@@ -2009,7 +2010,8 @@ retry:
 #endif
 }
 
-static struct audit_names *audit_alloc_name(struct audit_context *context)
+static struct audit_names *audit_alloc_name(struct audit_context *context,
+						unsigned char type)
 {
 	struct audit_names *aname;
 
@@ -2024,6 +2026,7 @@ static struct audit_names *audit_alloc_name(struct audit_context *context)
 	}
 
 	aname->ino = (unsigned long)-1;
+	aname->type = type;
 	list_add_tail(&aname->list, &context->names_list);
 
 	context->name_count++;
@@ -2054,7 +2057,7 @@ void __audit_getname(const char *name)
 		return;
 	}
 
-	n = audit_alloc_name(context);
+	n = audit_alloc_name(context, AUDIT_TYPE_UNKNOWN);
 	if (!n)
 		return;
 
@@ -2167,12 +2170,13 @@ void __audit_inode(const char *name, const struct dentry *dentry)
 	}
 
 	/* unable to find the name from a previous getname() */
-	n = audit_alloc_name(context);
+	n = audit_alloc_name(context, AUDIT_TYPE_NORMAL);
 	if (!n)
 		return;
 out:
 	handle_path(dentry);
 	audit_copy_inode(n, dentry, inode);
+	n->type = AUDIT_TYPE_NORMAL;
 }
 
 /**
@@ -2229,6 +2233,7 @@ void __audit_inode_child(const struct inode *parent,
 				audit_copy_inode(n, dentry, inode);
 			else
 				n->ino = (unsigned long)-1;
+			n->type = AUDIT_TYPE_NORMAL;
 			found_child = n->name;
 			goto add_names;
 		}
@@ -2236,14 +2241,14 @@ void __audit_inode_child(const struct inode *parent,
 
 add_names:
 	if (!found_parent) {
-		n = audit_alloc_name(context);
+		n = audit_alloc_name(context, AUDIT_TYPE_NORMAL);
 		if (!n)
 			return;
 		audit_copy_inode(n, NULL, parent);
 	}
 
 	if (!found_child) {
-		n = audit_alloc_name(context);
+		n = audit_alloc_name(context, AUDIT_TYPE_NORMAL);
 		if (!n)
 			return;
 
-- 
1.7.11.2

