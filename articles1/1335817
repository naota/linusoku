Path: news.gmane.org!not-for-mail
From: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>
Newsgroups: gmane.linux.kernel
Subject: Re: __update_max_tr: rcu_read_lock() used illegally while idle!
Date: Tue, 31 Jul 2012 08:00:53 -0700
Lines: 42
Approved: news@gmane.org
Message-ID: <20120731150053.GE2422@linux.vnet.ibm.com>
References: <20120724090330.GA9830@localhost>
 <1343662752.3847.2.camel@fedora>
 <20120731120556.GB17252@localhost>
 <1343741625.27983.39.camel@gandalf.stny.rr.com>
 <20120731144453.GB2422@linux.vnet.ibm.com>
 <1343746311.27983.52.camel@gandalf.stny.rr.com>
Reply-To: paulmck@linux.vnet.ibm.com
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343747425 20720 80.91.229.3 (31 Jul 2012 15:10:25 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 15:10:25 +0000 (UTC)
Cc: Fengguang Wu <fengguang.wu@intel.com>,
	Steven Rostedt <srostedt@redhat.com>,
	LKML <linux-kernel@vger.kernel.org>,
	David Howells <dhowells@redhat.com>
To: Steven Rostedt <rostedt@goodmis.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 31 17:10:25 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SwE5X-0004ms-CA
	for glk-linux-kernel-3@plane.gmane.org; Tue, 31 Jul 2012 17:10:23 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754913Ab2GaPKN (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 31 Jul 2012 11:10:13 -0400
Original-Received: from e9.ny.us.ibm.com ([32.97.182.139]:51616 "EHLO e9.ny.us.ibm.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754694Ab2GaPKL (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 31 Jul 2012 11:10:11 -0400
Original-Received: from /spool/local
	by e9.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
	for <linux-kernel@vger.kernel.org> from <paulmck@linux.vnet.ibm.com>;
	Tue, 31 Jul 2012 11:10:10 -0400
Original-Received: from d01dlp03.pok.ibm.com (9.56.250.168)
	by e9.ny.us.ibm.com (192.168.1.109) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
	Tue, 31 Jul 2012 11:10:07 -0400
Original-Received: from d01relay04.pok.ibm.com (d01relay04.pok.ibm.com [9.56.227.236])
	by d01dlp03.pok.ibm.com (Postfix) with ESMTP id C6D42C9005E
	for <linux-kernel@vger.kernel.org>; Tue, 31 Jul 2012 11:10:03 -0400 (EDT)
Original-Received: from d03av01.boulder.ibm.com (d03av01.boulder.ibm.com [9.17.195.167])
	by d01relay04.pok.ibm.com (8.13.8/8.13.8/NCO v10.0) with ESMTP id q6VFA1Dr437934
	for <linux-kernel@vger.kernel.org>; Tue, 31 Jul 2012 11:10:01 -0400
Original-Received: from d03av01.boulder.ibm.com (loopback [127.0.0.1])
	by d03av01.boulder.ibm.com (8.14.4/8.13.1/NCO v10.0 AVout) with ESMTP id q6VF9rKi016542
	for <linux-kernel@vger.kernel.org>; Tue, 31 Jul 2012 09:09:57 -0600
Original-Received: from paulmck-ThinkPad-W500 ([9.47.24.210])
	by d03av01.boulder.ibm.com (8.14.4/8.13.1/NCO v10.0 AVin) with ESMTP id q6VF9qLP016417;
	Tue, 31 Jul 2012 09:09:53 -0600
Original-Received: by paulmck-ThinkPad-W500 (Postfix, from userid 1000)
	id 52359E50E7; Tue, 31 Jul 2012 08:00:53 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <1343746311.27983.52.camel@gandalf.stny.rr.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 12073115-7182-0000-0000-0000021D3C77
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335817
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335817>

On Tue, Jul 31, 2012 at 10:51:51AM -0400, Steven Rostedt wrote:
> On Tue, 2012-07-31 at 07:44 -0700, Paul E. McKenney wrote:
> 
> > > Found it (and Cc'd David).
> > > 
> > > In __update_max_tr() we have:
> > > 
> > > 	max_data = task_uid(tsk);
> > > 
> > > where task_uid() is:
> > > 
> > > #define task_uid(task)		(task_cred_xxx((task), uid))
> > > 
> > > #define task_cred_xxx(task, xxx)			\
> > > ({							\
> > > 	__typeof__(((struct cred *)NULL)->xxx) ___val;	\
> > > 	rcu_read_lock();				\
> > > 	___val = __task_cred((task))->xxx;		\
> > > 	rcu_read_unlock();				\
> > > 	___val;						\
> > > })
> > > 
> > > The __update_max_tr() is called at every location interrupts are enabled
> > > (and a max time is discovered). But now this can include places that
> > > rcu_read_lock can not be called, I'm not sure how to handle this. Is
> > > there a non rcu way to get a tasks uid?
> > 
> > OK, I will bite.  How about using something like RCU_NONIDLE(), either
> > directly or open-coded, to make it a legal call site?
> 
> OK, then something like:
> 
> 	RCU_NONIDLE(max_data = task_uid(tsk));
> 
> would work when called normally or with idle?

As long as you don't nest too deeply, both.  There are seven bits for
the count, so you would have to nest quite deeply for there to be
a problem.  And I can safely add several more bits if needed.

							Thanx, Paul

