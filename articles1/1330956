Path: news.gmane.org!not-for-mail
From: Tejun Heo <tj@kernel.org>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCHSET] workqueue: reimplement CPU hotplug to keep idle
 workers
Date: Fri, 20 Jul 2012 10:02:55 -0700
Lines: 40
Approved: news@gmane.org
Message-ID: <20120720170255.GE32763@google.com>
References: <1342545149-3515-1-git-send-email-tj@kernel.org>
 <1342799311.2583.7.camel@twins>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342803793 22944 80.91.229.3 (20 Jul 2012 17:03:13 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 17:03:13 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, torvalds@linux-foundation.org,
	tglx@linutronix.de, linux-pm@vger.kernel.org
To: Peter Zijlstra <peterz@infradead.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Jul 20 19:03:12 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SsGbf-0005ub-Gg
	for glk-linux-kernel-3@plane.gmane.org; Fri, 20 Jul 2012 19:03:11 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753323Ab2GTRDB (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 20 Jul 2012 13:03:01 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:53525 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752855Ab2GTRDA (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 20 Jul 2012 13:03:00 -0400
Original-Received: by pbbrp8 with SMTP id rp8so6420553pbb.19
        for <multiple recipients>; Fri, 20 Jul 2012 10:02:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent;
        bh=3WSgShsKrx1XcZLWCw/THxOeTF0MS1kEmkMpRH2fK7I=;
        b=jk05608ddqd+7o0S5hkUt6l7It3GTjDyNjsZAPiWJTVNViu1bHfwlHaeBIdC5MmYjn
         bFkETaOkHom1ABsCaq2l3lTB1PTr1Ohsupt2fID3P6gYCPF0nO4M8vik1ogwcMG+wQrx
         pFEJih8N6R6cq2uRm+NaKC/AZ8WXQj8MZnP99vUS3ghLc5G2eDcC2ZqMjn0PcJU+Qqt1
         Vy1a0QIx2JY6zTnki/PvD6FG8lUZ8xkEutMllsbfD92cw3qBpBjFeTy8AdffZFNEw7dO
         fXSV8eiRU09pXP7075PWSh6yhxk+IpsELFpFHsMhxIwREm4Ju1Y9NJbIUD7C/70OjOBH
         vRjg==
Original-Received: by 10.68.203.73 with SMTP id ko9mr15587141pbc.66.1342803779558;
        Fri, 20 Jul 2012 10:02:59 -0700 (PDT)
Original-Received: from google.com (wtj.mtv.corp.google.com [172.18.110.84])
        by mx.google.com with ESMTPS id tv6sm4299969pbc.24.2012.07.20.10.02.57
        (version=SSLv3 cipher=OTHER);
        Fri, 20 Jul 2012 10:02:58 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <1342799311.2583.7.camel@twins>
User-Agent: Mutt/1.5.20 (2009-06-14)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330956
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330956>

Hey, Peter.

On Fri, Jul 20, 2012 at 05:48:31PM +0200, Peter Zijlstra wrote:
> On Tue, 2012-07-17 at 10:12 -0700, Tejun Heo wrote:
> > While this makes rebinding somewhat more complicated, as it has to be
> > able to rebind idle workers too, it allows overall hotplug path to be
> > much simpler.  
> 
> I really don't see the point of re-binding.. at that point you've well
> and proper violated any per-cpu expectation, so why not complete running
> the works on the disassociated thing and let new works accrue on the
> per-cpu things again?

We've discussed this a couple times now, so the existing reasons were,

* Local affinity is more often used as a form of affinity optimization
  since the beginning.  This, mixed with queue_work() /
  queue_work_on(), does make things muddy.

* With local affinity used for optimization, we better support
  detaching running workers - before cmwq, this used to be one of the
  sources of trouble during power state changes.

* So, we have unbound workers which started as bound while a CPU is
  down.  When the CPU comes back up again, we can do one of the
  followings - 1. migrate the unbound ones to WORK_CPU_UNBOUND (can
  also do this on CPU_DOWN), 2. leave them unbound and keep them
  running in parallel with bound ones, or 3. rebind them.  #2 is the
  hariest - it contaminates the usual !hotplug code paths.  #1 or #3,
  unsure, but given how global_cwq's don't usually interact with each
  other, I thought #3 would be lower impact on hot paths.

So, the above was my rationale before this "we need to stop destroying
and re-creating kthreads across CPU hotplug events because phones do
it gazillion times".  Now, I don't think we have any other way.

Thanks.

-- 
tejun
