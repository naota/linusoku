Path: news.gmane.org!not-for-mail
From: Andrew Vagin <avagin@parallels.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 07/13] perf: Add attribute to filter out callchains
Date: Thu, 2 Aug 2012 11:38:26 +0400
Lines: 61
Approved: news@gmane.org
Message-ID: <20120802073826.GA6847@avaginn.sw.ru>
References: <1343815865-5511-1-git-send-email-jolsa@redhat.com>
 <1343815865-5511-8-git-send-email-jolsa@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=koi8-r
X-Trace: dough.gmane.org 1343893126 8159 80.91.229.3 (2 Aug 2012 07:38:46 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 07:38:46 +0000 (UTC)
Cc: "acme@redhat.com" <acme@redhat.com>,
	"a.p.zijlstra@chello.nl" <a.p.zijlstra@chello.nl>,
	"mingo@elte.hu" <mingo@elte.hu>,
	"paulus@samba.org" <paulus@samba.org>,
	"cjashfor@linux.vnet.ibm.com" <cjashfor@linux.vnet.ibm.com>,
	"fweisbec@gmail.com" <fweisbec@gmail.com>,
	"eranian@google.com" <eranian@google.com>,
	"gorcunov@openvz.org" <gorcunov@openvz.org>,
	"tzanussi@gmail.com" <tzanussi@gmail.com>,
	"mhiramat@redhat.com" <mhiramat@redhat.com>,
	"robert.richter@amd.com" <robert.richter@amd.com>,
	"fche@redhat.com" <fche@redhat.com>,
	"linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
	"masami.hiramatsu.pt@hitachi.com" <masami.hiramatsu.pt@hitachi.com>,
	"drepper@gmail.com" <drepper@gmail.com>,
	"asharma@fb.com" <asharma@fb.com>,
	"benjamin.redelings@nescent.org" <benjamin.redelings@nescent.org>,
	Andrew Vagin <avagin@openvz.org>
To: Jiri Olsa <jolsa@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 02 09:38:42 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SwpzW-00083d-34
	for glk-linux-kernel-3@plane.gmane.org; Thu, 02 Aug 2012 09:38:42 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754241Ab2HBHid (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 2 Aug 2012 03:38:33 -0400
Original-Received: from mailhub.sw.ru ([195.214.232.25]:28537 "EHLO relay.sw.ru"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1750807Ab2HBHib (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 2 Aug 2012 03:38:31 -0400
Original-Received: from localhost ([10.30.22.152])
	by relay.sw.ru (8.13.4/8.13.4) with ESMTP id q727cQZh022177;
	Thu, 2 Aug 2012 11:38:26 +0400 (MSK)
Content-Disposition: inline
In-Reply-To: <1343815865-5511-8-git-send-email-jolsa@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1336724
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336724>

On Wed, Aug 01, 2012 at 02:10:59PM +0400, Jiri Olsa wrote:
> From: Frederic Weisbecker <fweisbec@gmail.com> 
> 
> Introducing following bits to the the perf_event_attr struct:
>   - exclude_callchain_kernel to filter out kernel callchain
>     from the sample dump
>   - exclude_callchain_user to filter out user callchain
>     from the sample dump
> 
> We need to be able to disable standard user callchain dump
> when we use the dwarf cfi callchain mode, because frame
> pointer based user callchains are useless in this mode.
> 
> Implementing also exclude_callchain_kernel to have complete
> set of options.
> 
> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
> [ Added kernel callchains filtering ]
> Signed-off-by: Jiri Olsa <jolsa@redhat.com>
> CC: Andrew Vagin <avagin@openvz.org>

Acked-by: Andrew Vagin <avagin@openvz.org>


> diff --git a/kernel/events/core.c b/kernel/events/core.c
> index c4582bb..0902d4a 100644
> --- a/kernel/events/core.c
> +++ b/kernel/events/core.c
> @@ -4130,8 +4130,12 @@ void perf_prepare_sample(struct perf_event_header *header,
>  
>  	if (sample_type & PERF_SAMPLE_CALLCHAIN) {
>  		int size = 1;
> +		int kernel = !event->attr.exclude_callchain_kernel;
> +		int user   = !event->attr.exclude_callchain_user;
>  
> -		data->callchain = perf_callchain(event, regs);
> +		if (kernel || user)
> +			data->callchain = perf_callchain(event, regs,
> +							 kernel, user);
I am not sure, that we need two arguments kernel and user here,
we can get them from event inside perf_callchain...
>  
>  		if (data->callchain)
>  			size += data->callchain->nr;
> diff --git a/kernel/events/internal.h b/kernel/events/internal.h
> index ce7bdfc..95d0215 100644
> --- a/kernel/events/internal.h
> +++ b/kernel/events/internal.h
> @@ -126,7 +126,8 @@ DEFINE_OUTPUT_COPY(__output_copy_user, arch_perf_out_copy_user)
>  
>  /* Callchain handling */
>  extern struct perf_callchain_entry *
> -perf_callchain(struct perf_event *event, struct pt_regs *regs);
> +perf_callchain(struct perf_event *event, struct pt_regs *regs,
> +	       int kernel, int user);
>  extern int get_callchain_buffers(void);
>  extern void put_callchain_buffers(void);
>  
> -- 
> 1.7.7.6
> 
