Path: news.gmane.org!not-for-mail
From: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 4/4] uprobes: __replace_page() needs munlock_vma_page()
Date: Thu, 26 Jul 2012 10:48:39 +0530
Lines: 61
Approved: news@gmane.org
Message-ID: <20120726051839.GE3810@linux.vnet.ibm.com>
References: <20120712170934.GA25455@redhat.com>
 <20120712171025.GA25510@redhat.com>
Reply-To: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
X-Trace: dough.gmane.org 1343280007 9457 80.91.229.3 (26 Jul 2012 05:20:07 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 05:20:07 +0000 (UTC)
Cc: Ingo Molnar <mingo@elte.hu>, Peter Zijlstra <peterz@infradead.org>,
	Ananth N Mavinakayanahalli <ananth@in.ibm.com>,
	Anton Arapov <anton@redhat.com>,
	Hugh Dickins <hughd@google.com>, linux-kernel@vger.kernel.org
To: Oleg Nesterov <oleg@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 07:20:06 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuGUW-0004RL-Ui
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 07:20:05 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751582Ab2GZFT5 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 01:19:57 -0400
Original-Received: from e7.ny.us.ibm.com ([32.97.182.137]:44044 "EHLO e7.ny.us.ibm.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751119Ab2GZFTz (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 01:19:55 -0400
Original-Received: from /spool/local
	by e7.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
	for <linux-kernel@vger.kernel.org> from <srikar@linux.vnet.ibm.com>;
	Thu, 26 Jul 2012 01:19:54 -0400
Original-Received: from d01dlp03.pok.ibm.com (9.56.224.17)
	by e7.ny.us.ibm.com (192.168.1.107) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
	Thu, 26 Jul 2012 01:18:48 -0400
Original-Received: from d01relay01.pok.ibm.com (d01relay01.pok.ibm.com [9.56.227.233])
	by d01dlp03.pok.ibm.com (Postfix) with ESMTP id 367CFC9001B
	for <linux-kernel@vger.kernel.org>; Thu, 26 Jul 2012 01:18:48 -0400 (EDT)
Original-Received: from d01av04.pok.ibm.com (d01av04.pok.ibm.com [9.56.224.64])
	by d01relay01.pok.ibm.com (8.13.8/8.13.8/NCO v10.0) with ESMTP id q6Q5IlbR394016
	for <linux-kernel@vger.kernel.org>; Thu, 26 Jul 2012 01:18:47 -0400
Original-Received: from d01av04.pok.ibm.com (loopback [127.0.0.1])
	by d01av04.pok.ibm.com (8.14.4/8.13.1/NCO v10.0 AVout) with ESMTP id q6Q5Ih3N026874
	for <linux-kernel@vger.kernel.org>; Thu, 26 Jul 2012 01:18:47 -0400
Original-Received: from linux.vnet.ibm.com ([9.124.35.138])
	by d01av04.pok.ibm.com (8.14.4/8.13.1/NCO v10.0 AVin) with SMTP id q6Q5Id7r026612;
	Thu, 26 Jul 2012 01:18:40 -0400
Content-Disposition: inline
In-Reply-To: <20120712171025.GA25510@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 12072605-5806-0000-0000-000017AC8ECF
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333416
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333416>

* Oleg Nesterov <oleg@redhat.com> [2012-07-12 19:10:25]:

> Like do_wp_page(), __replace_page() should do munlock_vma_page()
> for the case when the old page still has other !VM_LOCKED mappings.
> Unfortunately this needs mm/internal.h.
> 
> Also, move put_page() outside of ptl lock. This doesn't really
> matter but looks a bit better.
> 
> Signed-off-by: Oleg Nesterov <oleg@redhat.com>

One thing I wanted to check is, should we mlock the new page, i.e the
replacing page. It may not a good idea to mlock the new page
because then we can end up adding too many pages to the unevictable
list.

Acked-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>

> ---
>  kernel/events/uprobes.c |    8 ++++++--
>  1 files changed, 6 insertions(+), 2 deletions(-)
> 
> diff --git a/kernel/events/uprobes.c b/kernel/events/uprobes.c
> index fc1df43..aeea41b 100644
> --- a/kernel/events/uprobes.c
> +++ b/kernel/events/uprobes.c
> @@ -32,6 +32,7 @@
>  #include <linux/swap.h>		/* try_to_free_swap */
>  #include <linux/ptrace.h>	/* user_enable_single_step */
>  #include <linux/kdebug.h>	/* notifier mechanism */
> +#include "../../mm/internal.h"	/* munlock_vma_page */
> 
>  #include <linux/uprobes.h>
> 
> @@ -141,7 +142,7 @@ static int __replace_page(struct vm_area_struct *vma, unsigned long addr,
>  	pte_t *ptep;
>  	int err;
> 
> -	/* freeze PageSwapCache() for try_to_free_swap() below */
> +	/* For try_to_free_swap() and munlock_vma_page() below */
>  	lock_page(page);
> 
>  	err = -EAGAIN;
> @@ -164,9 +165,12 @@ static int __replace_page(struct vm_area_struct *vma, unsigned long addr,
>  	page_remove_rmap(page);
>  	if (!page_mapped(page))
>  		try_to_free_swap(page);
> -	put_page(page);
>  	pte_unmap_unlock(ptep, ptl);
> 
> +	if (vma->vm_flags & VM_LOCKED)
> +		munlock_vma_page(page);
> +	put_page(page);
> +
>  	err = 0;
>   unlock:
>  	unlock_page(page);
> -- 
> 1.5.5.1
> 

