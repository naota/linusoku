Path: news.gmane.org!not-for-mail
From: Sasha Levin <levinsasha928@gmail.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [RFC 1/4] hashtable: introduce a small and naive hashtable
Date: Tue, 31 Jul 2012 22:31:01 +0200
Lines: 75
Approved: news@gmane.org
Message-ID: <50184085.5000806@gmail.com>
References: <1343757920-19713-1-git-send-email-levinsasha928@gmail.com> <1343757920-19713-2-git-send-email-levinsasha928@gmail.com> <20120731182330.GD21292@google.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343766643 24524 80.91.229.3 (31 Jul 2012 20:30:43 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 20:30:43 +0000 (UTC)
Cc: torvalds@linux-foundation.org, akpm@linux-foundation.org, 
 linux-kernel@vger.kernel.org, linux-mm@kvack.org, 
 paul.gortmaker@windriver.com
To: Tejun Heo <tj@kernel.org>
Original-X-From: owner-linux-mm@kvack.org Tue Jul 31 22:30:39 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SwJ5R-0004sd-39
	for glkm-linux-mm-2@m.gmane.org; Tue, 31 Jul 2012 22:30:37 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id A28546B004D; Tue, 31 Jul 2012 16:30:35 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 8FF0C6B0078; Tue, 31 Jul 2012 16:30:35 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 5EA4A6B007B; Tue, 31 Jul 2012 16:30:35 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx132.postini.com [74.125.245.132])
	by kanga.kvack.org (Postfix) with SMTP id C22A16B004D
	for <linux-mm@kvack.org>; Tue, 31 Jul 2012 16:30:34 -0400 (EDT)
Original-Received: from mail-yw0-f41.google.com ([209.85.213.41]) (using TLSv1) by na3sys010amx132.postini.com ([74.125.244.10]) with SMTP;
	Tue, 31 Jul 2012 20:30:34 GMT
Original-Received: by yhr47 with SMTP id 47so7770652yhr.14
        for <linux-mm@kvack.org>; Tue, 31 Jul 2012 13:30:33 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type:content-transfer-encoding;
        bh=sm3ubkCLgV7xmej6KiCrwHi9ZH+bUJLLuRjtRwefPQg=;
        b=cxieNQ/QNpXSF4qrR0djOQZdLC7vulzSsgx7ygIOEFXnvpPuYRx8ETYUKOHcL7v4pu
         I2KIl8u8l+qQ8zsZDfR4gdeB+wcTDEBgHSu+40WaAav5rTgZZkF/M5GowaDp6am3Hpzo
         AONPW8KujyVDeArao7ukgsZfz8VKv7xssQPfqphtkpahnYbaQZv8d+5DxyMUR2m84oEg
         4b0iMQX+AUQcOMhwMdt6QiuEf8ndqCkYe5NmcixJihlFvjdLzt8/hkCSmNkOfe0eHRou
         snFNEZBaiWxpizqfVWiEJ7DUsX5eOQRkGbiT5s1eqjX3zQk/D0shAcJGuZB0EiAlFs9N
         PJOQ==
Original-Received: by 10.50.222.200 with SMTP id qo8mr1868634igc.20.1343766633478;
        Tue, 31 Jul 2012 13:30:33 -0700 (PDT)
Original-Received: from [192.168.42.182] (95-89-78-76-dynip.superkabel.de. [95.89.78.76])
        by mx.google.com with ESMTPS id jl8sm853292obb.18.2012.07.31.13.30.29
        (version=SSLv3 cipher=OTHER);
        Tue, 31 Jul 2012 13:30:32 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120730 Thunderbird/14.0
In-Reply-To: <20120731182330.GD21292@google.com>
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.0100) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <levinsasha928@gmail.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83287 gmane.linux.kernel:1336006
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336006>

On 07/31/2012 08:23 PM, Tejun Heo wrote:
> Hello, Sasha.
> 
> On Tue, Jul 31, 2012 at 08:05:17PM +0200, Sasha Levin wrote:
>> +#define HASH_INIT(name)							\
>> +({									\
>> +	int __i;							\
>> +	for (__i = 0 ; __i < HASH_SIZE(name) ; __i++)			\
>> +		INIT_HLIST_HEAD(&name[__i]);				\
>> +})
> 
> Why use macro?
> 
>> +#define HASH_ADD(name, obj, key)					\
>> +	hlist_add_head(obj, &name[					\
>> +		hash_long((unsigned long)key, HASH_BITS(name))]);
> 
> Ditto.

No special reason, I'll modify both to be functions.

>> +#define HASH_GET(name, key, type, member, cmp_fn)			\
>> +({									\
>> +	struct hlist_node *__node;					\
>> +	typeof(key) __key = key;					\
>> +	type *__obj = NULL;						\
>> +	hlist_for_each_entry(__obj, __node, &name[			\
>> +			hash_long((unsigned long) __key,		\
>> +			HASH_BITS(name))], member)			\
>> +		if (cmp_fn(__obj, __key))				\
>> +			break;						\
>> +	__obj;								\
>> +})
> 
> Wouldn't it be simpler to have something like the following
> 
> 	hash_for_each_possible_match(pos, hash, key)
> 
> and let the caller handle the actual comparison?  Callbacks often are
> painful to use and I don't think the above dancing buys much.

I thought about that, but if you look at the 3 modules I've converted to use this hashtable, I think that the option to provide a callback worked pretty well for all of them, and in my opinion in those cases it looks better than iterating over entries in the code.

Would it make sense to have both methods?

>> +#define HASH_DEL(obj, member)						\
>> +	hlist_del(&obj->member)
> 
> @obj is struct hlist_node in HASH_ADD and the containing type here?
> Most in-kernel generic data containers implement just the container
> itself and let the caller handle the conversions between container
> node and the containing object.  I think it would better not to
> deviate from that.

Agreed, will fix.

>> +#define HASH_FOR_EACH(bkt, node, name, obj, member)			\
>> +	for (bkt = 0; bkt < HASH_SIZE(name); bkt++)			\
>> +		hlist_for_each_entry(obj, node, &name[i], member)
> 
> Why in caps?  Most for_each macros are in lower case.

No special reason, will fix that as well.

Thanks for the review Tejun!

> Thanks.
> 

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

