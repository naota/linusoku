Path: news.gmane.org!not-for-mail
From: Kyungsik Lee <kyungsik.lee@lge.com>
Newsgroups: gmane.linux.kernel.mmc,gmane.linux.kernel
Subject: [PATCH RESEND] mmc: core: Remove bounce buffer in mmc_send_cxd_data()
Date: Wed, 25 Jul 2012 17:06:18 +0900
Lines: 127
Approved: news@gmane.org
Message-ID: <1343203578-21874-1-git-send-email-kyungsik.lee@lge.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343203611 3106 80.91.229.3 (25 Jul 2012 08:06:51 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 08:06:51 +0000 (UTC)
Cc: Pierre Ossman <drzeus@drzeus.cx>, raphael.andy.lee@gmail.com,
	linux-mmc@vger.kernel.org, linux-kernel@vger.kernel.org,
	Kyungsik Lee <kyungsik.lee@lge.com>
To: Chris Ball <cjb@laptop.org>
Original-X-From: linux-mmc-owner@vger.kernel.org Wed Jul 25 10:06:47 2012
Return-path: <linux-mmc-owner@vger.kernel.org>
Envelope-to: glkm-linux-mmc@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-mmc-owner@vger.kernel.org>)
	id 1StwcH-000196-QS
	for glkm-linux-mmc@plane.gmane.org; Wed, 25 Jul 2012 10:06:46 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756202Ab2GYIGn (ORCPT <rfc822;glkm-linux-mmc@m.gmane.org>);
	Wed, 25 Jul 2012 04:06:43 -0400
Original-Received: from LGEMRELSE1Q.lge.com ([156.147.1.111]:49430 "EHLO
	LGEMRELSE1Q.lge.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754712Ab2GYIGi (ORCPT
	<rfc822;linux-mmc@vger.kernel.org>); Wed, 25 Jul 2012 04:06:38 -0400
X-AuditID: 9c93016f-b7b08ae00000790d-37-500fa90b9fca
Original-Received: from localhost.localdomain ( [10.177.225.63])
	by LGEMRELSE1Q.lge.com (Symantec Brightmail Gateway) with SMTP id 2B.1C.30989.B09AF005; Wed, 25 Jul 2012 17:06:36 +0900 (KST)
X-Mailer: git-send-email 1.7.0.4
X-Brightmail-Tracker: AAAAAA==
Original-Sender: linux-mmc-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-mmc.vger.kernel.org>
X-Mailing-List: linux-mmc@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel.mmc:15732 gmane.linux.kernel:1332802
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332802>

It is expected that Extended CSD register(the size of this register
is larger than CID/CSD) will be referenced more frequently as more
fields have been added to Extended CSD and it seems that it is not
a good option to double the memory used.

This patch is intended to avoid the use of bounce buffer for reading
Extended CSD register in mmc_send_cxd_data().

Signed-off-by: Kyungsik Lee <kyungsik.lee@lge.com>
---
 drivers/mmc/core/mmc_ops.c |   45 ++++++++++++++++++++++++++++---------------
 1 files changed, 29 insertions(+), 16 deletions(-)

diff --git a/drivers/mmc/core/mmc_ops.c b/drivers/mmc/core/mmc_ops.c
index 0ed2cc5..95d94a0 100644
--- a/drivers/mmc/core/mmc_ops.c
+++ b/drivers/mmc/core/mmc_ops.c
@@ -238,14 +238,6 @@ mmc_send_cxd_data(struct mmc_card *card, struct mmc_host *host,
 	struct mmc_command cmd = {0};
 	struct mmc_data data = {0};
 	struct scatterlist sg;
-	void *data_buf;
-
-	/* dma onto stack is unsafe/nonportable, but callers to this
-	 * routine normally provide temporary on-stack buffers ...
-	 */
-	data_buf = kmalloc(len, GFP_KERNEL);
-	if (data_buf == NULL)
-		return -ENOMEM;
 
 	mrq.cmd = &cmd;
 	mrq.data = &data;
@@ -266,7 +258,7 @@ mmc_send_cxd_data(struct mmc_card *card, struct mmc_host *host,
 	data.sg = &sg;
 	data.sg_len = 1;
 
-	sg_init_one(&sg, data_buf, len);
+	sg_init_one(&sg, buf, len);
 
 	if (opcode == MMC_SEND_CSD || opcode == MMC_SEND_CID) {
 		/*
@@ -280,9 +272,6 @@ mmc_send_cxd_data(struct mmc_card *card, struct mmc_host *host,
 
 	mmc_wait_for_req(host, &mrq);
 
-	memcpy(buf, data_buf, len);
-	kfree(data_buf);
-
 	if (cmd.error)
 		return cmd.error;
 	if (data.error)
@@ -294,24 +283,37 @@ mmc_send_cxd_data(struct mmc_card *card, struct mmc_host *host,
 int mmc_send_csd(struct mmc_card *card, u32 *csd)
 {
 	int ret, i;
+	u32 *csd_tmp;
 
 	if (!mmc_host_is_spi(card->host))
 		return mmc_send_cxd_native(card->host, card->rca << 16,
 				csd, MMC_SEND_CSD);
 
-	ret = mmc_send_cxd_data(card, card->host, MMC_SEND_CSD, csd, 16);
+	csd_tmp = kmalloc(16, GFP_KERNEL);
+	if (!csd_tmp)
+		return -ENOMEM;
+
+	ret = mmc_send_cxd_data(card, card->host, MMC_SEND_CSD, csd_tmp, 16);
 	if (ret)
-		return ret;
+		goto err;
+
+	memcpy(csd, csd_tmp, 16);
 
 	for (i = 0;i < 4;i++)
 		csd[i] = be32_to_cpu(csd[i]);
 
+	kfree(csd_tmp);
 	return 0;
+
+err:
+	kfree(csd_tmp);
+	return ret;
 }
 
 int mmc_send_cid(struct mmc_host *host, u32 *cid)
 {
 	int ret, i;
+	u32 *cid_tmp;
 
 	if (!mmc_host_is_spi(host)) {
 		if (!host->card)
@@ -320,14 +322,25 @@ int mmc_send_cid(struct mmc_host *host, u32 *cid)
 				cid, MMC_SEND_CID);
 	}
 
-	ret = mmc_send_cxd_data(NULL, host, MMC_SEND_CID, cid, 16);
+	cid_tmp = kmalloc(16, GFP_KERNEL);
+	if (!cid_tmp)
+		return -ENOMEM;
+
+	ret = mmc_send_cxd_data(NULL, host, MMC_SEND_CID, cid_tmp, 16);
 	if (ret)
-		return ret;
+		goto err;
+
+	memcpy(cid, cid_tmp, 16);
 
 	for (i = 0;i < 4;i++)
 		cid[i] = be32_to_cpu(cid[i]);
 
+	kfree(cid_tmp);
 	return 0;
+
+err:
+	kfree(cid_tmp);
+	return ret;
 }
 
 int mmc_send_ext_csd(struct mmc_card *card, u8 *ext_csd)
-- 
1.7.0.4

--
To unsubscribe from this list: send the line "unsubscribe linux-mmc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

