Path: news.gmane.org!not-for-mail
From: Suresh Siddha <suresh.b.siddha@intel.com>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.janitors
Subject: Re: [tip:x86:fpu 2/2] arch/x86/kernel/signal.c:626:4: error:
 implicit declaration of function '__setup_frame'
Date: Thu, 26 Jul 2012 10:48:04 -0700
Organization: Intel Corp
Lines: 156
Approved: news@gmane.org
Message-ID: <1343324885.3696.527.camel@sbsiddha-desk.sc.intel.com>
References: <20120725232716.GB5758@localhost>
Reply-To: Suresh Siddha <suresh.b.siddha@intel.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1343324735 13925 80.91.229.3 (26 Jul 2012 17:45:35 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 17:45:35 +0000 (UTC)
Cc: kernel-janitors@vger.kernel.org, "H. Peter Anvin" <hpa@zytor.com>,
	linux-kernel@vger.kernel.org
To: Fengguang Wu <fengguang.wu@intel.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 19:45:33 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuS7v-00034f-Nw
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 19:45:32 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752806Ab2GZRpX convert rfc822-to-quoted-printable (ORCPT
	<rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 13:45:23 -0400
Original-Received: from mga03.intel.com ([143.182.124.21]:50890 "EHLO mga03.intel.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752218Ab2GZRpV (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 13:45:21 -0400
Original-Received: from azsmga002.ch.intel.com ([10.2.17.35])
  by azsmga101.ch.intel.com with ESMTP; 26 Jul 2012 10:45:20 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="4.71,315,1320652800"; 
   d="scan'208";a="127257821"
Original-Received: from sbsiddha-desk.sc.intel.com (HELO [10.3.79.149]) ([10.3.79.149])
  by AZSMGA002.ch.intel.com with ESMTP; 26 Jul 2012 10:45:20 -0700
In-Reply-To: <20120725232716.GB5758@localhost>
X-Mailer: Evolution 3.0.3 (3.0.3-1.fc15) 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333811 gmane.linux.kernel.janitors:25211
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333811>

On Thu, 2012-07-26 at 07:27 +0800, Fengguang Wu wrote:
> Hi Suresh,
>=20
> Kernel build failed on
>=20
> tree:   tip/x86/fpu x86/fpu
> head:   29221d4b89d4e50f05ade42ad3b22e92bb564ca4
> commit: 29221d4b89d4e50f05ade42ad3b22e92bb564ca4 [2/2] x86, fpu: Unif=
y signal handling code paths for x86 and x86_64 kernels
> config: x86_64-randconfig-s003 (attached as .config)
>=20
> All related error/warning messages:
>=20
> arch/x86/kernel/signal.c: In function 'setup_rt_frame':
> arch/x86/kernel/signal.c:626:4: error: implicit declaration of functi=
on '__setup_frame' [-Werror=3Dimplicit-function-declaration]
> cc1: some warnings being treated as errors
> --
> arch/x86/kernel/xsave.c: In function 'save_fsave_header':
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: 'X86_FXSR_MAGIC' undeclared (fi=
rst use in this function)
> arch/x86/kernel/xsave.c:145:7: note: each undeclared identifier is re=
ported only once for each function it appears in
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c:145:7: error: dereferencing pointer to incomp=
lete type
> arch/x86/kernel/xsave.c: In function 'save_user_xstate':
> arch/x86/kernel/xsave.c:209:15: warning: ignoring return value of '__=
clear_user', declared with attribute warn_unused_result [-Wunused-resul=
t]
>=20

Appended the patch for this. Thanks!
---
=46rom: Suresh Siddha <suresh.b.siddha@intel.com>
Subject: x86, fpu: fix x86_64 build without CONFIG_IA32_EMULATION

=46engguang's automated build reported some compilation failures:
> arch/x86/kernel/signal.c: In function 'setup_rt_frame':
> arch/x86/kernel/signal.c:626:4: error: implicit declaration of functi=
on '__setup_frame'
> arch/x86/kernel/xsave.c: In function 'save_fsave_header':
> arch/x86/kernel/xsave.c:144:7: error: dereferencing pointer to incomp=
lete type
> ...

=46ix x86_64 kernel build without CONFIG_IA32_EMULATION.

Code saving fsave prefix is applicable only for CONFIG_X86_32 or
CONFIG_IA32_EMULATION. Use config_enabled() checks to remove the unnece=
ssary
code compile-time for x86_64 kernels build without CONFIG_IA32_EMULATIO=
N.

Also while we are at this, fix a spurious warning:
> arch/x86/kernel/xsave.c:209:15: warning: ignoring return value of =E2=
=80=98__clear_user=E2=80=99, declared with attribute warn_unused_result

Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
---
 arch/x86/include/asm/fpu-internal.h |    2 +-
 arch/x86/kernel/xsave.c             |   10 ++++++++--
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/x86/include/asm/fpu-internal.h b/arch/x86/include/asm=
/fpu-internal.h
index 35ad161..5779184 100644
--- a/arch/x86/include/asm/fpu-internal.h
+++ b/arch/x86/include/asm/fpu-internal.h
@@ -22,7 +22,7 @@
 #include <asm/uaccess.h>
 #include <asm/xsave.h>
=20
-#ifdef CONFIG_IA32_EMULATION
+#ifdef CONFIG_X86_64
 # include <asm/sigcontext32.h>
 # include <asm/user32.h>
 int ia32_setup_rt_frame(int sig, struct k_sigaction *ka, siginfo_t *in=
fo,
diff --git a/arch/x86/kernel/xsave.c b/arch/x86/kernel/xsave.c
index 2917e34..a23d100 100644
--- a/arch/x86/kernel/xsave.c
+++ b/arch/x86/kernel/xsave.c
@@ -205,8 +205,8 @@ static inline int save_user_xstate(struct xsave_str=
uct __user *buf)
 	else
 		err =3D fsave_user((struct i387_fsave_struct __user *) buf);
=20
-	if (unlikely(err))
-		__clear_user(buf, xstate_size);
+	if (unlikely(err) && __clear_user(buf, xstate_size))
+		err =3D -EFAULT;
 	return err;
 }
=20
@@ -236,6 +236,9 @@ int save_xstate_sig(void __user *buf, void __user *=
buf_fx, int size)
 	struct task_struct *tsk =3D current;
 	int ia32_fxstate =3D (buf !=3D buf_fx);
=20
+	ia32_fxstate &=3D (config_enabled(CONFIG_X86_32) ||
+			 config_enabled(CONFIG_IA32_EMULATION));
+
 	if (!access_ok(VERIFY_WRITE, buf, size))
 		return -EACCES;
=20
@@ -333,6 +336,9 @@ int __restore_xstate_sig(void __user *buf, void __u=
ser *buf_fx, int size)
 	u64 xstate_bv =3D 0;
 	int fx_only =3D 0;
=20
+	ia32_fxstate &=3D (config_enabled(CONFIG_X86_32) ||
+			 config_enabled(CONFIG_IA32_EMULATION));
+
 	if (!buf) {
 		drop_fpu(tsk);
 		return 0;


