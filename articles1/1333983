Path: news.gmane.org!not-for-mail
From: Hugh Dickins <hughd@google.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [PATCH] mm: hugetlbfs: Close race during teardown of hugetlbfs
 shared page tables v2
Date: Thu, 26 Jul 2012 14:54:43 -0700 (PDT)
Lines: 68
Approved: news@gmane.org
Message-ID: <alpine.LSU.2.00.1207261451180.1705@eggly.anvils>
References: <20120720134937.GG9222@suse.de> <5011AFEC.2040609@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: dough.gmane.org 1343339760 23921 80.91.229.3 (26 Jul 2012 21:56:00 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 21:56:00 +0000 (UTC)
Cc: Mel Gorman <mgorman@suse.de>, Linux-MM <linux-mm@kvack.org>, 
    Michal Hocko <mhocko@suse.cz>, David Gibson <david@gibson.dropbear.id.au>, 
    Ken Chen <kenchen@google.com>, Cong Wang <xiyou.wangcong@gmail.com>, 
    LKML <linux-kernel@vger.kernel.org>, Larry Woodman <lwoodman@redhat.com>
To: Rik van Riel <riel@redhat.com>
Original-X-From: owner-linux-mm@kvack.org Thu Jul 26 23:55:55 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SuW26-0006oy-Ad
	for glkm-linux-mm-2@m.gmane.org; Thu, 26 Jul 2012 23:55:46 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 8D48F6B0044; Thu, 26 Jul 2012 17:55:44 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 6859B6B005A; Thu, 26 Jul 2012 17:55:44 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 1C9B46B005D; Thu, 26 Jul 2012 17:55:43 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx186.postini.com [74.125.245.186])
	by kanga.kvack.org (Postfix) with SMTP id 50BE66B0044
	for <linux-mm@kvack.org>; Thu, 26 Jul 2012 17:55:40 -0400 (EDT)
Original-Received: from mail-yw0-f41.google.com ([209.85.213.41]) (using TLSv1) by na3sys010amx186.postini.com ([74.125.244.10]) with SMTP;
	Thu, 26 Jul 2012 21:55:43 GMT
Original-Received: by yhr47 with SMTP id 47so3062479yhr.14
        for <linux-mm@kvack.org>; Thu, 26 Jul 2012 14:55:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:x-x-sender:to:cc:subject:in-reply-to:message-id
         :references:user-agent:mime-version:content-type;
        bh=+qBMyPdASN6NvmveXOWkdy9uTv+K8HqybLQsvWB7C60=;
        b=mVKXQfRgBhEL+skAmk/P0vx6LhNeC4VDLwNNX92TU8U9MVK+vU1dKmTb+bDTk/32go
         Og9Nz79q00UBp573XLe2KiWqAE/RA5JBKQPTAXfvFCf+qlPYUBc/zy2wntRTTcjRdHE+
         1wsdAW5ebUmpESLWXS9+Q8+Y3AjtzfHi2bJp+rhpzoroEpDhaQDgCecy2VYeOala+Oyh
         qswQPdLSTOH9T+beT/A40pI/h62yPqG9fmaa0jqzQaUOqN6vDjdsp6u446vXjgK80QMh
         R5IvYfD6jVHks4Nxum3DOHwofdVLg+RjEfdp/iw2A9YEnWsNqWX2gAti3i7NMu6FPL+6
         uAFQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:x-x-sender:to:cc:subject:in-reply-to:message-id
         :references:user-agent:mime-version:content-type:x-gm-message-state;
        bh=+qBMyPdASN6NvmveXOWkdy9uTv+K8HqybLQsvWB7C60=;
        b=LAaToneInG9GXFyvKCRMMtmMs4NAbyCk+PYEu/ZzrRr7K6nmF9tpYx6MA0W5z1sFbC
         BSTFidK4icJfENIslKmCRUP4MATZZP8eYjAfRRcIZgOzwtteU3C8XQjq0IheAMPzv0lg
         b32yJyn0aa3L0DATtru94wlQ9YzKmzLkXJkbTe5ozv4qAAtmaMaOPPGclksyUDAA+k7D
         5uMJsKI0CekZzlJSYCyreDsMBx7Jccx/brLWZWY7X4cVz2Ruro1DID08LDkKd2h3f4MI
         DDNBJOX1O0wpS6RTe6GUbCtM4MAXnITEiucEZ3OU5lBUDpiZHfc+PEtsj1Bj9pCF5j+S
         WGZw==
Original-Received: by 10.50.6.229 with SMTP id e5mr263377iga.9.1343339739780;
        Thu, 26 Jul 2012 14:55:39 -0700 (PDT)
Original-Received: by 10.50.6.229 with SMTP id e5mr263361iga.9.1343339739671;
        Thu, 26 Jul 2012 14:55:39 -0700 (PDT)
Original-Received: from [2620:0:1000:fd2e:224:d7ff:fee2:b75c] ([2620:0:1000:fd2e:224:d7ff:fee2:b75c])
        by mx.google.com with ESMTPS id y5sm690953igb.11.2012.07.26.14.55.38
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 26 Jul 2012 14:55:39 -0700 (PDT)
X-X-Sender: hugh@eggly.anvils
In-Reply-To: <5011AFEC.2040609@redhat.com>
User-Agent: Alpine 2.00 (LSU 1167 2008-08-23)
X-Gm-Message-State: ALoCoQnlGMQuUin1OmwVJeoPVms910htn0RbjJvlI6uZScOROzozjKQC+uFUyE7XZgrUgz7zl+wlRxWT1VanT9YGKA6pO6sDl2ODOS0uNB7XGKKXXkBjiZZhq9VSen/6fWX6u46VTXwDPYXukrLDyxXC/qB5eUP51MTCjXm7nJe4mFB744SIojzP1jSopFN8h0JMJpD6pt+C
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.1000) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <hughd@google.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83040 gmane.linux.kernel:1333983
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333983>

On Thu, 26 Jul 2012, Rik van Riel wrote:
> On 07/20/2012 09:49 AM, Mel Gorman wrote:
> > This V2 is still the mmap_sem approach that fixes a potential deadlock
> > problem pointed out by Michal.
> 
> Larry and I were looking around the hugetlb code some
> more, and found what looks like yet another race.
> 
> In hugetlb_no_page, we have the following code:
> 
> 
>         spin_lock(&mm->page_table_lock);
>         size = i_size_read(mapping->host) >> huge_page_shift(h);
>         if (idx >= size)
>                 goto backout;
> 
>         ret = 0;
>         if (!huge_pte_none(huge_ptep_get(ptep)))
>                 goto backout;
> 
>         if (anon_rmap)
>                 hugepage_add_new_anon_rmap(page, vma, address);
>         else
>                 page_dup_rmap(page);
>         new_pte = make_huge_pte(vma, page, ((vma->vm_flags & VM_WRITE)
>                                 && (vma->vm_flags & VM_SHARED)));
>         set_huge_pte_at(mm, address, ptep, new_pte);
> 	...
> 	spin_unlock(&mm->page_table_lock);
> 
> Notice how we check !huge_pte_none with our own
> mm->page_table_lock held.
> 
> This offers no protection at all against other
> processes, that also hold their own page_table_lock.
> 
> In short, it looks like it is possible for multiple
> processes to go through the above code simultaneously,
> potentially resulting in:
> 
> 1) one process overwriting the pte just created by
>    another process
> 
> 2) data corruption, as one partially written page
>    gets superceded by an newly zeroed page, but no
>    TLB invalidates get sent to other CPUs
> 
> 3) a memory leak of a huge page
> 
> Is there anything that would make this race impossible,
> or is this a real bug?

I believe it's protected by the unloved hugetlb_instantiation_mutex.

> 
> If so, are there more like it in the hugetlbfs code?

What, more than one bug in that code?
Surely that would defy the laws of probability ;)

Hugh

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

