Path: news.gmane.org!not-for-mail
From: Bjorn Helgaas <bhelgaas@google.com>
Newsgroups: gmane.linux.kernel,gmane.linux.acpi.devel
Subject: Re: [PATCH v3 2/4] ACPI: Update CPU hotplug messages
Date: Thu, 26 Jul 2012 13:23:29 -0600
Lines: 153
Approved: news@gmane.org
Message-ID: <CAErSpo64rOMfLB0abck20OEyeD1V96R-yzPUDt2gHa0zo26EYw@mail.gmail.com>
References: <1343257978-7085-1-git-send-email-toshi.kani@hp.com> <1343257978-7085-3-git-send-email-toshi.kani@hp.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343330644 29109 80.91.229.3 (26 Jul 2012 19:24:04 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 19:24:04 +0000 (UTC)
Cc: lenb@kernel.org, linux-acpi@vger.kernel.org,
	linux-kernel@vger.kernel.org, joe@perches.com,
	isimatu.yasuaki@jp.fujitsu.com, liuj97@gmail.com,
	srivatsa.bhat@linux.vnet.ibm.com, prarit@redhat.com,
	imammedo@redhat.com, vijaymohan.pandarathil@hp.com
To: Toshi Kani <toshi.kani@hp.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 21:24:02 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuTfF-00008p-5Q
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 21:24:01 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752277Ab2GZTXw (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 15:23:52 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:49816 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751670Ab2GZTXv (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 15:23:51 -0400
Original-Received: by ghrr11 with SMTP id r11so2384430ghr.19
        for <linux-kernel@vger.kernel.org>; Thu, 26 Jul 2012 12:23:50 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type:x-system-of-record;
        bh=rs4zqo4qBfJ0OwaXHcU6OBc8DHrMXUF1mBZjgzIh+7c=;
        b=HS3LqOfR8nEyBZiKupC8X8tu3jN/f1pp1ome8Rs2eFW/oCTBHav7dQrlg17/60vWvg
         Zw9fP3nnQ0efpYoV58q4KGcz3adPe2bs2/zgBaO73O7QK7ZLETq42eeunO1HAu12bvsE
         c4i4qhmGhshom3I0QheKMRWvd9aHOEdUKBwJyuQYPJB0ZeKUF13AV1CH0pgT+P5QweEG
         ChTaJkhZhCPqU9JXiJ0Dax0AjJTtNFAawXoKwlAd+t6TJ6hEFxdD5e7pUhVt3rjfp/aN
         0LfCLQoetbDlFhzbz6ECmfGNtAP3mCA2/WnNpHluoPBKEWLOKqExBaV9tsF2G48m5JMY
         1ygg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type:x-system-of-record:x-gm-message-state;
        bh=rs4zqo4qBfJ0OwaXHcU6OBc8DHrMXUF1mBZjgzIh+7c=;
        b=Los8LqZNRUABnMLXuhn2gRsT7djPvDbnbo7GGZ/5b/jjOGjdF+vGC+yeirqpgmGGWt
         p0WH+fsNaTy6yDyEhaz5IxFCDIlO4E0irTUZ5mvp8vciFzk/0Ng+oCbdoMaC1Gtq3vLE
         i/Za4xy1WfBYYi0NKeLUSbh3+o2O9SxsodMFEYn/24NEyeLWZ6X0H2qty5qQJzxfrn1J
         KA4Jwh28pdUqTr4Rgl5Jo4KqrMInmu32YIrPNiJjYbvN62S9BApPbvQDIsHvoYFFvTut
         WQVkCqqsPtDamCb2ubrfXVOeRRXjQbzBBExCMN0P1acPGq4MljgkOvkYE3X4v+wQ7J59
         uUMw==
Original-Received: by 10.50.212.98 with SMTP id nj2mr2578979igc.35.1343330629946;
        Thu, 26 Jul 2012 12:23:49 -0700 (PDT)
Original-Received: by 10.50.212.98 with SMTP id nj2mr2578958igc.35.1343330629772; Thu,
 26 Jul 2012 12:23:49 -0700 (PDT)
Original-Received: by 10.50.91.169 with HTTP; Thu, 26 Jul 2012 12:23:29 -0700 (PDT)
In-Reply-To: <1343257978-7085-3-git-send-email-toshi.kani@hp.com>
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQmVC7eRtGERlNPTDUFzEHLoQp/+6QrU7OigTr88iTF5bDqbngBOiLhhzxu6fgGo/FLiuQwL08H1BXaZ2dNbt5blKBjRe/mDmJZNA7g7WLY5cpyWDSkRnHZlJvpw7DmU9IdlFrMnsSChnly2+M8nlQns3AIKDKtzIn15tFI/HKBm63JUQkduI9dIoXseVuJlnt3FOPSf
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333846 gmane.linux.acpi.devel:54583
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333846>

On Wed, Jul 25, 2012 at 5:12 PM, Toshi Kani <toshi.kani@hp.com> wrote:
> Updated CPU hotplug log messages with acpi_pr_<level>(),
> dev_<level>() and pr_<level>().  Some messages are also
> changed for clarity.
>
> Signed-off-by: Toshi Kani <toshi.kani@hp.com>
> Tested-by: Vijay Mohan Pandarathil <vijaymohan.pandarathil@hp.com>
> ---
>  drivers/acpi/processor_driver.c |   36 +++++++++++++++++++++---------------
>  1 files changed, 21 insertions(+), 15 deletions(-)
>
> diff --git a/drivers/acpi/processor_driver.c b/drivers/acpi/processor_driver.c
> index a6bdeaa..225f252 100644
> --- a/drivers/acpi/processor_driver.c
> +++ b/drivers/acpi/processor_driver.c
> @@ -282,7 +282,9 @@ static int acpi_processor_get_info(struct acpi_device *device)
>                 /* Declared with "Processor" statement; match ProcessorID */
>                 status = acpi_evaluate_object(pr->handle, NULL, NULL, &buffer);
>                 if (ACPI_FAILURE(status)) {
> -                       printk(KERN_ERR PREFIX "Evaluating processor object\n");
> +                       acpi_pr_err(pr->handle,
> +                               "Failed to evaluate processor object (0x%x)\n",
> +                               status);

This looks like it could be a dev_err().

>                         return -ENODEV;
>                 }
>
> @@ -301,8 +303,9 @@ static int acpi_processor_get_info(struct acpi_device *device)
>                 status = acpi_evaluate_integer(pr->handle, METHOD_NAME__UID,
>                                                 NULL, &value);
>                 if (ACPI_FAILURE(status)) {
> -                       printk(KERN_ERR PREFIX
> -                           "Evaluating processor _UID [%#x]\n", status);
> +                       acpi_pr_err(pr->handle,
> +                               "Failed to evaluate processor _UID (0x%x)\n",
> +                               status);

And this.

>                         return -ENODEV;
>                 }
>                 device_declaration = 1;
> @@ -345,7 +348,7 @@ static int acpi_processor_get_info(struct acpi_device *device)
>         if (!object.processor.pblk_address)
>                 ACPI_DEBUG_PRINT((ACPI_DB_INFO, "No PBLK (NULL address)\n"));
>         else if (object.processor.pblk_length != 6)
> -               printk(KERN_ERR PREFIX "Invalid PBLK length [%d]\n",
> +               acpi_pr_err(pr->handle, "Invalid PBLK length [%d]\n",

And this.

>                             object.processor.pblk_length);
>         else {
>                 pr->throttling.address = object.processor.pblk_address;
> @@ -429,8 +432,8 @@ static int acpi_cpu_soft_notify(struct notifier_block *nfb,
>                  * Initialize missing things
>                  */
>                 if (pr->flags.need_hotplug_init) {
> -                       printk(KERN_INFO "Will online and init hotplugged "
> -                              "CPU: %d\n", pr->id);
> +                       pr_info("Will online and init hotplugged CPU: %d\n",
> +                               pr->id);
>                         WARN(acpi_processor_start(pr), "Failed to start CPU:"
>                                 " %d\n", pr->id);
>                         pr->flags.need_hotplug_init = 0;
> @@ -491,14 +494,16 @@ static __ref int acpi_processor_start(struct acpi_processor *pr)
>                                    &pr->cdev->device.kobj,
>                                    "thermal_cooling");
>         if (result) {
> -               printk(KERN_ERR PREFIX "Create sysfs link\n");
> +               dev_err(&device->dev,
> +                       "Failed to create sysfs link 'thermal_cooling'\n");
>                 goto err_thermal_unregister;
>         }
>         result = sysfs_create_link(&pr->cdev->device.kobj,
>                                    &device->dev.kobj,
>                                    "device");
>         if (result) {
> -               printk(KERN_ERR PREFIX "Create sysfs link\n");
> +               dev_err(&pr->cdev->device,
> +                       "Failed to create sysfs link 'device'\n");
>                 goto err_remove_sysfs_thermal;
>         }
>
> @@ -560,8 +565,7 @@ static int __cpuinit acpi_processor_add(struct acpi_device *device)
>          */
>         if (per_cpu(processor_device_array, pr->id) != NULL &&
>             per_cpu(processor_device_array, pr->id) != device) {
> -               printk(KERN_WARNING "BIOS reported wrong ACPI id "
> -                       "for the processor\n");
> +               pr_warn("BIOS reported wrong ACPI id for the processor\n");

And this.

>                 result = -ENODEV;
>                 goto err_free_cpumask;
>         }
> @@ -715,7 +719,7 @@ static void acpi_processor_hotplug_notify(acpi_handle handle,
>
>                 result = acpi_processor_device_add(handle, &device);
>                 if (result) {
> -                       pr_err(PREFIX "Unable to add the device\n");
> +                       acpi_pr_err(handle, "Unable to add the device\n");
>                         break;
>                 }
>
> @@ -727,17 +731,19 @@ static void acpi_processor_hotplug_notify(acpi_handle handle,
>                                   "received ACPI_NOTIFY_EJECT_REQUEST\n"));
>
>                 if (acpi_bus_get_device(handle, &device)) {
> -                       pr_err(PREFIX "Device don't exist, dropping EJECT\n");
> +                       acpi_pr_err(handle,
> +                               "Device don't exist, dropping EJECT\n");
>                         break;
>                 }
>                 if (!acpi_driver_data(device)) {
> -                       pr_err(PREFIX "Driver data is NULL, dropping EJECT\n");
> +                       acpi_pr_err(handle,
> +                               "Driver data is NULL, dropping EJECT\n");

And this.

>                         break;
>                 }
>
>                 ej_event = kmalloc(sizeof(*ej_event), GFP_KERNEL);
>                 if (!ej_event) {
> -                       pr_err(PREFIX "No memory, dropping EJECT\n");
> +                       acpi_pr_err(handle, "No memory, dropping EJECT\n");

And this.

>                         break;
>                 }
>
> @@ -847,7 +853,7 @@ static acpi_status acpi_processor_hotadd_init(struct acpi_processor *pr)
>          * and do it when the CPU gets online the first time
>          * TBD: Cleanup above functions and try to do this more elegant.
>          */
> -       printk(KERN_INFO "CPU %d got hotplugged\n", pr->id);
> +       pr_info("CPU %d got hotplugged\n", pr->id);

And this.  The caller (acpi_processor_get_info()) has an acpi_device
*, so we should be able to use it here.

>         pr->flags.need_hotplug_init = 1;
>
>         return AE_OK;
> --
> 1.7.7.6
>
