Path: news.gmane.org!not-for-mail
From: Greg KH <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.usb.general
Subject: Re: [PATCH] usb: host: xhci: Fix Compliance Mode on SN65LVPE502CP
 Hardware
Date: Tue, 31 Jul 2012 16:18:14 -0700
Lines: 66
Approved: news@gmane.org
Message-ID: <20120731231814.GC1558@kroah.com>
References: <501860C6.3070309@ti.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343776711 676 80.91.229.3 (31 Jul 2012 23:18:31 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 23:18:31 +0000 (UTC)
Cc: sarah.a.sharp@linux.intel.com, linux-usb@vger.kernel.org,
	linux-kernel@vger.kernel.org, brian.quach@ti.com,
	jorge.llamas@ti.com
To: "Alexis R. Cortes" <alexis.cortes@ti.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 01 01:18:30 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SwLht-0000JQ-7P
	for glk-linux-kernel-3@plane.gmane.org; Wed, 01 Aug 2012 01:18:29 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756117Ab2GaXSW (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 31 Jul 2012 19:18:22 -0400
Original-Received: from mail-ob0-f174.google.com ([209.85.214.174]:34585 "EHLO
	mail-ob0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752815Ab2GaXSU (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 31 Jul 2012 19:18:20 -0400
Original-Received: by obbuo13 with SMTP id uo13so11295751obb.19
        for <linux-kernel@vger.kernel.org>; Tue, 31 Jul 2012 16:18:19 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent
         :x-gm-message-state;
        bh=kCTA6+skwxmNWJ5AsrSuOOAIcvmzkGr0hkyD0s7I60E=;
        b=n4qUYlidaqekXYBK59CTCZzZKiGfaq4Bt3VFJKdmDPNmB5N6s1aHNuMLLXhn9s33my
         FA5oYeQbydnCaXmo1ysdLYM0ChvHIuNhre3fHhbCCAH2f6v5VzpvHfRIdpccDiZ2jUuq
         em1x222QhxtZXa7928hhz6eZ6qtWKRSVc/B3jkMyU64KdS5ZoXw3DP/9QPzH7q+VMtNb
         G3j47yz0deSMYGpvBZPWNhdxX5khtMAZOTlsatt4ZmK4wMMivi5djK0oaz3DwdhAXRWo
         8MNupbbtP5vo+IZ+YUvAMLsKWeRxsxBi03IAMuUX5q719XP9qAEzizpzTh7tGhuYC7qR
         H0ow==
Original-Received: by 10.182.164.10 with SMTP id ym10mr25967088obb.75.1343776699570;
        Tue, 31 Jul 2012 16:18:19 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id ea6sm1217658obc.9.2012.07.31.16.18.15
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 31 Jul 2012 16:18:18 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <501860C6.3070309@ti.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Gm-Message-State: ALoCoQnA3tHfGcKP5GgZDpr6Aqljk4Ji3DX3pz18QYuSHogm7D8Pp8OHgzbEhbrrHZ5Snas9fmAF
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1336095 gmane.linux.usb.general:68638
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336095>

On Tue, Jul 31, 2012 at 05:48:38PM -0500, Alexis R. Cortes wrote:
> This patch is intended to work around a known issue on the
> SN65LVPE502CP USB3.0 re-driver that can delay the negotiation
> between a device and the host past the usual handshake timeout,
> and if that happens on the first insertion, the host controller
> port will enter in Compliance Mode as per xHCI Spec. The patch
> creates a timer which polls every 2 seconds the link state of each
> host controller's port (this by reading the PORTSC register) and
> recovers the port by issuing a Warm reset every time Compliance mode
> is detected.
> 
> Signed-off-by: Alexis R. Cortes <alexis.cortes@ti.com>
> ---
>  drivers/usb/host/xhci-hub.c |   27 ++++++++++++++
>  drivers/usb/host/xhci.c     |   81 +++++++++++++++++++++++++++++++++++++++++++
>  drivers/usb/host/xhci.h     |    6 +++
>  3 files changed, 114 insertions(+), 0 deletions(-)
> 
> diff --git a/drivers/usb/host/xhci-hub.c b/drivers/usb/host/xhci-hub.c
> index 7b01094..4ea498d 100644
> --- a/drivers/usb/host/xhci-hub.c
> +++ b/drivers/usb/host/xhci-hub.c
> @@ -493,7 +493,19 @@ static void xhci_hub_report_link_state(u32 *status, u32 status_reg)
>  		 * when this bit is set.
>  		 */
>  		pls |= USB_PORT_STAT_CONNECTION;
> +	} else {
> +		/*
> +		 * If CAS bit isn't set but the Port is already at
> +		 * Compliance Mode, fake a connection so the USB core
> +		 * notices the Compliance state and resets the port.
> +		 * This resolves an issue generated by the SN65LVPE502CP
> +		 * in which sometimes the port enters compliance mode
> +		 * caused by a delay on the host-device negotiation.
> +		 */
> +		if (pls == USB_SS_PORT_LS_COMP_MOD)
> +			pls |= USB_PORT_STAT_CONNECTION;
>  	}
> +
>  	/* update status field */
>  	*status |= pls;
>  }
> @@ -645,6 +657,21 @@ int xhci_hub_control(struct usb_hcd *hcd, u16 typeReq, u16 wValue,
>  		/* Update Port Link State for super speed ports*/
>  		if (hcd->speed == HCD_USB3) {
>  			xhci_hub_report_link_state(&status, temp);
> +			/*
> +			 * Verify if all USB3 Ports Have entered U0. Delete compliance
> +			 * mode timer if so.
> +			 */
> +			if (xhci->quirks & XHCI_COMP_MODE_QUIRK) {
> +				if (xhci->port_status_u0 != ((1 << xhci->num_usb3_ports)-1)) {
> +					if ((temp & PORT_PLS_MASK) == XDEV_U0)
> +						xhci->port_status_u0 |= 1 << wIndex;
> +				} else {
> +					/* Deleting Compliance Mode Recovery Timer */
> +					if (del_timer_sync(&xhci->comp_mode_recovery_timer))
> +						xhci_dbg(xhci, "Compliance Mode Recovery Timer Deleted. "
> +							       "All USB3 ports have entered U0 at least once.\n");

You need to disable the quirk flag here now, right?  Otherwise can't the
timer be deleted twice if the module is unloaded after this happens?

thanks,

greg k-h
