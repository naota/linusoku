Path: news.gmane.org!not-for-mail
From: Tvrtko Ursulin <tvrtko.ursulin@onelan.co.uk>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH] add blockconsole version 1.1
Date: Wed, 25 Jul 2012 09:17:09 +0100
Lines: 86
Approved: news@gmane.org
Message-ID: <201207250917.09516.tvrtko.ursulin@onelan.co.uk>
References: <20120424205946.GH20610@logfs.org> <201207240901.16151.tvrtko.ursulin@onelan.co.uk> <20120724143822.GA24954@logfs.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: Text/Plain; charset=utf-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1343204252 7800 80.91.229.3 (25 Jul 2012 08:17:32 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 08:17:32 +0000 (UTC)
Cc: Andrew Morton <akpm@linux-foundation.org>,
	linux-kernel@vger.kernel.org, Jeff Moyer <jmoyer@redhat.com>,
	Steve Hodgson <steve@purestorage.com>
To: =?utf-8?q?J=C3=B6rn_Engel?= <joern@logfs.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Jul 25 10:17:31 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Stwmh-0007z9-2R
	for glk-linux-kernel-3@plane.gmane.org; Wed, 25 Jul 2012 10:17:31 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932803Ab2GYIRW convert rfc822-to-quoted-printable (ORCPT
	<rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 25 Jul 2012 04:17:22 -0400
Original-Received: from claranet-outbound-smtp01.uk.clara.net ([195.8.89.34]:52802 "EHLO
	claranet-outbound-smtp01.uk.clara.net" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S932732Ab2GYIRR convert rfc822-to-8bit
	(ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Wed, 25 Jul 2012 04:17:17 -0400
Original-Received: from 110.100.155.90.in-addr.arpa ([90.155.100.110]:40010 helo=deuteros.localnet)
	by relay01.mail.eu.clara.net (relay.clara.net [213.253.3.41]:1025)
	with esmtps (TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	id 1StwmM-0002KQ-3b 
	(return-path <tvrtko.ursulin@onelan.co.uk>); Wed, 25 Jul 2012 08:17:10 +0000
User-Agent: KMail/1.13.7 (Linux/3.1.0-90.fc15.x86_64; KDE/4.6.5; x86_64; ; )
In-Reply-To: <20120724143822.GA24954@logfs.org>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332807
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332807>

On Tuesday 24 Jul 2012 15:38:22 J=C3=B6rn Engel wrote:
> On Tue, 24 July 2012 09:01:16 +0100, Tvrtko Ursulin wrote:
> > On Monday 23 Jul 2012 21:02:30 J=C3=B6rn Engel wrote:
> > > On Mon, 23 July 2012 15:33:16 +0100, Tvrtko Ursulin wrote:
> > > > On Thursday 12 Jul 2012 18:46:34 J=C3=B6rn Engel wrote:
> > At the very least block console does not work from interrupt contex=
t
> > while netconsole does, right? Also netconsole does things to try an=
d
> > work around low memory situations. Things like that I think would b=
e
> > useful additions to documentation.
>=20
> Blockconsole does work from interrupt context.  It has buffers for 1M=
B
> worth of data.  Until those fill up, it only does a memcpy and
> schedules a workqueue for writeback.  If you panic, it will do the
> writeback immediately.  While I wouldn't believe this to always work,
> I have yet to see a confirmed failure case.

As far as I know there is nothing like netpoll in the block layer so it=
 has to=20
be a lot less reliable than netconsole. Especially with delaying write =
out to=20
a workqueue. Anyway, I am not arguing, just saying in my opinion those =
caveats=20
are worth documenting.
=20
> Blockconsole itself has no allocations in the write path, so it shoul=
d
> be unaffected by low memory situation.  The underlying driver and
> block layer code may well be.

Same thing.
=20
> > > > Also, and I haven't checked what the swap format is, if it coul=
d
> > > > somehow be integrated together that could be useful.
> > >=20
> > > That appears to be slightly less likely than crossbreeding a rabb=
it
> > > with a chicken.  Is there something obvious I have missed?
> >=20
> > I was thinking how swap space is always there and is potentially mu=
ch
> > faster to write to than a random USB stick - which could translate =
to
> > more reliable. Then it's a question of which storage subsystem (lib=
ata
> > vs. usb-storage) would work better in different oops/panic situatio=
ns.
> > Again I tend to have less hope in USB based solutions - maybe it's =
my
> > bias from working in that area many years ago. So the idea of swap =
space
> > was that _if_ swap format could be extended to allocate a number of
> > blocks to use other than swap, then that area could be used by
> > blockconsole. Seemed like a convenient and potentially more reliabl=
e
> > solution to me, but as I said the latter may depend.
>=20
> In my systems swap is often absent.  Plus, taking a few blocks a swap
> aside is in the end just partitioning in a new dress.  So the argumen
> appears to boil down to using partitions again.  The equivalent of
> swap files might be interesting, but can also be somewhat scary.  So =
I
> would leave it to others to actually write the code - if they care.

I knew you'll pick me up on a new partitioning scheme. :) I just see it=
 as=20
convenience. Whereas it is often not possible (or at least to much effo=
rt) to=20
create new partitions, swap if often around and potentially more reliab=
le than=20
a random USB stick (considering the whole data path).
=20
> Libata is fine, blockconsole can work on any block device.

My point was that it's reliability will differ depending on the block d=
evice=20
in use, which is unlike netconsole. Again I am not arguing against the=20
feature, but if you don't see things like these are worth documenting I=
 give=20
up.

Tvrtko
