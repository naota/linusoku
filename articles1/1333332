Path: news.gmane.org!not-for-mail
From: Minchan Kim <minchan@kernel.org>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [PATCH -mm] remove __GFP_NO_KSWAPD fixes
Date: Thu, 26 Jul 2012 08:36:31 +0900
Lines: 44
Approved: news@gmane.org
Message-ID: <20120725233631.GC14411@bbox>
References: <20120724111222.2c5e6b30@annuminas.surriel.com>
 <20120725145119.75be021d@cuia.bos.redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343259367 12367 80.91.229.3 (25 Jul 2012 23:36:07 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 23:36:07 +0000 (UTC)
Cc: linux-mm@kvack.org, Andrea Arcangeli <aarcange@redhat.com>,
	lkml <linux-kernel@vger.kernel.org>,
	Andrew Morton <akpm@linux-foundation.org>,
	Mel Gorman <mel@csn.ul.ie>,
	Artem Bityutskiy <artem.bityutskiy@linux.intel.com>,
	David Woodhouse <David.Woodhouse@intel.com>
To: Rik van Riel <riel@redhat.com>
Original-X-From: owner-linux-mm@kvack.org Thu Jul 26 01:36:06 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SuB7d-00031F-4g
	for glkm-linux-mm-2@m.gmane.org; Thu, 26 Jul 2012 01:36:05 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 708E16B004D; Wed, 25 Jul 2012 19:36:03 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 5C2276B005A; Wed, 25 Jul 2012 19:36:03 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 2CEF46B005D; Wed, 25 Jul 2012 19:36:03 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx144.postini.com [74.125.245.144])
	by kanga.kvack.org (Postfix) with SMTP id 3D3BF6B004D
	for <linux-mm@kvack.org>; Wed, 25 Jul 2012 19:36:02 -0400 (EDT)
Original-Received: from LGEMRELSE1Q.lge.com ([156.147.1.111]) by na3sys010amx144.postini.com ([74.125.244.10]) with SMTP;
	Wed, 25 Jul 2012 23:36:02 GMT
X-AuditID: 9c93016f-b7b08ae00000790d-2f-501082e010f9
Original-Received: from localhost ( [10.177.220.67])
	by LGEMRELSE1Q.lge.com (Symantec Brightmail Gateway) with SMTP id A2.A7.30989.0E280105; Thu, 26 Jul 2012 08:36:00 +0900 (KST)
Content-Disposition: inline
In-Reply-To: <20120725145119.75be021d@cuia.bos.redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Brightmail-Tracker: AAAAAA==
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-pstn-settings: 3 (1.0000:1.0000) s cv gt3 gt2 gt1 r p m c 
X-pstn-addresses: from <minchan@kernel.org> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83020 gmane.linux.kernel:1333332
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333332>

On Wed, Jul 25, 2012 at 02:51:19PM -0400, Rik van Riel wrote:
> Turns out I missed two spots where __GFP_NO_KSWAPD is used.
> 
> The removal from the trace code is obvious, since the flag
> got removed there is no need to print it.
> 
> For mtdcore.c, now that memory compaction has been fixed,
> we should no longer see large swap storms from an attempt
> to allocate a large buffer, removing the need to specify
> __GFP_NO_KSWAPD.
> 
> Signed-off-by: Rik van Riel <riel@redhat.com>
Reviewed-by: Minchan Kim <minchan@kernel.org>

You should have tidied up comment of the function.
I hope Andrew can do it if he see this review.

diff --git a/drivers/mtd/mtdcore.c b/drivers/mtd/mtdcore.c
index fcfce24..6ff1308 100644
--- a/drivers/mtd/mtdcore.c
+++ b/drivers/mtd/mtdcore.c
@@ -1065,8 +1065,7 @@ EXPORT_SYMBOL_GPL(mtd_writev);
  * until the request succeeds or until the allocation size falls below
  * the system page size. This attempts to make sure it does not adversely
  * impact system performance, so when allocating more than one page, we
- * ask the memory allocator to avoid re-trying, swapping, writing back
- * or performing I/O.
+ * ask the memory allocator to avoid re-trying.
  *
  * Note, this function also makes sure that the allocated buffer is aligned to
  * the MTD device's min. I/O unit, i.e. the "mtd->writesize" value.

Thanks.

-- 
Kind regards,
Minchan Kim

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

