Path: news.gmane.org!not-for-mail
From: Sarah Sharp <sarah.a.sharp@linux.intel.com>
Newsgroups: gmane.linux.kernel,gmane.linux.usb.general
Subject: Re: [PATCH 2/2] xhci: EHCI/XHCI ports switching on Intense-PC.
Date: Mon, 23 Jul 2012 10:44:06 -0700
Lines: 65
Approved: news@gmane.org
Message-ID: <20120723174406.GG32758@xanatos>
References: <5004454E.9030903@compulab.co.il>
 <20120717045416.GJ7599@xanatos>
 <50065E5A.2040103@compulab.co.il>
 <20120718165916.GA30828@xanatos>
 <500D3998.7010705@compulab.co.il>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343065472 17691 80.91.229.3 (23 Jul 2012 17:44:32 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 23 Jul 2012 17:44:32 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, linux-usb@vger.kernel.org,
	Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: Denis Turischev <denis@compulab.co.il>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 23 19:44:31 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StMg7-0006jh-QI
	for glk-linux-kernel-3@plane.gmane.org; Mon, 23 Jul 2012 19:44:20 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754405Ab2GWRoK (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 23 Jul 2012 13:44:10 -0400
Original-Received: from mga09.intel.com ([134.134.136.24]:18463 "EHLO mga09.intel.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754236Ab2GWRoI (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Mon, 23 Jul 2012 13:44:08 -0400
Original-Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by orsmga102.jf.intel.com with ESMTP; 23 Jul 2012 10:44:07 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="4.67,352,1309762800"; 
   d="scan'208";a="170269470"
Original-Received: from xanatos.jf.intel.com (HELO xanatos) ([10.7.201.93])
  by orsmga001.jf.intel.com with ESMTP; 23 Jul 2012 10:44:07 -0700
Content-Disposition: inline
In-Reply-To: <500D3998.7010705@compulab.co.il>
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331874 gmane.linux.usb.general:68120
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331874>

Did you try disabling the wake on bits in the port status registers?  I
would prefer that solution if it works.

Otherwise this patchset looks fine.  I'll work with the hardware folks
and see if this is exposed on other boards.  Also, this is not a BIOS
bug, but a hardware issue that can be worked around in BIOS.  So I might
edit your description on the first patch a bit when I submit it to Greg.

Sarah Sharp

On Mon, Jul 23, 2012 at 02:46:32PM +0300, Denis Turischev wrote:
> Intense-PC is Compulab's mini-desktop with Intel Panther Point
> chipset.
> 
> Unconditional switchover to xHCI provided by function
> usb_enable_xhci_ports() leads to surprising results, after shutdown
> system powered-on again after a few seconds. On Windows power
> related problems were not observed. Switching back to EHCI solves
> the problem.
> 
> The patch switches usb ports back to EHCI during xhci shutdown
> for Intense-PC.
> 
> Signed-off-by: Denis Turischev <denis@compulab.co.il>
> ---
>  drivers/usb/host/xhci.c |   14 ++++++++++++++
>  1 file changed, 14 insertions(+)
> 
> diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
> index a979cd0..541efaa 100644
> --- a/drivers/usb/host/xhci.c
> +++ b/drivers/usb/host/xhci.c
> @@ -26,6 +26,8 @@
>  #include <linux/module.h>
>  #include <linux/moduleparam.h>
>  #include <linux/slab.h>
> +#include <linux/dmi.h>
> +#include "pci-quirks.h"
> 
>  #include "xhci.h"
> 
> @@ -656,8 +658,20 @@ void xhci_stop(struct usb_hcd *hcd)
>   */
>  void xhci_shutdown(struct usb_hcd *hcd)
>  {
> +	struct pci_dev *pdev;
> +	const char *brd_name;
>  	struct xhci_hcd *xhci = hcd_to_xhci(hcd);
> 
> +	pdev = to_pci_dev(hcd->self.controller);
> +
> +	if (usb_is_intel_switchable_xhci(pdev)) {
> +		brd_name = dmi_get_system_info(DMI_BOARD_NAME);
> +
> +		/* quirk for Compulab's Intense-PC board */
> +		if (brd_name && strstr(brd_name, "Intense-PC"))
> +			usb_disable_xhci_ports(pdev);
> +	}
> +
>  	spin_lock_irq(&xhci->lock);
>  	xhci_halt(xhci);
>  	spin_unlock_irq(&xhci->lock);
> -- 
> 1.7.9.5
> 
