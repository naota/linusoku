Path: news.gmane.org!not-for-mail
From: Theodore Ts'o <tytso@mit.edu>
Newsgroups: gmane.linux.kernel.aio.general,gmane.linux.file-systems,gmane.linux.kernel
Subject: Re: [RFC][PATCH] Make io_submit non-blocking
Date: Tue, 24 Jul 2012 16:27:38 -0400
Lines: 59
Approved: news@gmane.org
Message-ID: <20120724202738.GC29239@thunk.org>
References: <500E89D1.9010303@suse.de>
 <CAAYFAvp7xDG8et_dyqSgEVOAr7ykNBkgBhs1m5gGjoOdQFkxGQ@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343161674 14104 80.91.229.3 (24 Jul 2012 20:27:54 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 20:27:54 +0000 (UTC)
Cc: Ankit Jain <jankit@suse.de>, Al Viro <viro@zeniv.linux.org.uk>,
	bcrl@kvack.org, linux-fsdevel@vger.kernel.org, linux-aio@kvack.org,
	linux-kernel@vger.kernel.org, Jan Kara <jack@suse.cz>
To: Rajat Sharma <fs.rajat@gmail.com>
Original-X-From: owner-linux-aio@kvack.org Tue Jul 24 22:27:51 2012
Return-path: <owner-linux-aio@kvack.org>
Envelope-to: gla-linux-aio@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-aio@kvack.org>)
	id 1Stlhp-00044w-W3
	for gla-linux-aio@m.gmane.org; Tue, 24 Jul 2012 22:27:46 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id A194B6B0044; Tue, 24 Jul 2012 16:27:43 -0400 (EDT)
Delivered-To: linux-aio-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 8CFA26B005A; Tue, 24 Jul 2012 16:27:43 -0400 (EDT)
X-Original-To: int-list-linux-aio@kvack.org
Delivered-To: int-list-linux-aio@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 53CBA6B005D; Tue, 24 Jul 2012 16:27:43 -0400 (EDT)
X-Original-To: linux-aio@kvack.org
Delivered-To: linux-aio@kvack.org
Original-Received: from psmtp.com (na3sys010amx105.postini.com [74.125.245.105])
	by kanga.kvack.org (Postfix) with SMTP id 759C56B0044;
	Tue, 24 Jul 2012 16:27:42 -0400 (EDT)
Original-Received: from imap.thunk.org ([67.18.176.11]) (using TLSv1) by na3sys010amx105.postini.com ([74.125.244.10]) with SMTP;
	Tue, 24 Jul 2012 20:27:42 GMT
Original-Received: from root (helo=closure.thunk.org)
	by imap.thunk.org with local-esmtp (Exim 4.72)
	(envelope-from <tytso@thunk.org>)
	id 1Stlhh-00060j-Vd; Tue, 24 Jul 2012 20:27:38 +0000
Original-Received: by closure.thunk.org (Postfix, from userid 15806)
	id 37760241A66; Tue, 24 Jul 2012 16:27:38 -0400 (EDT)
Mail-Followup-To: Theodore Ts'o <tytso@mit.edu>,
	Rajat Sharma <fs.rajat@gmail.com>, Ankit Jain <jankit@suse.de>,
	Al Viro <viro@zeniv.linux.org.uk>, bcrl@kvack.org,
	linux-fsdevel@vger.kernel.org, linux-aio@kvack.org,
	linux-kernel@vger.kernel.org, Jan Kara <jack@suse.cz>
Content-Disposition: inline
In-Reply-To: <CAAYFAvp7xDG8et_dyqSgEVOAr7ykNBkgBhs1m5gGjoOdQFkxGQ@mail.gmail.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-SA-Exim-Connect-IP: <locally generated>
X-SA-Exim-Mail-From: tytso@thunk.org
X-SA-Exim-Scanned: No (on imap.thunk.org); SAEximRunCond expanded to false
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-aio@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-aio.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.aio.general:3144 gmane.linux.file-systems:66178 gmane.linux.kernel:1332567
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332567>

On Tue, Jul 24, 2012 at 06:04:23PM +0530, Rajat Sharma wrote:
> >
> > Currently, io_submit tries to execute the io requests on the
> > same thread, which could block because of various reaons (eg.
> > allocation of disk blocks). So, essentially, io_submit ends
> > up being a blocking call.
> 
> Ideally filesystem should take care of it e.g. by deferring such time
> consuming allocations and return -EIOCBQUEUED immediately. But have
> you seen such cases?

Oh, it happens all the time if you are using AIO.  If the file system
needs to read or write any metadata block, AIO can become distinctly
non-"A".  The workaround that I've chosen is to create a way to cache
the information needed for the bmap() operation, triggered via an
ioctl() issued at open time, so that this is not an issue, but that
only works if the file is pre-allocated, and there is no need to do
any block allocations.

It's all very well and good to say, "the file system should handle
it", but that just pushes the problem onto the file system.  And since
you need to potentially issue block I/O requests, which you can't do
from an interrupt context (i.e., a block I/O completion handler), you
really do need to create a workqueue in order to make things work.

If you do it in the fs/direct_io.c layer, at least that way you can
solve the problem once for all file systems....

> With lots of application threads firing continuous IOs, workqueue
> threads might become bottleneck and you might have to eventually
> develop a priority scheduling. This workqueue was originally designed
> for IO retries which is an error path, now consumers of workqueue
> might easily increase by 100x.

Yes, you definitely need to throttle how many outstanding AIO's can be
allowed to be outstanding, either globally, or on a
per-superblock/process/user/cgroup basis, and return EAGAIN if there
are too many outstanding requests.

Speaking of cgroups, one of the other challenges with running the AIO
out of a workqueue is trying to respect cgroup restrictions.  In
particular, the io-throttle cgroup (which is needed to provide
Proportional I/O support), but also the memory cgroup.

All of these complications is why I decided to simply go with the "pin
metadata" approach, since I didn't need to worry (at least initially)
with the allocating write case.  (These patches to ext4 haven't yet
been published upstream, mainly because they need a lot of cleanup
work and I haven't had time to do that cleanup; my intention is to get
the "big extents" patchset upstream, though.)

						- Ted

--
To unsubscribe, send a message with 'unsubscribe linux-aio' in
the body to majordomo@kvack.org.  For more info on Linux AIO,
see: http://www.kvack.org/aio/
Don't email: <a href=mailto:"aart@kvack.org">aart@kvack.org</a>

