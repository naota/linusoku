Path: news.gmane.org!not-for-mail
From: Sachin Kamat <sachin.kamat@linaro.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.janitors
Subject: Re: [PATCH 4/5] drivers/video/da8xx-fb.c: use devm_ functions
Date: Tue, 31 Jul 2012 21:17:57 +0530
Lines: 119
Approved: news@gmane.org
Message-ID: <CAK9yfHxy4DGCwZjDCdc3A-a3oKoMGQruDMhfq0uR+2+7nfFHoA@mail.gmail.com>
References: <1343742860-16213-1-git-send-email-damien.cassou@lifl.fr>
	<1343742860-16213-3-git-send-email-damien.cassou@lifl.fr>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343749697 8909 80.91.229.3 (31 Jul 2012 15:48:17 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 15:48:17 +0000 (UTC)
Cc: Florian Tobias Schandinat <FlorianSchandinat@gmx.de>,
	kernel-janitors@vger.kernel.org, linux-fbdev@vger.kernel.org,
	linux-kernel@vger.kernel.org
To: Damien Cassou <damien.cassou@lifl.fr>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 31 17:48:16 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SwEgA-0005lr-Pd
	for glk-linux-kernel-3@plane.gmane.org; Tue, 31 Jul 2012 17:48:15 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755272Ab2GaPr7 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 31 Jul 2012 11:47:59 -0400
Original-Received: from mail-vb0-f46.google.com ([209.85.212.46]:55563 "EHLO
	mail-vb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753623Ab2GaPr6 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 31 Jul 2012 11:47:58 -0400
Original-Received: by vbbff1 with SMTP id ff1so5895760vbb.19
        for <linux-kernel@vger.kernel.org>; Tue, 31 Jul 2012 08:47:57 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-gm-message-state;
        bh=lTCU85fpsLCYGg573WmG9KKl9EYa317UjW2NdFE8Uwo=;
        b=c2jqMk6LHvFMFF5MnGMQPrQj6Lh/jHUbXHSO7gc9JpK5KRjA1n8h8VHuFib7r2UhBb
         T6z1l2oVunTIDaXZxRNlyzPggOEwP5meKfJMbLIYBE1fR/o2i0mJGYo74gkBlNe657PR
         DupXU/iK6aI0fdr85Zu5QEmlQkQkXDPLyguzTLGD2XaRcHiJ5BlbE657h55uIjP1Vvqo
         iUEYv2eDr4/aWTfNTOP5KVdQwr+LT2gyWnF7W6cyNZrB7YJJH3aHEWOTsko2/08AJ+B/
         fMjp98Gf8n6IQ5vCi8OARQSzVvcjVRCbvlXJGS8wOJpELOzHUezbRHsaFvI6TM5qitDN
         Jn1A==
Original-Received: by 10.58.169.167 with SMTP id af7mr2879520vec.55.1343749677302; Tue,
 31 Jul 2012 08:47:57 -0700 (PDT)
Original-Received: by 10.52.173.198 with HTTP; Tue, 31 Jul 2012 08:47:57 -0700 (PDT)
In-Reply-To: <1343742860-16213-3-git-send-email-damien.cassou@lifl.fr>
X-Gm-Message-State: ALoCoQkuEWlw5pSi5M/hjpAPYyKAf6q4e5XxPJNoVpKq/6C+sAbdUXwl75cYYR2jzQ2sVMTkDQsW
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335840 gmane.linux.kernel.janitors:25292
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335840>

On 31 July 2012 19:24, Damien Cassou <damien.cassou@lifl.fr> wrote:
> From: Damien Cassou <damien.cassou@lifl.fr>
>
> The various devm_ functions allocate memory that is released when a driver
> detaches.  This patch uses these functions for data that is allocated in
> the probe function of a platform device and is only freed in the remove
> function.
>
> Signed-off-by: Damien Cassou <damien.cassou@lifl.fr>
>
> ---
>  drivers/video/da8xx-fb.c |   34 ++++++++--------------------------
>  1 file changed, 8 insertions(+), 26 deletions(-)
>
> diff --git a/drivers/video/da8xx-fb.c b/drivers/video/da8xx-fb.c
> index 7ae9d53..0429431 100644
> --- a/drivers/video/da8xx-fb.c
> +++ b/drivers/video/da8xx-fb.c
> @@ -947,12 +947,9 @@ static int __devexit fb_remove(struct platform_device *dev)
>                                   par->p_palette_base);
>                 dma_free_coherent(NULL, par->vram_size, par->vram_virt,
>                                   par->vram_phys);
> -               free_irq(par->irq, par);
>                 clk_disable(par->lcdc_clk);
>                 clk_put(par->lcdc_clk);
>                 framebuffer_release(info);
> -               iounmap((void __iomem *)da8xx_fb_reg_base);
> -               release_mem_region(lcdc_regs->start, resource_size(lcdc_regs));
>
>         }
>         return 0;
> @@ -1149,7 +1146,7 @@ static int __devinit fb_probe(struct platform_device *device)
>         struct fb_info *da8xx_fb_info;
>         struct clk *fb_clk = NULL;
>         struct da8xx_fb_par *par;
> -       resource_size_t len;
> +
>         int ret, i;
>         unsigned long ulcm;
>
> @@ -1159,29 +1156,20 @@ static int __devinit fb_probe(struct platform_device *device)
>         }
>
>         lcdc_regs = platform_get_resource(device, IORESOURCE_MEM, 0);
> -       if (!lcdc_regs) {
> -               dev_err(&device->dev,
> -                       "Can not get memory resource for LCD controller\n");
> -               return -ENOENT;
> -       }
> -
> -       len = resource_size(lcdc_regs);
>
> -       lcdc_regs = request_mem_region(lcdc_regs->start, len, lcdc_regs->name);
> -       if (!lcdc_regs)
> -               return -EBUSY;
> -
> -       da8xx_fb_reg_base = (resource_size_t)ioremap(lcdc_regs->start, len);
> +       da8xx_fb_reg_base =
> +               (resource_size_t) devm_request_and_ioremap(&device->dev,
> +                                                          lcdc_regs);
>         if (!da8xx_fb_reg_base) {
>                 ret = -EBUSY;
> -               goto err_request_mem;
> +               return ret;

You can directly do
                  return -EBUSY;
and remove the braces.

>         }
>
>         fb_clk = clk_get(&device->dev, NULL);
>         if (IS_ERR(fb_clk)) {
>                 dev_err(&device->dev, "Can not get device clock\n");
>                 ret = -ENODEV;
> -               goto err_ioremap;
> +               return ret;

ditto

>         }
>         ret = clk_enable(fb_clk);
>         if (ret)
> @@ -1359,8 +1347,8 @@ static int __devinit fb_probe(struct platform_device *device)
>         else
>                 lcdc_irq_handler = lcdc_irq_handler_rev02;
>
> -       ret = request_irq(par->irq, lcdc_irq_handler, 0,
> -                       DRIVER_NAME, par);
> +       ret = devm_request_irq(&device->dev, par->irq, lcdc_irq_handler, 0,
> +                              DRIVER_NAME, par);
>         if (ret)
>                 goto irq_freq;
>         return 0;
> @@ -1391,12 +1379,6 @@ err_clk_disable:
>  err_clk_put:
>         clk_put(fb_clk);
>
> -err_ioremap:
> -       iounmap((void __iomem *)da8xx_fb_reg_base);
> -
> -err_request_mem:
> -       release_mem_region(lcdc_regs->start, len);
> -
>         return ret;
>  }
>
>
> --
> To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
> the body of a message to majordomo@vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> Please read the FAQ at  http://www.tux.org/lkml/



-- 
With warm regards,
Sachin
