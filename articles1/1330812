Path: news.gmane.org!not-for-mail
From: Michel Lespinasse <walken@google.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: [PATCH 3/6] augmented rbtree test
Date: Fri, 20 Jul 2012 05:31:04 -0700
Lines: 163
Approved: news@gmane.org
Message-ID: <1342787467-5493-4-git-send-email-walken@google.com>
References: <1342787467-5493-1-git-send-email-walken@google.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1342787508 12212 80.91.229.3 (20 Jul 2012 12:31:48 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 12:31:48 +0000 (UTC)
Cc: linux-mm@kvack.org,
	linux-kernel@vger.kernel.org
To: riel@redhat.com,
	peterz@infradead.org,
	daniel.santos@pobox.com,
	aarcange@redhat.com,
	dwmw2@infradead.org,
	akpm@linux-foundation.org
Original-X-From: owner-linux-mm@kvack.org Fri Jul 20 14:31:46 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SsCMu-0008EQ-L4
	for glkm-linux-mm-2@m.gmane.org; Fri, 20 Jul 2012 14:31:41 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 73F9E6B0069; Fri, 20 Jul 2012 08:31:39 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 635186B006C; Fri, 20 Jul 2012 08:31:39 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 1FDBA6B006E; Fri, 20 Jul 2012 08:31:39 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx173.postini.com [74.125.245.173])
	by kanga.kvack.org (Postfix) with SMTP id 5C2A46B0069
	for <linux-mm@kvack.org>; Fri, 20 Jul 2012 08:31:38 -0400 (EDT)
Original-Received: from mail-pb0-f41.google.com ([209.85.160.41]) (using TLSv1) by na3sys010amx173.postini.com ([74.125.244.10]) with SMTP;
	Fri, 20 Jul 2012 12:31:38 GMT
Original-Received: by mail-pb0-f41.google.com with SMTP id rp2so7647111pbb.14
        for <linux-mm@kvack.org>; Fri, 20 Jul 2012 05:31:38 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references;
        bh=hJ2kIe41Wb7WEmibJ8sTCxP1lb6Rss+Yqc4bDlBlUR0=;
        b=QaCPebB9zalaDou1cxSpxfXG7qtIaOYrtpqyHgSkaG3SKezvKsndmJoiHCf+RssUIN
         M+9XJOofBgGikBOiqiHnmtN6FBlzXb7YhY4B4glqlEXxP0DLzlO5/ry5okAPoETCoKGg
         b1Yz8vv0OQ2cxZ75jGrixX3A+vI3vTNRBpn7SkPL2SB7ZTQD+JARB79PXvE7XET4X9Z5
         jhtapcBJOMYwhhzS6xf0FA+DS8ikmq+Uy1HSLjZbfxgvFUOeiLhnDEIjqKrdeEuMH94P
         4geWkMks+RsEqxTMEjoLfQkSrf4U0x6O/D4FrMdIy/fX0jUHe6GnlV4r+mE3LFcp8a8D
         JYow==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :x-gm-message-state;
        bh=hJ2kIe41Wb7WEmibJ8sTCxP1lb6Rss+Yqc4bDlBlUR0=;
        b=cNAzPhpB2D4OzXoluj+Y9njqmAdqJbuXvh5+6AKtaJwo2O+KlBg612VICLr8Sa/Etm
         MhTi5Nn3Hk7JHMlLIwjKxwhyWAbLS+1sBsGaZv63HNpN+F3QY+o4AaZUHOJGdz5PFyhk
         sd0fwK2VU24cfVfK7+Eaal6q2Q4b8vx4xXofXfSi6cMevg6Eoyuax1If/AaoxzwoPRD6
         W68IWq5VECKhCF2qqC2YlXP7GBNEiSFsGs5TIr1mCkaYnOLu2uglzDHXbPFd/afk/yeA
         H2xkUyDhpT/mJOGBipCQ1C1bHa7S3TyGT4UTU9ToScmm1UxkPh/cq2gScbV61y3uD9MT
         zxsQ==
Original-Received: by 10.68.213.234 with SMTP id nv10mr13385097pbc.56.1342787497966;
        Fri, 20 Jul 2012 05:31:37 -0700 (PDT)
Original-Received: by 10.68.213.234 with SMTP id nv10mr13385072pbc.56.1342787497816;
        Fri, 20 Jul 2012 05:31:37 -0700 (PDT)
Original-Received: from studio.mtv.corp.google.com (studio.mtv.corp.google.com [172.18.96.163])
        by mx.google.com with ESMTPS id wa14sm3906810pbc.10.2012.07.20.05.31.33
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 20 Jul 2012 05:31:34 -0700 (PDT)
X-Mailer: git-send-email 1.7.7.3
In-Reply-To: <1342787467-5493-1-git-send-email-walken@google.com>
X-Gm-Message-State: ALoCoQkZFZGk8v558pmf+2HBqmvwYwQu7m5zqLlsBMFljc9KJaJOTOWTCnijmquJMd9EPfSMEBscDAcRjzFNs01DJAhQHaXOAsjkoojHKcEPGRsKtcNFbIFWOVNB4b/+P4a5tfFKfiawzVspjAw88gkAtHBWtdSRt0EINYGepGwNIW571srHXeTyIyiCMMedlhcO1dqQnjds
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:97.32911/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.1000) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <walken@google.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:82768 gmane.linux.kernel:1330812
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330812>

Signed-off-by: Michel Lespinasse <walken@google.com>
---
 lib/rbtree_test.c |  103 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 files changed, 101 insertions(+), 2 deletions(-)

diff --git a/lib/rbtree_test.c b/lib/rbtree_test.c
index 4c6d250..2dfafe4 100644
--- a/lib/rbtree_test.c
+++ b/lib/rbtree_test.c
@@ -10,6 +10,10 @@
 struct test_node {
 	struct rb_node rb;
 	u32 key;
+
+	/* following fields used for testing augmented rbtree functionality */
+	u32 val;
+	u32 augmented;
 };
 
 static struct rb_root root = RB_ROOT;
@@ -20,10 +24,11 @@ static struct rnd_state rnd;
 static void insert(struct test_node *node, struct rb_root *root)
 {
 	struct rb_node **new = &root->rb_node, *parent = NULL;
+	u32 key = node->key;
 
 	while (*new) {
 		parent = *new;
-		if (node->key < rb_entry(parent, struct test_node, rb)->key)
+		if (key < rb_entry(parent, struct test_node, rb)->key)
 			new = &parent->rb_left;
 		else
 			new = &parent->rb_right;
@@ -38,11 +43,62 @@ static inline void erase(struct test_node *node, struct rb_root *root)
 	rb_erase(&node->rb, root);
 }
 
+static inline u32 augment_recompute(struct test_node *node)
+{
+	u32 max = node->val, child_augmented;
+	if (node->rb.rb_left) {
+		child_augmented = rb_entry(node->rb.rb_left, struct test_node,
+					   rb)->augmented;
+		if (max < child_augmented)
+			max = child_augmented;
+	}
+	if (node->rb.rb_right) {
+		child_augmented = rb_entry(node->rb.rb_right, struct test_node,
+					   rb)->augmented;
+		if (max < child_augmented)
+			max = child_augmented;
+	}
+	return max;
+}
+
+static void augment_callback(struct rb_node *rb, void *unused)
+{
+	struct test_node *node = rb_entry(rb, struct test_node, rb);
+	node->augmented = augment_recompute(node);
+}
+
+static void insert_augmented(struct test_node *node, struct rb_root *root)
+{
+	struct rb_node **new = &root->rb_node, *parent = NULL;
+	u32 key = node->key;
+
+	while (*new) {
+		parent = *new;
+		if (key < rb_entry(parent, struct test_node, rb)->key)
+			new = &parent->rb_left;
+		else
+			new = &parent->rb_right;
+	}
+
+	rb_link_node(&node->rb, parent, new);
+	rb_insert_color(&node->rb, root);
+	rb_augment_insert(&node->rb, augment_callback, NULL);
+}
+
+static void erase_augmented(struct test_node *node, struct rb_root *root)
+{
+	struct rb_node *deepest = rb_augment_erase_begin(&node->rb);
+	rb_erase(&node->rb, root);
+	rb_augment_erase_end(deepest, augment_callback, NULL);
+}
+
 static void init(void)
 {
 	int i;
-	for (i = 0; i < NODES; i++)
+	for (i = 0; i < NODES; i++) {
 		nodes[i].key = prandom32(&rnd);
+		nodes[i].val = prandom32(&rnd);
+	}
 }
 
 static bool is_red(struct rb_node *rb)
@@ -81,6 +137,17 @@ static void check(int nr_nodes)
 	WARN_ON_ONCE(count != nr_nodes);
 }
 
+static void check_augmented(int nr_nodes)
+{
+	struct rb_node *rb;
+
+	check(nr_nodes);
+	for (rb = rb_first(&root); rb; rb = rb_next(rb)) {
+		struct test_node *node = rb_entry(rb, struct test_node, rb);
+		WARN_ON_ONCE(node->augmented != augment_recompute(node));
+	}
+}
+
 static int rbtree_test_init(void)
 {
 	int i, j;
@@ -119,6 +186,38 @@ static int rbtree_test_init(void)
 		check(0);
 	}
 
+	printk(KERN_ALERT "augmented rbtree testing");
+
+	init();
+
+	time1 = get_cycles();
+
+	for (i = 0; i < PERF_LOOPS; i++) {
+		for (j = 0; j < NODES; j++)
+			insert_augmented(nodes + j, &root);
+		for (j = 0; j < NODES; j++)
+			erase_augmented(nodes + j, &root);
+	}
+
+	time2 = get_cycles();
+	time = time2 - time1;
+
+	time = div_u64(time, PERF_LOOPS);
+	printk(" -> %llu cycles\n", time);
+
+	for (i = 0; i < CHECK_LOOPS; i++) {
+		init();
+		for (j = 0; j < NODES; j++) {
+			check_augmented(j);
+			insert_augmented(nodes + j, &root);
+		}
+		for (j = 0; j < NODES; j++) {
+			check_augmented(NODES - j);
+			erase_augmented(nodes + j, &root);
+		}
+		check_augmented(0);
+	}
+
 	return -EAGAIN; /* Fail will directly unload the module */
 }
 
-- 
1.7.7.3

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

