Path: news.gmane.org!not-for-mail
From: Marc Kleine-Budde <mkl@pengutronix.de>
Newsgroups: gmane.linux.can,gmane.linux.kernel
Subject: Re: [PATCH can-next v3 1/2] can: add tx/rx LED trigger support
Date: Tue, 31 Jul 2012 09:10:00 +0200
Organization: Pengutronix e.K.
Lines: 262
Approved: news@gmane.org
Message-ID: <501784C8.9050803@pengutronix.de>
References: <1343676041-29572-1-git-send-email-fabio.baltieri@gmail.com> <5016FA01.5000109@pengutronix.de> <20120731065733.GA30267@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
 protocol="application/pgp-signature";
 boundary="------------enigB633E90602D98D6AD02725E4"
X-Trace: dough.gmane.org 1343718619 12030 80.91.229.3 (31 Jul 2012 07:10:19 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 07:10:19 +0000 (UTC)
Cc: linux-can@vger.kernel.org, linux-kernel@vger.kernel.org,
	Oliver Hartkopp <socketcan@hartkopp.net>,
	Wolfgang Grandegger <wg@grandegger.com>
To: Fabio Baltieri <fabio.baltieri@gmail.com>
Original-X-From: linux-can-owner@vger.kernel.org Tue Jul 31 09:10:16 2012
Return-path: <linux-can-owner@vger.kernel.org>
Envelope-to: glc-linux-can2@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-can-owner@vger.kernel.org>)
	id 1Sw6at-0005So-Hk
	for glc-linux-can2@plane.gmane.org; Tue, 31 Jul 2012 09:10:16 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755541Ab2GaHKO (ORCPT <rfc822;glc-linux-can2@m.gmane.org>);
	Tue, 31 Jul 2012 03:10:14 -0400
Original-Received: from metis.ext.pengutronix.de ([92.198.50.35]:45502 "EHLO
	metis.ext.pengutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751133Ab2GaHKO (ORCPT
	<rfc822;linux-can@vger.kernel.org>); Tue, 31 Jul 2012 03:10:14 -0400
Original-Received: from gallifrey.ext.pengutronix.de ([2001:6f8:1178:4:5054:ff:fe8d:eefb] helo=bjornoya.do.blackshift.org)
	by metis.ext.pengutronix.de with esmtp (Exim 4.72)
	(envelope-from <mkl@pengutronix.de>)
	id 1Sw6aq-0004wn-25; Tue, 31 Jul 2012 09:10:12 +0200
Original-Received: from [IPv6:2001:6f8:105b:1122:21d:e0ff:fe39:f61b] (hardanger.wlan.blackshift.org [IPv6:2001:6f8:105b:1122:21d:e0ff:fe39:f61b])
	(using TLSv1 with cipher ECDHE-ECDSA-AES256-SHA (256/256 bits))
	(Client did not present a certificate)
	(Authenticated sender: frogger)
	by bjornoya.do.blackshift.org (Postfix) with ESMTPSA id AD6B25E8DB;
	Tue, 31 Jul 2012 09:10:10 +0200 (CEST)
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120713 Thunderbird/14.0
In-Reply-To: <20120731065733.GA30267@gmail.com>
X-Enigmail-Version: 1.4.3
X-SA-Exim-Connect-IP: 2001:6f8:1178:4:5054:ff:fe8d:eefb
X-SA-Exim-Mail-From: mkl@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de); SAEximRunCond expanded to false
X-PTX-Original-Recipient: linux-can@vger.kernel.org
Original-Sender: linux-can-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-can.vger.kernel.org>
X-Mailing-List: linux-can@vger.kernel.org
Xref: news.gmane.org gmane.linux.can:1844 gmane.linux.kernel:1335529
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335529>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enigB633E90602D98D6AD02725E4
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

On 07/31/2012 08:57 AM, Fabio Baltieri wrote:
> Hi Marc,
>=20
> On Mon, Jul 30, 2012 at 11:17:53PM +0200, Marc Kleine-Budde wrote:
>> On 07/30/2012 09:20 PM, Fabio Baltieri wrote:
>>> This patch implements the functions to add two LED triggers, named
>>> <ifname>-tx and <ifname>-rx, to a canbus device driver.
>>>
>>> Triggers are called from specific handlers by each CAN device driver =
and
>>> can be disabled altogether with a Kconfig option.
>>>
>>> The implementation keeps the LED on when the interface is UP and blin=
ks
>>> the LED on network activity at a configurable rate.
>>>
>>> This only supports can-dev based drivers, as it uses some support fie=
ld
>>> in the can_priv structure.
>>>
>>> Supported drivers should call can_led_init(), can_led_exit() and
>>> can_led_event() as needed.
>>>
>>> Supported events are:
>>> - CAN_LED_EVENT_OPEN: turn on tx/rx LEDs
>>> - CAN_LED_EVENT_STOP: turn off tx/rx LEDs
>>> - CAN_LED_EVENT_TX: trigger tx LED blink
>>> - CAN_LED_EVENT_RX: trigger tx LED blink
>>>
>>> Cc: Oliver Hartkopp <socketcan@hartkopp.net>
>>> Cc: Wolfgang Grandegger <wg@grandegger.com>
>>> Cc: Marc Kleine-Budde <mkl@pengutronix.de>
>>> Signed-off-by: Fabio Baltieri <fabio.baltieri@gmail.com>
>>> ---
>>>
>>> Hi all!
>>>
>>> This is the v3 of my CAN LED trigger patch.  It's a major refactoring=
 of the v2
>>> that was discussed about three months ago concluding with the idea th=
at
>>> implementing the oneshot triggering code in the LED framework would b=
e a better
>>> solution.
>>>
>>> This is the old thread for reference:
>>> http://marc.info/?l=3Dlinux-can&m=3D133521499002898&w=3D2
>>>
>>> So, generic oneshot trigger code is now merged in mainline (see 5bb62=
9c), and
>>> these are the changes in the v3:
>>>
>>> - use the new led_trigger_blink_oneshot() function for LED triggering=

>>> - use kasprintf() and led_trigger_{un}register_simple for LED allocat=
ion
>>> - add some usage note in the comments
>>>
>>> The resulting code is quite simple now and - I think - a bit less int=
rusive.
>>> Still, I hope on some feedback from the community as I don't have tha=
t much
>>> hardware to test it - this version has been tested mainly on an x86 w=
ith a
>>> custom usb-can interface.
>>>
>>> In 2/2 there is a sample implementation for the flexcan driver, which=
 is
>>> basically unchanged from the old version.
>>>
>>> Any comments?
>>> Fabio
>>
>> Looks quite clean now. Can you provide a devm implementation, too?
>>
>> Marc
>>>
>>>  drivers/net/can/Kconfig  | 12 ++++++
>>>  drivers/net/can/Makefile |  2 +
>>>  drivers/net/can/led.c    | 99 ++++++++++++++++++++++++++++++++++++++=
++++++++++
>>>  include/linux/can/dev.h  |  8 ++++
>>>  include/linux/can/led.h  | 38 +++++++++++++++++++
>>>  5 files changed, 159 insertions(+)
>>>  create mode 100644 drivers/net/can/led.c
>>>  create mode 100644 include/linux/can/led.h
>>>
>>> diff --git a/drivers/net/can/Kconfig b/drivers/net/can/Kconfig
>>> index bb709fd..19dec19 100644
>>> --- a/drivers/net/can/Kconfig
>>> +++ b/drivers/net/can/Kconfig
>>> @@ -54,6 +54,18 @@ config CAN_CALC_BITTIMING
>>>  	  arguments "tq", "prop_seg", "phase_seg1", "phase_seg2" and "sjw".=

>>>  	  If unsure, say Y.
>>> =20
>>> +config CAN_LEDS
>>> +	bool "Enable LED triggers for Netlink based drivers"
>>> +	depends on CAN_DEV
>>> +	depends on LEDS_CLASS
>>> +	select LEDS_TRIGGERS
>>> +	---help---
>>> +	  This option adds two LED triggers for packet receive and transmit=

>>> +	  events on each supported CAN device.
>>> +
>>> +	  Say Y here if you are working on a system with led-class supporte=
d
>>> +	  LEDs and you want to use them as canbus activity indicators.
>>> +
>>>  config CAN_AT91
>>>  	tristate "Atmel AT91 onchip CAN controller"
>>>  	depends on CAN_DEV && (ARCH_AT91SAM9263 || ARCH_AT91SAM9X5)
>>> diff --git a/drivers/net/can/Makefile b/drivers/net/can/Makefile
>>> index 938be37..24ee98b 100644
>>> --- a/drivers/net/can/Makefile
>>> +++ b/drivers/net/can/Makefile
>>> @@ -8,6 +8,8 @@ obj-$(CONFIG_CAN_SLCAN)		+=3D slcan.o
>>>  obj-$(CONFIG_CAN_DEV)		+=3D can-dev.o
>>>  can-dev-y			:=3D dev.o
>>> =20
>>> +can-dev-$(CONFIG_CAN_LEDS)	+=3D led.o
>>> +
>>>  obj-y				+=3D usb/
>>>  obj-y				+=3D softing/
>>> =20
>>> diff --git a/drivers/net/can/led.c b/drivers/net/can/led.c
>>> new file mode 100644
>>> index 0000000..68c4f30
>>> --- /dev/null
>>> +++ b/drivers/net/can/led.c
>>> @@ -0,0 +1,99 @@
>>> +/*
>>> + * Copyright 2012, Fabio Baltieri <fabio.baltieri@gmail.com>
>>> + *
>>> + * This program is free software; you can redistribute it and/or mod=
ify
>>> + * it under the terms of the GNU General Public License version 2 as=

>>> + * published by the Free Software Foundation.
>>> + */
>>> +
>>> +#include <linux/module.h>
>>> +#include <linux/kernel.h>
>>> +#include <linux/slab.h>
>>> +#include <linux/netdevice.h>
>>> +#include <linux/can/dev.h>
>>> +
>>> +#include <linux/can/led.h>
>>> +
>>> +static unsigned long led_delay =3D 50;
>>> +module_param(led_delay, ulong, 0644);
>>> +MODULE_PARM_DESC(led_delay,
>>> +		"blink delay time for activity leds (msecs, default: 50).");
>>> +
>>> +/*
>>> + * Trigger a LED event in response to a CAN device event
>>> + */
>>> +void can_led_event(struct net_device *netdev, enum can_led_event eve=
nt)
>>> +{
>>> +	struct can_priv *priv =3D netdev_priv(netdev);
>>> +
>>> +	switch (event) {
>>> +	case CAN_LED_EVENT_OPEN:
>>> +		led_trigger_event(priv->tx_led_trig, LED_FULL);
>>> +		led_trigger_event(priv->rx_led_trig, LED_FULL);
>>> +		break;
>>> +	case CAN_LED_EVENT_STOP:
>>> +		led_trigger_event(priv->tx_led_trig, LED_OFF);
>>> +		led_trigger_event(priv->rx_led_trig, LED_OFF);
>>> +		break;
>>> +	case CAN_LED_EVENT_TX:
>>> +		if (led_delay)
>>> +			led_trigger_blink_oneshot(priv->tx_led_trig,
>>> +						  &led_delay, &led_delay, 1);
>>> +		break;
>>> +	case CAN_LED_EVENT_RX:
>>> +		if (led_delay)
>>> +			led_trigger_blink_oneshot(priv->rx_led_trig,
>>> +						  &led_delay, &led_delay, 1);
>>> +		break;
>>> +	}
>>> +}
>>> +EXPORT_SYMBOL_GPL(can_led_event);
>>> +
>>> +/*
>>> + * Register CAN LED triggers for a CAN device
>>> + *
>>> + * This is normally called from a driver's probe function
>>> + */
>>> +void can_led_init(struct net_device *netdev)
>>> +{
>>> +	struct can_priv *priv =3D netdev_priv(netdev);
>>> +
>>> +	priv->tx_led_trig_name =3D kasprintf(GFP_KERNEL, "%s-tx", netdev->n=
ame);
>>> +	if (!priv->tx_led_trig_name)
>>> +		goto tx_led_failed;
>>> +
>>> +	priv->rx_led_trig_name =3D kasprintf(GFP_KERNEL, "%s-rx", netdev->n=
ame);
>>> +	if (!priv->rx_led_trig_name)
>>> +		goto rx_led_failed;
>>> +
>>> +	led_trigger_register_simple(priv->tx_led_trig_name,
>>> +				    &priv->tx_led_trig);
>>> +	led_trigger_register_simple(priv->rx_led_trig_name,
>>> +				    &priv->rx_led_trig);
>>> +
>>> +	return;
>>> +
>>> +rx_led_failed:
>>> +	kfree(priv->tx_led_trig_name);
>>> +	priv->tx_led_trig_name =3D NULL;
>>> +tx_led_failed:
>>> +	return;
>>> +}
>>> +EXPORT_SYMBOL_GPL(can_led_init);
>>
>> Can you provide a devm implementation for can_led?
>=20
> Sounds reasonable, you mean like a devm_kasprintf implementation to
> remove kfree and unwinding code?

IMHO it would be sufficient if you implement the devm cleanup functions
here.

Marc

--=20
Pengutronix e.K.                  | Marc Kleine-Budde           |
Industrial Linux Solutions        | Phone: +49-231-2826-924     |
Vertretung West/Dortmund          | Fax:   +49-5121-206917-5555 |
Amtsgericht Hildesheim, HRA 2686  | http://www.pengutronix.de   |


--------------enigB633E90602D98D6AD02725E4
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAlAXhNEACgkQjTAFq1RaXHOXoQCfeFUHV/4djh9v+eg4Mx7ebBsL
eOQAniL16MydLbYcFuVeH3nqKQ7uKxGF
=CHBc
-----END PGP SIGNATURE-----

--------------enigB633E90602D98D6AD02725E4--
--
To unsubscribe from this list: send the line "unsubscribe linux-can" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

