Path: news.gmane.org!not-for-mail
From: Colin Cross <ccross@android.com>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: Re: [RFC] ARM: sched_clock: update epoch_cyc on resume
Date: Mon, 23 Jul 2012 17:28:32 -0700
Lines: 62
Approved: news@gmane.org
Message-ID: <CAMbhsRQuXsytM9QLwjW1z1E=0XNztXP1xezbcDEj7Ra6deKLDQ@mail.gmail.com>
References: <1342567672-29071-1-git-send-email-ccross@android.com>
	<CACRpkdaHdCvx1HJNDsyJSZAN--sF+4-V1TbzXZL1v+7Asoe_oA@mail.gmail.com>
	<CAMbhsRR2-VjUeL2XPKubeaG=iLV5NE-i_sVYbuMAryXLxsbo1g@mail.gmail.com>
	<CACRpkdYayLaKzUSq5V9N5sRkV74a+nZ1CbLJzRW7RP=pOU9bfw@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343089725 19865 80.91.229.3 (24 Jul 2012 00:28:45 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 00:28:45 +0000 (UTC)
Cc: linux-arm-kernel@lists.infradead.org,
	Russell King <linux@arm.linux.org.uk>,
	Krzysztof Halasa <khc@pm.waw.pl>,
	Nicolas Pitre <nico@linaro.org>,
	Marc Zyngier <marc.zyngier@arm.com>,
	linux-kernel@vger.kernel.org, Thomas Gleixner <tglx@linutronix.de>,
	John Stultz <john.stultz@linaro.org>
To: Linus Walleij <linus.walleij@linaro.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 02:28:44 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StSzT-00073b-Ji
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 02:28:43 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754937Ab2GXA2f (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 23 Jul 2012 20:28:35 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:53275 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752824Ab2GXA2e (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 23 Jul 2012 20:28:34 -0400
Original-Received: by ghrr11 with SMTP id r11so6123705ghr.19
        for <linux-kernel@vger.kernel.org>; Mon, 23 Jul 2012 17:28:33 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record;
        bh=2s23pj3bUpd7xty1dlzPd45lAei7yfGN3KjxydzNfHM=;
        b=mAJ6OKKzwq/beO0ABUcmY8iLgbUdnwovdKOLY6Bjl1abnKjxZxV1ijlPPgAyDVVNeN
         dJBbBVfgF121HONucoTKKSOhN+sgNsRXI4VsiTDwr0wRllGLawmL1zh1gyXhxZJ8C9gg
         ucv3V3ifmHrxPwDETZ4Nwk/23KYRx/YbLqfOhBpz33ojy+LXOPVp4utLkjSNomnoevmU
         NrPgDPB5msOiIvBRr6ZwTkGIvrGZBf0bmx+rcy8QXShh4qW6xW/A+wfG8M5gGxNzEG1R
         7K+ZML5v5ABPnwsz3FtcMjWeqAfpl6zWF2u8UbB2WA0XxpKkKCJPcgdy0EB1aRctJZj2
         o0DA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record:x-gm-message-state;
        bh=2s23pj3bUpd7xty1dlzPd45lAei7yfGN3KjxydzNfHM=;
        b=dP1Sb+HO6nMco5u91gJPcpPVk/3EqkoRSRwPqBaaeTTmdAMVvATV0gNGLjstTJTcmQ
         nrwjSLnHl9xit068F4kgyyE1/7h1m6M+/+skio8I5hPvQ3d7gB4jxvDLoeEdQE7SWBFz
         LmVcPWgIRWXqQi4Lk2F4OXZLzdk9JzNmd4StS33AwyJc7h5T+cXPdreoHQAt6R4vcBkO
         ZVnleioisGv9369aJmZSKUnCed5OiilLSLx/RG7+ZRZiBZN3usPCsZ3rvRAyIEyd/bXE
         nE2t3CoST49pA2sawFKISPX99Oextz4G4dvWNQA52Y3tui87udJkVyDuQd+FQvvToEIc
         z/dQ==
Original-Received: by 10.42.29.4 with SMTP id p4mr10504701icc.30.1343089713014;
        Mon, 23 Jul 2012 17:28:33 -0700 (PDT)
Original-Received: by 10.42.29.4 with SMTP id p4mr10504675icc.30.1343089712813; Mon, 23
 Jul 2012 17:28:32 -0700 (PDT)
Original-Received: by 10.231.184.211 with HTTP; Mon, 23 Jul 2012 17:28:32 -0700 (PDT)
In-Reply-To: <CACRpkdYayLaKzUSq5V9N5sRkV74a+nZ1CbLJzRW7RP=pOU9bfw@mail.gmail.com>
X-Google-Sender-Auth: Ge8JCKAsp8Tkqtcfk2PGG6zSh4o
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQn7u4cHSxllHws8vFl2YXFX7zwGOz/tamEJ/6YUU1O/tMDL+DQ6lBQ1XfCpbB0yw6A9teGvxXNjcBa1TPW7tVWjKZ2IKY06a5MOoW6KnFnbjTbbWQbKiea+mvHGigiGlhipH0ih7ZG6IsWwP7r82pvvK2Jq9Ad+t+ZGj0wNsYEaIjIV4Pw8gCNOlKCTz7QNoCmtmzzm
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332058 gmane.linux.ports.arm.kernel:178495
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332058>

On Mon, Jul 23, 2012 at 5:14 PM, Linus Walleij <linus.walleij@linaro.org> wrote:
> On Mon, Jul 23, 2012 at 9:27 PM, Colin Cross <ccross@android.com> wrote:
>> On Mon, Jul 23, 2012 at 11:55 AM, Linus Walleij
>
>> Does the clock you use for sched_clock continue to run in all suspend
>> modes? All the SoC's I've used only have a 32kHz clock in the deepest
>> suspend mode,
>
> Yes, and yes it is 32kHz.
>
>> which is not ideal for sched_clock.
>
> Not that I know why scheduling with 32kHz is so bad compared to the
> default system scheduling granularity which is HZ if you don't have
> sched_clock() implemented.
>
> Since this seems to be such an important point, what makes you
> want MHz:es for scheduling granularity? To me the biggest impact
> is actually the granularity of the timestamps in the printk:s.
>
> (It's not that I doubt your needs, more curiosity.)

There's a comment somewhere about higher resolution sched_clock
providing fairer scheduling.  With 32 kHz sched_clock, every runtime
measured by the scheduler will be wrong by up to 31.25 us.  Most
systems have a faster clock, and if it's available it seems silly not
to use it.

It's also used for tracing, where 31.25 us resolution is a little low
for function tracing or function graph tracing.

>>  For example, on
>> Tegra2 the faster 1MHz clock used for sched_clock resets in the
>> deepest suspend state (LP0) but not the shallowest suspend state
>> (LP2), and which suspend state the chip hits depends on which hardware
>> is active.  Opting out of this patch would cause Tegra's clock to
>> sometimes run in suspend, and sometimes not, which seems worse for
>> debugging than consistently not running in suspend.  I'd be surprised
>> if a similar situation didn't apply to your platform.
>
> Well being able to switch between different sched_clock() providers
> may be the ideal...
>
>>> - If it absolutely needs to be in the core code, also have a bool
>>>   field indicating whether the clock is going to die during suspend
>>>   and add new registration functions for setting that sched_clock
>>>   type, e.g. setup_sched_clock_nonsuspendable()
>>
>> Sounds reasonable if some platforms need the extra complexity.
>
> OK agreed.
>
> A connecting theme is that of being avle to flag clock sources as
> sched_clock providers. If all clocksources were tagged with
> rating, and only clocksources were used for sched_clock(), the
> kernel could select the highest-rated clock under all circumstances.
>
> But that's quite intrusive, more of an idea. :-P

sched_clock is supposed to be very low overhead compared to ktime_get,
and has some strict  requirements if CONFIG_HAVE_UNSTABLE_SCHED_CLOCK
is not set (see kernel/sched/clock.c), but it might be possible.
