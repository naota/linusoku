Path: news.gmane.org!not-for-mail
From: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [Regression 3.4] tick_broadcast_mask is not restored after a CPU
 has been offline/onlined
Date: Mon, 30 Jul 2012 06:39:13 -0700
Lines: 50
Approved: news@gmane.org
Message-ID: <20120730133913.GK2556@linux.vnet.ibm.com>
References: <20120730151559.772d4055@feng-i7>
Reply-To: paulmck@linux.vnet.ibm.com
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343655742 23877 80.91.229.3 (30 Jul 2012 13:42:22 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 13:42:22 +0000 (UTC)
Cc: "Paul E. McKenney" <paul.mckenney@linaro.org>,
	Len Brown <len.brown@intel.com>,
	"Rafael J. Wysocki" <rjw@sisk.pl>,
	Linux Kernel Mail List <linux-kernel@vger.kernel.org>
To: Feng Tang <feng.tang@intel.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 30 15:42:18 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SvqEg-0003iN-Ks
	for glk-linux-kernel-3@plane.gmane.org; Mon, 30 Jul 2012 15:42:14 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754234Ab2G3NmE (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 30 Jul 2012 09:42:04 -0400
Original-Received: from e36.co.us.ibm.com ([32.97.110.154]:55846 "EHLO
	e36.co.us.ibm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753798Ab2G3NmC (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 30 Jul 2012 09:42:02 -0400
Original-Received: from /spool/local
	by e36.co.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
	for <linux-kernel@vger.kernel.org> from <paulmck@linux.vnet.ibm.com>;
	Mon, 30 Jul 2012 07:42:00 -0600
Original-Received: from d03dlp01.boulder.ibm.com (9.17.202.177)
	by e36.co.us.ibm.com (192.168.1.136) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
	Mon, 30 Jul 2012 07:40:04 -0600
Original-Received: from d03relay04.boulder.ibm.com (d03relay04.boulder.ibm.com [9.17.195.106])
	by d03dlp01.boulder.ibm.com (Postfix) with ESMTP id AA9A11FF0021
	for <linux-kernel@vger.kernel.org>; Mon, 30 Jul 2012 13:39:59 +0000 (WET)
Original-Received: from d03av01.boulder.ibm.com (d03av01.boulder.ibm.com [9.17.195.167])
	by d03relay04.boulder.ibm.com (8.13.8/8.13.8/NCO v10.0) with ESMTP id q6UDdSOY145592
	for <linux-kernel@vger.kernel.org>; Mon, 30 Jul 2012 07:39:31 -0600
Original-Received: from d03av01.boulder.ibm.com (loopback [127.0.0.1])
	by d03av01.boulder.ibm.com (8.14.4/8.13.1/NCO v10.0 AVout) with ESMTP id q6UDdGTe024462
	for <linux-kernel@vger.kernel.org>; Mon, 30 Jul 2012 07:39:17 -0600
Original-Received: from paulmck-ThinkPad-W500 (sig-9-65-32-247.mts.ibm.com [9.65.32.247])
	by d03av01.boulder.ibm.com (8.14.4/8.13.1/NCO v10.0 AVin) with ESMTP id q6UDdFjj024432;
	Mon, 30 Jul 2012 07:39:16 -0600
Original-Received: by paulmck-ThinkPad-W500 (Postfix, from userid 1000)
	id 5E110E4D78; Mon, 30 Jul 2012 06:39:13 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <20120730151559.772d4055@feng-i7>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 12073013-7606-0000-0000-00000269055E
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335059
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335059>

On Mon, Jul 30, 2012 at 03:15:59PM +0800, Feng Tang wrote:
> Hi All,
> 
> When I debugged a suspend/resume bug, I found that tick_broadcast_mask is not
> restored for a CPU after it is offline/onlined since kernel 3.4, while it's
> fine for 3.3.

Could you please try 3.5?

> Further check show it is caused by the commit 9505626d7bfe
>    ACPI: Fix unprotected smp_processor_id() in acpi_processor_cst_has_changed()
> 	
>     The acpi_processor_cst_has_changed() function is invoked from a
>     CPU_ONLINE or CPU_DEAD function, which might well execute on CPU 0
>     even though the CPU being hotplugged is some other CPU.  In addition,
>     acpi_processor_cst_has_changed() invokes smp_processor_id() without
>     protection, resulting in splats when onlining CPUs.
>     
>     This commit therefore changes the smp_processor_id() to pr->id, as is
>     used elsewhere in the code, for example, in acpi_processor_add().
>     
>     Signed-off-by: Paul E. McKenney <paul.mckenney@linaro.org>
> 
> diff --git a/drivers/acpi/processor_idle.c b/drivers/acpi/processor_idle.c
> index 0e8e2de..9e57b06 100644
> --- a/drivers/acpi/processor_idle.c
> +++ b/drivers/acpi/processor_idle.c
> @@ -1159,8 +1159,7 @@ int acpi_processor_cst_has_changed(struct acpi_processor *pr)
>          * to make the code that updates C-States be called once.
>          */
> 
> -       if (smp_processor_id() == 0 &&
> -                       cpuidle_get_driver() == &acpi_idle_driver) {
> +       if (pr->id == 0 && cpuidle_get_driver() == &acpi_idle_driver) {
> 
>                 cpuidle_pause_and_lock();
>                 /* Protect against cpu-hotplug */
> 
> The root cause is acpi_processor_cst_has_changed() will also be called when
> cpu_up() is run on cpu 0 to boot up other cpu, this commit will prevent the
> following code be run for that cpu, which triggers some side effect like the
> broadcast_mask is not restored. 
> 
> I raise this problem up and I don't if revert is a good solution here.

Indeed, that would re-introduce the splats from unprotected use of
smp_processor_id().  :-(

							Thanx, Paul

