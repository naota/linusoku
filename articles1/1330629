Path: news.gmane.org!not-for-mail
From: Dave Chinner <david@fromorbit.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH] xfs: fix comment typo of struct xfs_da_blkinfo.
Date: Fri, 20 Jul 2012 11:52:26 +1000
Lines: 52
Approved: news@gmane.org
Message-ID: <20120720015226.GJ23387@dastard>
References: <20120716151038.GI29979@sgi.com>
 <5292013E-6FF3-47F6-BE9F-FD7BA2BB2AA9@gmail.com>
 <20120717070643.GA4958@infradead.org>
 <20120717.224021.707783566146599004.pcacjr@zytor.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342749175 1448 80.91.229.3 (20 Jul 2012 01:52:55 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 01:52:55 +0000 (UTC)
Cc: hch@infradead.org, baozich@gmail.com, bpm@sgi.com,
	linux-kernel@vger.kernel.org, xfs@oss.sgi.com
To: Paulo Alcantara <pcacjr@zytor.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Jul 20 03:52:53 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Ss2Og-00006N-48
	for glk-linux-kernel-3@plane.gmane.org; Fri, 20 Jul 2012 03:52:50 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752855Ab2GTBwm (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 19 Jul 2012 21:52:42 -0400
Original-Received: from ipmail06.adl2.internode.on.net ([150.101.137.129]:57958 "EHLO
	ipmail06.adl2.internode.on.net" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1752589Ab2GTBwk (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 19 Jul 2012 21:52:40 -0400
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmsKACG5CFB5LBuu/2dsb2JhbABFhQ6zAAOBKoEIgiABAQQBOhwjBQsIAw4GAQMuFCUDIROIBwW+eBSLOIE3hSkDlUOBFIgWhmCCcQ
Original-Received: from ppp121-44-27-174.lns20.syd6.internode.on.net (HELO dastard) ([121.44.27.174])
  by ipmail06.adl2.internode.on.net with ESMTP; 20 Jul 2012 11:22:36 +0930
Original-Received: from dave by dastard with local (Exim 4.76)
	(envelope-from <david@fromorbit.com>)
	id 1Ss2OI-00082N-S6; Fri, 20 Jul 2012 11:52:26 +1000
Content-Disposition: inline
In-Reply-To: <20120717.224021.707783566146599004.pcacjr@zytor.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330629
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330629>

On Tue, Jul 17, 2012 at 10:40:21PM -0300, Paulo Alcantara wrote:
> From: Christoph Hellwig <hch@infradead.org>
> Date: Tue, 17 Jul 2012 03:06:43 -0400
> 
> > Btw, if you need more reviers for the syslinus support feel free to pass
> > it by me (or the list).
> 
> This is the branch I'm maintaing for the XFS readonly driver:
> 
> git://zytor.com/users/pcacjr/syslinux.git (branch: xfs)
> 
> The current status is:
> 
>     - We are able to find the root inode by reading rootino field from
>       superblock (xfs_iget_root() function).
>     - We are able to find inodes that have core's format set to "local" only at
>       the moment, which is by reading leaf entries from inode btrees. The
>       function that looks up for an inode is the xfs_iget() one. We're looking
>       forward to implement the handling of keys in inode btrees (extents) also.
> 
> Baoszi is currently working on the inode btree's key part (extents), and I'm
> working on the data part of the file inode, which is the xfs_next_extent()
> function.
> 
> The xfs_next_extent() function must be able to read the inode (cast to the data
> fork) and populate a structure that stores physical starting number sector and
> number of consecutive sectors that contain the inode's data so that Syslinux
> will know where to read from.

As we discussed on #xfs, I'm still not convinced that parsing the
filesystem metadata in the bootloader is the way to go. Far better,
IMO, is simply to supply the bootloader with a list of extents for
the blocks it needs to read to get the files it needs. You can get
them via fiemap(), and it'll work for XFS, btrfs, ext3, ext4, etc
without needing to write code to parse the on-disk format of every
filesystem.

Especially as we are in the process of making major changes to the
XFS on-disk format, which means you'll have to make significant
changes to support a second XFS disk format in the not-to-distant
future...

> Thanks for the interest in helping us!

We want it to work! ;)

Cheers,

Dave.
-- 
Dave Chinner
david@fromorbit.com
