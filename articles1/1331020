Path: news.gmane.org!not-for-mail
From: Marcelo Tosatti <mtosatti@redhat.com>
Newsgroups: gmane.linux.kernel,gmane.comp.emulators.kvm.devel
Subject: Re: [PATCHv2] kvm: fix race with level interrupts
Date: Fri, 20 Jul 2012 16:04:54 -0300
Lines: 41
Approved: news@gmane.org
Message-ID: <20120720190454.GA24024@amt.cnet>
References: <20120719104520.GA14748@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342812220 26529 80.91.229.3 (20 Jul 2012 19:23:40 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 19:23:40 +0000 (UTC)
Cc: Avi Kivity <avi@redhat.com>, gleb@redhat.com, kvm@vger.kernel.org,
	linux-kernel@vger.kernel.org
To: "Michael S. Tsirkin" <mst@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Jul 20 21:23:37 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SsInR-00072H-LE
	for glk-linux-kernel-3@plane.gmane.org; Fri, 20 Jul 2012 21:23:30 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753561Ab2GTTW5 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 20 Jul 2012 15:22:57 -0400
Original-Received: from mx1.redhat.com ([209.132.183.28]:54918 "EHLO mx1.redhat.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753337Ab2GTTWy (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Fri, 20 Jul 2012 15:22:54 -0400
Original-Received: from int-mx09.intmail.prod.int.phx2.redhat.com (int-mx09.intmail.prod.int.phx2.redhat.com [10.5.11.22])
	by mx1.redhat.com (8.14.4/8.14.4) with ESMTP id q6KJMsB5001784
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Fri, 20 Jul 2012 15:22:54 -0400
Original-Received: from amt.cnet (vpn1-7-169.ams2.redhat.com [10.36.7.169])
	by int-mx09.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with ESMTP id q6KJMqf3016570;
	Fri, 20 Jul 2012 15:22:53 -0400
Original-Received: from amt.cnet (amt.cnet [127.0.0.1])
	by amt.cnet (Postfix) with ESMTP id 7518368A2AF;
	Fri, 20 Jul 2012 16:04:57 -0300 (BRT)
Original-Received: (from marcelo@localhost)
	by amt.cnet (8.14.5/8.14.5/Submit) id q6KJ4tvH024385;
	Fri, 20 Jul 2012 16:04:55 -0300
Content-Disposition: inline
In-Reply-To: <20120719104520.GA14748@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.22
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331020 gmane.comp.emulators.kvm.devel:94792
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331020>

On Thu, Jul 19, 2012 at 01:45:20PM +0300, Michael S. Tsirkin wrote:
> When more than 1 source id is in use for the same GSI, we have the
> following race related to handling irq_states race:
> 
> CPU 0 clears bit 0. CPU 0 read irq_state as 0. CPU 1 sets level to 1.
> CPU 1 calls kvm_ioapic_set_irq(1). CPU 0 calls kvm_ioapic_set_irq(0).
> Now ioapic thinks the level is 0 but irq_state is not 0.
> 
> Fix by performing all irq_states bitmap handling under pic/ioapic lock.
> This also removes the need for atomics with irq_states handling.
> 
> Reported-by: Gleb Natapov <gleb@redhat.com>
> Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
> ---

Applied, thanks.

> Changes from v1:
> 	Address comments by Gleb and Alex:
> 		renamed some variables for clarify
> 		renamed kvm_irq_line_state ->  __kvm_irq_line_state
> 
> Any chance we can put this in 3.5? I know level IRQs are not widely
> used, which is likely why this went unnoticed for so long, but still ...

http://yarchive.net/comp/linux/merge_window.html

"From: Linus Torvalds <torvalds@linux-foundation.org>

The thing is, I don't take bug fixes late in the -rc just because they
are bug fixes.

And I really shouldn't.

If it's an old bug, and doesn't cause an oops or a security issue, it
had damn well better wait for the next merge window. There is absolutely
_no_ reason to just blindly "fix bugs" at the end of the rc stage,
because quite frankly, the risks coming from fixing a bug is often
bigger than the advantage.
"

