Path: news.gmane.org!not-for-mail
From: Lee Jones <lee.jones@linaro.org>
Newsgroups: gmane.linux.alsa.devel,gmane.linux.ports.arm.kernel,gmane.linux.kernel
Subject: [PATCH 02/19] ASoC: Ux500: Enable MOP500 driver for
	Device Tree
Date: Tue, 31 Jul 2012 14:38:56 +0100
Lines: 87
Approved: news@gmane.org
Message-ID: <1343741953-17828-3-git-send-email-lee.jones@linaro.org>
References: <1343741953-17828-1-git-send-email-lee.jones@linaro.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343741996 3083 80.91.229.3 (31 Jul 2012 13:39:56 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 13:39:56 +0000 (UTC)
Cc: STEricsson_nomadik_linux@list.st.com, Lee Jones <lee.jones@linaro.org>,
 linus.walleij@stericsson.com, arnd@arndb.de
To: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
 olalilja@yahoo.se, ola.o.lilja@stericsson.com, alsa-devel@alsa-project.org,
 lrg@ti.com, broonie@opensource.wolfsonmicro.com
Original-X-From: alsa-devel-bounces@alsa-project.org Tue Jul 31 15:39:55 2012
Return-path: <alsa-devel-bounces@alsa-project.org>
Envelope-to: glad-alsa-devel-2@m.gmane.org
Original-Received: from alsa0.perex.cz ([77.48.224.243])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <alsa-devel-bounces@alsa-project.org>)
	id 1SwCfw-00054P-Gz
	for glad-alsa-devel-2@m.gmane.org; Tue, 31 Jul 2012 15:39:52 +0200
Original-Received: by alsa0.perex.cz (Postfix, from userid 1000)
	id E8424265DB0; Tue, 31 Jul 2012 15:39:38 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on mail1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.0 required=5.0 tests=RCVD_IN_DNSWL_MED,SPF_FAIL
	autolearn=disabled version=3.2.4
Original-Received: from alsa0.perex.cz (localhost [IPv6:::1])
	by alsa0.perex.cz (Postfix) with ESMTP id 17AA6265D69;
	Tue, 31 Jul 2012 15:39:30 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Original-Received: by alsa0.perex.cz (Postfix, from userid 1000)
 id B8DB2265D34; Tue, 31 Jul 2012 15:39:26 +0200 (CEST)
Original-Received: from mail-wi0-f173.google.com (mail-wi0-f173.google.com
 [209.85.212.173])
 by alsa0.perex.cz (Postfix) with ESMTP id 7253A265D0C
 for <alsa-devel@alsa-project.org>; Tue, 31 Jul 2012 15:39:23 +0200 (CEST)
Original-Received: by mail-wi0-f173.google.com with SMTP id hm6so2372350wib.2
 for <alsa-devel@alsa-project.org>; Tue, 31 Jul 2012 06:39:25 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
 :x-gm-message-state;
 bh=3g/ZWsHF8KGtFFGDk5pUgCUf/Htwaxy3vwRn6RkyUAw=;
 b=U59MATk+Ly+IO6dMEb94NfL+QaEYvdbKEKpXDpTfWqv2BRapCxQdfqaJq+q++zbFM7
 DAFY/ClF1JWNgcu2yYpXTOCUSJQOHe8EV/RM5cYjxMyZWNx0h8wFjxD1m1RwXNqcTG0F
 ZwT4o3SaXtQ4gH0a1eUm8jRnt/Hp6WurKn3p2M+5Z6H7v47ZVGlothvBSxg3vUywsaXa
 LnVz7DJrXFOPJqGnlUvqL44P3+o8OjYeHmqCBymsUmGOri37NtLJK7SUh0yj12CW4zLm
 ELkItmLdccNZPLFBoHfC2jYNYgw4NfN4Kw8XpU0wd7F/ANoVtsxRk2/Y1Egxy9lCrKc1
 73Sg==
Original-Received: by 10.180.107.103 with SMTP id hb7mr7031665wib.3.1343741965788;
 Tue, 31 Jul 2012 06:39:25 -0700 (PDT)
Original-Received: from localhost.localdomain
 (cpc1-aztw13-0-0-cust473.18-1.cable.virginmedia.com. [77.102.241.218])
 by mx.google.com with ESMTPS id el6sm22252911wib.8.2012.07.31.06.39.24
 (version=TLSv1/SSLv3 cipher=OTHER);
 Tue, 31 Jul 2012 06:39:25 -0700 (PDT)
X-Mailer: git-send-email 1.7.9.5
In-Reply-To: <1343741953-17828-1-git-send-email-lee.jones@linaro.org>
X-Gm-Message-State: ALoCoQm3QNSCdrlOIGYvK757PKD+l8gBdXQl1bfhiWkXcQENeKkBWQEWOKERA4lmSMAE6gpr38Qs
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <http://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <http://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Original-Sender: alsa-devel-bounces@alsa-project.org
Xref: news.gmane.org gmane.linux.alsa.devel:99466 gmane.linux.ports.arm.kernel:179593 gmane.linux.kernel:1335711
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335711>

Here we ensure that the MOP500 audio driver will be probed during a
Device Tree boot. We also parse the sound node to link together the
codec, dma and the CPU-side Digital Audio Interface.

Signed-off-by: Lee Jones <lee.jones@linaro.org>
---
 sound/soc/ux500/mop500.c |   38 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

diff --git a/sound/soc/ux500/mop500.c b/sound/soc/ux500/mop500.c
index 31c4d26..821f2a9 100644
--- a/sound/soc/ux500/mop500.c
+++ b/sound/soc/ux500/mop500.c
@@ -16,6 +16,7 @@
 #include <linux/module.h>
 #include <linux/io.h>
 #include <linux/spi/spi.h>
+#include <linux/of.h>
 
 #include <sound/soc.h>
 #include <sound/initval.h>
@@ -56,14 +57,45 @@ static struct snd_soc_card mop500_card = {
 	.num_links = ARRAY_SIZE(mop500_dai_links),
 };
 
+static int __devinit mop500_of_probe(struct platform_device *pdev,
+				struct device_node *np)
+{
+	struct device_node *codec_np, *msp_np[2];
+	int i;
+
+	msp_np[0] = of_parse_phandle(np, "stericsson,cpu-dai", 0);
+	msp_np[1] = of_parse_phandle(np, "stericsson,cpu-dai", 1);
+	codec_np  = of_parse_phandle(np, "stericsson,audio-codec", 0);
+
+	if (!(msp_np[0] && msp_np[1] && codec_np)) {
+		dev_err(&pdev->dev, "Phandle missing or invalid\n");
+		return -EINVAL;
+	}
+
+	for (i = 0; i < 2; i++) {
+		mop500_dai_links[i].cpu_of_node = msp_np[i];
+		mop500_dai_links[i].cpu_dai_name = NULL;
+		mop500_dai_links[i].codec_of_node = codec_np;
+		mop500_dai_links[i].codec_name = NULL;
+	}
+
+	return 0;
+}
 static int __devinit mop500_probe(struct platform_device *pdev)
 {
+	struct device_node *np = pdev->dev.of_node;
 	int ret;
 
 	pr_debug("%s: Enter.\n", __func__);
 
 	dev_dbg(&pdev->dev, "%s: Enter.\n", __func__);
 
+	if (np) {
+		ret = mop500_of_probe(pdev, np);
+		if (ret)
+			return ret;
+	}
+
 	mop500_card.dev = &pdev->dev;
 
 	dev_dbg(&pdev->dev, "%s: Card %s: Set platform drvdata.\n",
@@ -101,10 +133,16 @@ static int __devexit mop500_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static const struct of_device_id snd_soc_mop500_match[] = {
+	{ .compatible = "stericsson,snd-soc-mop500", },
+	{},
+};
+
 static struct platform_driver snd_soc_mop500_driver = {
 	.driver = {
 		.owner = THIS_MODULE,
 		.name = "snd-soc-mop500",
+		.of_match_table = snd_soc_mop500_match,
 	},
 	.probe = mop500_probe,
 	.remove = __devexit_p(mop500_remove),
-- 
1.7.9.5

