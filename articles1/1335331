Path: news.gmane.org!not-for-mail
From: Dave Chinner <david@fromorbit.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 1/1] xfs: check for possible overflow in xfs_ioc_trim
Date: Tue, 31 Jul 2012 07:49:46 +1000
Lines: 43
Approved: news@gmane.org
Message-ID: <20120730214946.GG2877@dastard>
References: <1343636024-20123-1-git-send-email-tracek@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1343685005 22025 80.91.229.3 (30 Jul 2012 21:50:05 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 21:50:05 +0000 (UTC)
Cc: linux-xfs@vger.kernel.org, lczerner@redhat.com,
	Ben Myers <bpm@sgi.com>, Alex Elder <elder@kernel.org>,
	"supporter:XFS FILESYSTEM" <xfs@oss.sgi.com>,
	open list <linux-kernel@vger.kernel.org>
To: Tomas Racek <tracek@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 30 23:50:04 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Svxqj-0000ZO-S2
	for glk-linux-kernel-3@plane.gmane.org; Mon, 30 Jul 2012 23:50:02 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754963Ab2G3Vty (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 30 Jul 2012 17:49:54 -0400
Original-Received: from ipmail06.adl6.internode.on.net ([150.101.137.145]:52867 "EHLO
	ipmail06.adl6.internode.on.net" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1754698Ab2G3Vtu (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 30 Jul 2012 17:49:50 -0400
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqQMAD0AF1B5LJQK/2dsb2JhbABFuE4BAoEHgQiCIAEBBAEnExwjBQsIAw4KLhQlAyETiAcFuxcUizyBABWBBYRvA5VIiSyGYoJx
Original-Received: from ppp121-44-148-10.lns20.syd7.internode.on.net (HELO dastard) ([121.44.148.10])
  by ipmail06.adl6.internode.on.net with ESMTP; 31 Jul 2012 07:19:48 +0930
Original-Received: from dave by dastard with local (Exim 4.76)
	(envelope-from <david@fromorbit.com>)
	id 1SvxqU-0003eW-Mo; Tue, 31 Jul 2012 07:49:46 +1000
Content-Disposition: inline
In-Reply-To: <1343636024-20123-1-git-send-email-tracek@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335331
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335331>

On Mon, Jul 30, 2012 at 10:13:44AM +0200, Tomas Racek wrote:
> If range.start argument was between ULLONG_MAX - BBSIZE and ULLONG_MAX,
> BTOBB macro resulted in overflow which caused start to be set to 0.
> Now, invalid argument error is returned instead.
> 
> Signed-off-by: Tomas Racek <tracek@redhat.com>
> ---
>  fs/xfs/xfs_discard.c |    4 ++++
>  1 files changed, 4 insertions(+), 0 deletions(-)
> 
> diff --git a/fs/xfs/xfs_discard.c b/fs/xfs/xfs_discard.c
> index f9c3fe3..0ef7dd4 100644
> --- a/fs/xfs/xfs_discard.c
> +++ b/fs/xfs/xfs_discard.c
> @@ -179,6 +179,10 @@ xfs_ioc_trim(
>  	 * used by the fstrim application.  In the end it really doesn't
>  	 * matter as trimming blocks is an advisory interface.
>  	 */
> +
> +	if (range.start > ULLONG_MAX - BBSIZE)
> +		return -XFS_ERROR(EINVAL);
> +

There's no point checking for overflow on the range start - what we
need to check is whether it is larger than the size of the
filesystem. We do that after the conversion of range.start to basic
blocks, so that check needs to be promoted to before this. i.e.

	if (range.start >= XFS_FSB_TO_B(mp, mp->m_sb.sb_dblocks))
		return -XFS_ERROR(EINVAL);

>  	start = BTOBB(range.start);
>  	end = start + BTOBBT(range.len) - 1;
>  	minlen = BTOBB(max_t(u64, granularity, range.minlen));

And that will prevent the overflow in BTOBB() just as effectively...

Cheers,

Dave.
-- 
Dave Chinner
david@fromorbit.com
