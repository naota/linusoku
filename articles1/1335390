Path: news.gmane.org!not-for-mail
From: Jianbin Kang <kjbmail@gmail.com>
Newsgroups: gmane.linux.kernel.pci,gmane.linux.kernel,gmane.linux.network
Subject: Re: [RFC v2 1/2] PCI-Express Non-Transparent Bridge Support
Date: Tue, 31 Jul 2012 11:35:33 +0800
Lines: 16
Approved: news@gmane.org
Message-ID: <CAF8raN6M0_TWyCCzjyXZcFYP=vgFaqQg4hNmNpBxSM+D0C_Bpg@mail.gmail.com>
References: <1343607994-32415-1-git-send-email-jon.mason@intel.com>
	<1343607994-32415-2-git-send-email-jon.mason@intel.com>
	<CAErSpo4p_hxvCeVGqiTXVq3itXepheQZerpqRHwLvG6A7R2Lcg@mail.gmail.com>
	<20120730181542.GA987@jonmason-lab>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343705739 27131 80.91.229.3 (31 Jul 2012 03:35:39 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 03:35:39 +0000 (UTC)
Cc: Bjorn Helgaas <bhelgaas@google.com>, linux-kernel@vger.kernel.org,
	netdev@vger.kernel.org, linux-pci@vger.kernel.org,
	Dave Jiang <dave.jiang@intel.com>
To: Jon Mason <jon.mason@intel.com>
Original-X-From: linux-pci-owner@vger.kernel.org Tue Jul 31 05:35:38 2012
Return-path: <linux-pci-owner@vger.kernel.org>
Envelope-to: glp-linux-pci@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-pci-owner@vger.kernel.org>)
	id 1Sw3FB-0004fP-Je
	for glp-linux-pci@plane.gmane.org; Tue, 31 Jul 2012 05:35:37 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754820Ab2GaDff (ORCPT <rfc822;glp-linux-pci@m.gmane.org>);
	Mon, 30 Jul 2012 23:35:35 -0400
Original-Received: from mail-vc0-f174.google.com ([209.85.220.174]:41541 "EHLO
	mail-vc0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754123Ab2GaDfe (ORCPT
	<rfc822;linux-pci@vger.kernel.org>); Mon, 30 Jul 2012 23:35:34 -0400
Original-Received: by vcbfk26 with SMTP id fk26so5395908vcb.19
        for <multiple recipients>; Mon, 30 Jul 2012 20:35:34 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=xURozhL6GQHnM6hF3kyhQsPN6oI7Ek/J3m1TkaYJiPg=;
        b=vAIZFeKU4EeRxSYTYZCSnRFjjj8XOiJypppW35hJ4uaskcxkx/I/ZqNIXM1yydeWHy
         f8poBN2gX1jr/Pacq2nTeCxQyIPlTpcZR7wyh1IBz3yCZQdJhsdeYi2H7/+STX8MI6fQ
         pkP+E8Et7a3kkjhl26nV+HY+rBYD6v9gbCg5TkfhCqitYeeSBUzNIGvXS7Tz4mNUEFft
         jfS9KkRj7S2OSrqFYO97QuowOK+mUUG/5zSw5Qhsi2+dl+2zdUihyiMvrv95GgLKwd3/
         m+obPfZxrKjpEecsDVrF1UjtyAhaT32ZCG2/aDbUJ9h4rTslwZ7wZ3/IzmjE2SsD8Z10
         J6hQ==
Original-Received: by 10.52.67.134 with SMTP id n6mr11460305vdt.23.1343705734021; Mon,
 30 Jul 2012 20:35:34 -0700 (PDT)
Original-Received: by 10.52.90.35 with HTTP; Mon, 30 Jul 2012 20:35:33 -0700 (PDT)
In-Reply-To: <20120730181542.GA987@jonmason-lab>
Original-Sender: linux-pci-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-pci.vger.kernel.org>
X-Mailing-List: linux-pci@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel.pci:16720 gmane.linux.kernel:1335390 gmane.linux.network:238767
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335390>

> I've tried to make it all generic enough that non-Intel NTBs should plug in with
> minimal changes to ntb_hw.c.  If their design is too divergent, then a slight
> redesign of ntb_hw.c might be necessary.  But from what I've seen of other
> designs on the internet, they appear to be extremely similar.  The transport and
> client drivers were written with the hardware abstracted away as much as
> possible to prevent the need to modify it for different hardware.  If there is
> anything which is Intel hardware specific, I'd be happy to change it to make it
> more generic.
  In ntb_process_tx(), ntb uses hard-coding 'memcpy_toio' to copy data
to remote.
  Is it better to provide a function pointer like 'tx()' and call qp->tx().
  memcpy_toio is a slow operation. Some hardware can setup a dma
transfer and wait.

  IMHO, the best way is to handle tx in async mode. But it requires
lots of modification.
