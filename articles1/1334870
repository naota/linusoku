Path: news.gmane.org!not-for-mail
From: David Ahern <dsahern@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH] perf tool: save cmdline from user in file header vs what is passed to record
Date: Sun, 29 Jul 2012 20:53:51 -0600
Lines: 92
Approved: news@gmane.org
Message-ID: <1343616831-6408-1-git-send-email-dsahern@gmail.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343616853 30231 80.91.229.3 (30 Jul 2012 02:54:13 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 02:54:13 +0000 (UTC)
Cc: David Ahern <dsahern@gmail.com>,
	Arnaldo Carvalho de Melo <acme@redhat.com>,
	Ingo Molnar <mingo@kernel.org>, Jiri Olsa <jolsa@redhat.com>,
	Namhyung Kim <namhyung@gmail.com>,
	Stephane Eranian <eranian@google.com>,
	Frederic Weisbecker <fweisbec@gmail.com>,
	Peter Zijlstra <peterz@infradead.org>
To: acme@ghostprotocols.net, linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 30 04:54:11 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Svg7W-0003pl-HB
	for glk-linux-kernel-3@plane.gmane.org; Mon, 30 Jul 2012 04:54:10 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754064Ab2G3CyF (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 29 Jul 2012 22:54:05 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:42408 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754022Ab2G3Cx4 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 29 Jul 2012 22:53:56 -0400
Original-Received: by pbbrp8 with SMTP id rp8so9031186pbb.19
        for <linux-kernel@vger.kernel.org>; Sun, 29 Jul 2012 19:53:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer;
        bh=s1ume01R1Dmoae7toO+dnEg6d2AxH+3s8SBqY531SKQ=;
        b=I81P0+HOycru6HwbqobEXqF0ewcNa4ozQI5epo2ArqeaThJMT14J8GgIw5+hNoNvUu
         +joqPj1kahgS4FK0L6pZ7HlqtWTUs2Y8jdd76OYVMFL3z9qjdZH84ekiE2f+ZXZbJusM
         CIYEDJ7DymF3ikmrg+tu5ZJVyATRd+5S+eb2Mbtp5T2tl1IvDwpoIvANLuThA4gD0f6K
         hDyikfks5AxpsgFyP2A18dhXScR7OexNWYcQcrj6EIp8mVolqRP7vY5cN8E385vrD8AT
         Enmx5D0duG7Bmech3RP4tyVbmgaqiE9Was30ojift6dwg7RgRdJ7N6C7CDkguluyOc70
         cDgw==
Original-Received: by 10.68.134.105 with SMTP id pj9mr27141373pbb.136.1343616836538;
        Sun, 29 Jul 2012 19:53:56 -0700 (PDT)
Original-Received: from sjc-daahern-8912.cisco.com (128-107-239-233.cisco.com. [128.107.239.233])
        by mx.google.com with ESMTPS id pe2sm6918576pbc.59.2012.07.29.19.53.54
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 29 Jul 2012 19:53:56 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1334870
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334870>

A number of builtin commands process some user args and then pass the rest to
cmd_record. cmd_record then saves argc/argv that it receives into the header of
the perf data file. But this loses the arguments handled by the first command
-- ie., the real command line from the user. This patch saves the command line
as typed by the user rather than what was passed to cmd_record.

As an example consider the command:
$ perf kvm --guest --host --guestmount=/tmp/guest-mount record
    -fo /tmp/perf.data -ag -- sleep 10

Currently the command saved to the header is:
    cmdline : /tmp/p3.5/perf record -o perf.data.kvm -fo /tmp/perf.data -ag -- sleep 1

(ignore the duplicated -o -- the first would be yet another bug with perf-kvm).

With this patch the command line saved to the header is:
cmdline : /tmp/p3.5/perf kvm --guest --host --guestmount=/tmp/guest-mount
    record -fo /tmp/perf.data -ag -- sleep 1

v2: simplified to saving the command in parse_options per Stephane's suggestion

Signed-off-by: David Ahern <dsahern@gmail.com>
CC: Arnaldo Carvalho de Melo <acme@redhat.com>
Cc: Ingo Molnar <mingo@kernel.org>
Cc: Jiri Olsa <jolsa@redhat.com>
Cc: Namhyung Kim <namhyung@gmail.com>
Cc: Stephane Eranian <eranian@google.com>
Cc: Frederic Weisbecker <fweisbec@gmail.com>
Cc: Peter Zijlstra <peterz@infradead.org>
---
 tools/perf/builtin-record.c     |    2 --
 tools/perf/util/header.c        |    9 +++++++++
 tools/perf/util/parse-options.c |    3 +++
 3 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
index f5a6452..77adcd8 100644
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@ -844,8 +844,6 @@ int cmd_record(int argc, const char **argv, const char *prefix __used)
 	struct perf_record *rec = &record;
 	char errbuf[BUFSIZ];
 
-	perf_header__set_cmdline(argc, argv);
-
 	evsel_list = perf_evlist__new(NULL, NULL);
 	if (evsel_list == NULL)
 		return -ENOMEM;
diff --git a/tools/perf/util/header.c b/tools/perf/util/header.c
index 3a6d204..74ea3c2 100644
--- a/tools/perf/util/header.c
+++ b/tools/perf/util/header.c
@@ -174,6 +174,15 @@ perf_header__set_cmdline(int argc, const char **argv)
 {
 	int i;
 
+	/*
+	 * If header_argv has already been set, do not override it.
+	 * This allows a command to set the cmdline, parse args and
+	 * then call another builtin function that implements a
+	 * command -- e.g, cmd_kvm calling cmd_record.
+	 */
+	if (header_argv)
+		return 0;
+
 	header_argc = (u32)argc;
 
 	/* do not include NULL termination */
diff --git a/tools/perf/util/parse-options.c b/tools/perf/util/parse-options.c
index 99d02aa..594f8fa 100644
--- a/tools/perf/util/parse-options.c
+++ b/tools/perf/util/parse-options.c
@@ -1,6 +1,7 @@
 #include "util.h"
 #include "parse-options.h"
 #include "cache.h"
+#include "header.h"
 
 #define OPT_SHORT 1
 #define OPT_UNSET 2
@@ -413,6 +414,8 @@ int parse_options(int argc, const char **argv, const struct option *options,
 {
 	struct parse_opt_ctx_t ctx;
 
+	perf_header__set_cmdline(argc, argv);
+
 	parse_options_start(&ctx, argc, argv, flags);
 	switch (parse_options_step(&ctx, options, usagestr)) {
 	case PARSE_OPT_HELP:
-- 
1.7.10.1

