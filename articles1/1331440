Path: news.gmane.org!not-for-mail
From: Sasha Levin <levinsasha928@gmail.com>
Newsgroups: gmane.comp.emulators.qemu,gmane.comp.emulators.kvm.devel,gmane.linux.kernel
Subject: Re: [PATCH v7] kvm: notify host when the guest is
	panicked
Date: Mon, 23 Jul 2012 01:35:29 +0200
Lines: 83
Approved: news@gmane.org
Message-ID: <500C8E41.9040109@gmail.com>
References: <500A565A.8080403@cn.fujitsu.com> <500A8969.1040300@gmail.com>
	<87txwzwqgt.fsf@codemonkey.ws> <500C604B.3080800@gmail.com>
	<500C6333.6010609@gmail.com> <87wr1vctv3.fsf@codemonkey.ws>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343000114 1149 80.91.229.3 (22 Jul 2012 23:35:14 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 22 Jul 2012 23:35:14 +0000 (UTC)
Cc: kvm list <kvm@vger.kernel.org>, Jan Kiszka <jan.kiszka@siemens.com>,
	"linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
	Gleb Natapov <gleb@redhat.com>,
	qemu-devel <qemu-devel@nongnu.org>, Avi Kivity <avi@redhat.com>,
	KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
To: Anthony Liguori <anthony@codemonkey.ws>
Original-X-From: qemu-devel-bounces+gceq-qemu-devel=gmane.org@nongnu.org Mon Jul 23 01:35:12 2012
Return-path: <qemu-devel-bounces+gceq-qemu-devel=gmane.org@nongnu.org>
Envelope-to: gceq-qemu-devel@gmane.org
Original-Received: from lists.gnu.org ([208.118.235.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <qemu-devel-bounces+gceq-qemu-devel=gmane.org@nongnu.org>)
	id 1St5g7-0006wf-7d
	for gceq-qemu-devel@gmane.org; Mon, 23 Jul 2012 01:35:11 +0200
Original-Received: from localhost ([::1]:33169 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+gceq-qemu-devel=gmane.org@nongnu.org>)
	id 1St5g6-0003Q6-Bq
	for gceq-qemu-devel@gmane.org; Sun, 22 Jul 2012 19:35:10 -0400
Original-Received: from eggs.gnu.org ([208.118.235.92]:37498)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <levinsasha928@gmail.com>) id 1St5g1-0003OD-2L
	for qemu-devel@nongnu.org; Sun, 22 Jul 2012 19:35:06 -0400
Original-Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <levinsasha928@gmail.com>) id 1St5fz-0007GB-Gg
	for qemu-devel@nongnu.org; Sun, 22 Jul 2012 19:35:05 -0400
Original-Received: from mail-we0-f173.google.com ([74.125.82.173]:64721)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <levinsasha928@gmail.com>) id 1St5fz-0007FE-6b
	for qemu-devel@nongnu.org; Sun, 22 Jul 2012 19:35:03 -0400
Original-Received: by weyz53 with SMTP id z53so3937756wey.4
	for <qemu-devel@nongnu.org>; Sun, 22 Jul 2012 16:35:02 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
	h=message-id:date:from:user-agent:mime-version:to:cc:subject
	:references:in-reply-to:content-type:content-transfer-encoding;
	bh=v7wJKWPMjxMvklUM63bJhUr2rIf0C4MYi/egcR+BIzU=;
	b=UPDMmbzEIvk/qgycXZRk5Am7eZ3n56h6NUz9LuqEu3FTiDuVmAaLrrCMdqXrYMC8BU
	k3KYRw2NX90Rcz+T3ho2ZHhQjU1aZWeTy2zdUYJCga/Y7puNDw+xZFStIWWUkT8tgZiG
	009HGLhAjXzoNBAjugZdXPzSukXBvX+kpYQpUmZZHhMd2kmTH6zKrXtQk39vjbSlBh7Z
	retZEpKVmQmLdcjqrmai0oAxub6FvgC+6q0v0o6jHbpqMDZQ701lLi0+KpcIol8GSY+1
	aYaO6MkP69geewZCc5XdRnyxwMLrHrTw+OWYPoUjJ5pSOP+/EuAvgIYI9rjKgiTj+xj+
	kk8w==
Original-Received: by 10.180.105.130 with SMTP id gm2mr43333389wib.6.1343000102434;
	Sun, 22 Jul 2012 16:35:02 -0700 (PDT)
Original-Received: from [192.168.42.79] ([2.192.50.251])
	by mx.google.com with ESMTPS id t8sm13935856wiy.3.2012.07.22.16.34.59
	(version=SSLv3 cipher=OTHER); Sun, 22 Jul 2012 16:35:01 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64;
	rv:13.0) Gecko/20120713 Thunderbird/13.0
In-Reply-To: <87wr1vctv3.fsf@codemonkey.ws>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 74.125.82.173
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+gceq-qemu-devel=gmane.org@nongnu.org
Original-Sender: qemu-devel-bounces+gceq-qemu-devel=gmane.org@nongnu.org
Xref: news.gmane.org gmane.comp.emulators.qemu:161093 gmane.comp.emulators.kvm.devel:94864 gmane.linux.kernel:1331440
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331440>

On 07/23/2012 12:29 AM, Anthony Liguori wrote:
> Sasha Levin <levinsasha928@gmail.com> writes:
> 
>> On 07/22/2012 10:19 PM, Sasha Levin wrote:
>>> On 07/22/2012 09:22 PM, Anthony Liguori wrote:
>>>> Sasha Levin <levinsasha928@gmail.com> writes:
>>>>
>>>>> On 07/21/2012 09:12 AM, Wen Congyang wrote:
>>>>>> +#define KVM_PV_PORT	(0x505UL)
>>>>>> +
>>>>>>  #ifdef __KERNEL__
>>>>>>  #include <asm/processor.h>
>>>>>>  
>>>>>> @@ -221,6 +223,11 @@ static inline void kvm_disable_steal_time(void)
>>>>>>  }
>>>>>>  #endif
>>>>>>  
>>>>>> +static inline unsigned int kvm_arch_pv_features(void)
>>>>>> +{
>>>>>> +	return inl(KVM_PV_PORT);
>>>>>> +}
>>>>>> +
>>>>>
>>>>> Why is this safe?
>>>>>
>>>>> I'm not sure you can just pick any ioport you'd like and use it.
>>>>
>>>> There are three ways I/O ports get used on a PC:
>>>>
>>>> 1) Platform devices
>>>>  - This is well defined since the vast majority of platform devices are
>>>>    implemented within a single chip.  If you're emulating an i440fx
>>>>    chipset, the PIIX4 spec has an exhaustive list.
>>>>
>>>> 2) PCI devices
>>>>  - Typically, PCI only allocates ports starting at 0x0d00 to avoid
>>>>    conflicts with ISA devices.
>>>>
>>>> 3) ISA devices
>>>>  - ISA uses subtractive decoding so any ISA device can access.  In
>>>>    theory, an ISA device could attempt to use port 0x0505 but it's
>>>>    unlikely.  In a modern guest, there aren't really any ISA devices being
>>>>    added either.
>>>>
>>>> So yes, picking port 0x0505 is safe for something like this (as long as
>>>> you check to make sure that you really are under KVM).
>>>
>>> Is there anything that actually prevents me from using PCI ports lower than 0x0d00? As you said in (3), ISA isn't really used anymore (nor is implemented by lkvm for example), so placing PCI below 0x0d00 might even make sense in that case.
>>>
>>> Furthermore, I can place one of these brand new virtio-mmio devices which got introduced recently wherever I want right now - Having a device that uses 0x505 would cause a pretty non-obvious failure mode.
>>>
>>> Either way, If we are going to grab an ioport, then:
>>>
>>>  - It should be documented well somewhere in Documentation/virt/kvm
>>>  - It should go through request_region() to actually claim those ioports.
>>>  - It should fail gracefully if that port is taken for some reason, instead of not even checking it.
>>>
>>
>> Out of curiosity I tested that, and apparently lkvm has no problem allocating virtio-pci devices in that range:
>>
>> sh-4.2# pwd
>> /sys/devices/pci0000:00/0000:00:01.0
>> sh-4.2# cat resource | head -n1
>> 0x0000000000000500 0x00000000000005ff 0x0000000000040101
>>
>> This was with the commit in question applied.
> 
> With all due respect, lkvm has a half-baked implementation of PCI.  This
> is why you have to pass kernel parameters to disable ACPI and disable
> PCI BIOS probing.
> 
> So yeah, you can do funky things in lkvm but that doesn't mean a system
> that emulated actual hardware would ever do that.

We disable ACPI simply because we don't support it. MPtable is a perfectly valid mechanism to do everything we need so far, so implementing ACPI didn't interest either of us too much. What's more - why implement a "complete design disaster in every way" ;)

Regarding PCI probing, while we do force the use of direct memory probing this is because we lack anything which reassembles a BIOS. Like the above, this wasn't too interesting in a virtualized environment, and the kernel is pretty happy running without it. PCI probing does happen in a standard way.

I think that the interesting part in that test was not that you could actually put a PCI device in the 0x500 range, but that nothing failed and no one yelled at me (with the panic commit applied).

I'm not worried about port 0x505 being taken, I'm worried that it'll silently break a (although not very common/reasonable/typical) perfectly valid use case.


