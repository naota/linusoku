Path: news.gmane.org!not-for-mail
From: "Justin P. Mattock" <justinmattock@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH NEXT v2]staging: tidspbridge: Fix typos.
Date: Mon, 30 Jul 2012 07:27:22 -0700
Lines: 447
Approved: news@gmane.org
Message-ID: <501699CA.1050808@gmail.com>
References: <1343101251-5449-1-git-send-email-justinmattock@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343658462 15978 80.91.229.3 (30 Jul 2012 14:27:42 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 14:27:42 +0000 (UTC)
Cc: omar.ramirez@ti.com, vjaquez@igalia.com,
	devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org
To: gregkh@linuxfoundation.org
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 30 16:27:40 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Svqwd-0001ZD-I0
	for glk-linux-kernel-3@plane.gmane.org; Mon, 30 Jul 2012 16:27:40 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754669Ab2G3O1a (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 30 Jul 2012 10:27:30 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:53720 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753479Ab2G3O12 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 30 Jul 2012 10:27:28 -0400
Original-Received: by ghrr11 with SMTP id r11so4865265ghr.19
        for <linux-kernel@vger.kernel.org>; Mon, 30 Jul 2012 07:27:27 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type:content-transfer-encoding;
        bh=LCHm1u1Rxngg51oTt9HgdkwMjRsS6LEoEls2M+ueDDs=;
        b=KSl/kumRDU5NfbNAlVnPPJ4d8435lRzNnphIoW1M5Ph+8P7/+8h1jbabyp1n+OCLM3
         qoO0JUXn5tRL3Igmz/9ZXnTA/I6JsUreC9PzvJq9/OA3meTHC4r/Drmm36r2IS5XKFLt
         T9AB7n/pde86imZInqWKSS8tfdt76Q/feZqR4Q/+q4dXbLoNlG6ht2/x9b/lnfTvHVBh
         gICaDtVzliB6SqEhNlmid6zEoPYfrKSLJKOPxR30PLL6+PoB0rX7DA1x8F4vVz0JimJU
         iunt/Ox93nXVw03R1OesHevvocFJuHcZiSq+Eo/CNtX6GopY5zVmXDCh75afD2yV4Uy5
         l0RA==
Original-Received: by 10.66.88.131 with SMTP id bg3mr25184544pab.16.1343658447351;
        Mon, 30 Jul 2012 07:27:27 -0700 (PDT)
Original-Received: from [172.16.1.16] ([71.20.133.154])
        by mx.google.com with ESMTPS id wi6sm8025652pbc.35.2012.07.30.07.27.23
        (version=SSLv3 cipher=OTHER);
        Mon, 30 Jul 2012 07:27:26 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux i686; rv:13.0) Gecko/20120615 Thunderbird/13.0.1
In-Reply-To: <1343101251-5449-1-git-send-email-justinmattock@gmail.com>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335103
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335103>

greg!
I know how things can get lost in the sands of time, so when you get a 
chance is this patch good? or do I need to resend?

On 07/23/2012 08:40 PM, Justin P. Mattock wrote:
> From: "Justin P. Mattock" <justinmattock@gmail.com>
>
> Signed-off-by: Justin P. Mattock <justinmattock@gmail.com>
>
> ---
>
> The below patch fixes typos found while reading through staging: tidsbridge:
>
>   .../staging/tidspbridge/Documentation/error-codes  |    2 +-
>   drivers/staging/tidspbridge/core/_tiomap.h         |    2 +-
>   drivers/staging/tidspbridge/core/chnl_sm.c         |    6 +++---
>   drivers/staging/tidspbridge/core/io_sm.c           |   10 +++++-----
>   drivers/staging/tidspbridge/core/sync.c            |    2 +-
>   drivers/staging/tidspbridge/core/tiomap3430.c      |    4 ++--
>   drivers/staging/tidspbridge/core/tiomap3430_pwr.c  |    2 +-
>   drivers/staging/tidspbridge/dynload/tramp.c        |    8 ++++----
>   drivers/staging/tidspbridge/hw/hw_mmu.c            |    6 +++---
>   .../tidspbridge/include/dspbridge/dspioctl.h       |    2 +-
>   .../staging/tidspbridge/include/dspbridge/mbx_sh.h |    2 +-
>   .../staging/tidspbridge/include/dspbridge/node.h   |    2 +-
>   .../staging/tidspbridge/include/dspbridge/ntfy.h   |    2 +-
>   .../staging/tidspbridge/include/dspbridge/proc.h   |    2 +-
>   .../staging/tidspbridge/include/dspbridge/strm.h   |    2 +-
>   .../staging/tidspbridge/include/dspbridge/sync.h   |    4 ++--
>   drivers/staging/tidspbridge/rmgr/dbdcd.c           |    2 +-
>   drivers/staging/tidspbridge/rmgr/dspdrv.c          |    4 ++--
>   drivers/staging/tidspbridge/rmgr/mgr.c             |    4 ++--
>   drivers/staging/tidspbridge/rmgr/nldr.c            |    2 +-
>   drivers/staging/tidspbridge/rmgr/node.c            |    2 +-
>   drivers/staging/tidspbridge/rmgr/proc.c            |    2 +-
>   22 files changed, 37 insertions(+), 37 deletions(-)
>
> diff --git a/drivers/staging/tidspbridge/Documentation/error-codes b/drivers/staging/tidspbridge/Documentation/error-codes
> index 12826e2..ad73cba 100644
> --- a/drivers/staging/tidspbridge/Documentation/error-codes
> +++ b/drivers/staging/tidspbridge/Documentation/error-codes
> @@ -69,7 +69,7 @@ The error codes used by this driver are:
>       Invalid pointer or handler.
>
>   [EEXIST]
> -    Attempted to create a channel manager  when one already exists.
> +    Attempted to create a channel manager when one already exists.
>
>   [EINVAL]
>       Invalid argument.
> diff --git a/drivers/staging/tidspbridge/core/_tiomap.h b/drivers/staging/tidspbridge/core/_tiomap.h
> index 7cb5871..543a127 100644
> --- a/drivers/staging/tidspbridge/core/_tiomap.h
> +++ b/drivers/staging/tidspbridge/core/_tiomap.h
> @@ -219,7 +219,7 @@ static const struct map_l4_peripheral l4_peripheral_table[] = {
>   /* MBX_PM_MAX_RESOURCES: CORE 2 Clock Resources. */
>   #define MBX_CORE2_RESOURCES 1
>
> -/* MBX_PM_MAX_RESOURCES: TOTAL Clock Reosurces. */
> +/* MBX_PM_MAX_RESOURCES: TOTAL Clock Resources. */
>   #define MBX_PM_MAX_RESOURCES 11
>
>   /*  Power Management Commands */
> diff --git a/drivers/staging/tidspbridge/core/chnl_sm.c b/drivers/staging/tidspbridge/core/chnl_sm.c
> index e0c7e4c..f38950e 100644
> --- a/drivers/staging/tidspbridge/core/chnl_sm.c
> +++ b/drivers/staging/tidspbridge/core/chnl_sm.c
> @@ -20,7 +20,7 @@
>    *      The lower edge functions must be implemented by the Bridge driver
>    *      writer, and are declared in chnl_sm.h.
>    *
> - *      Care is taken in this code to prevent simulataneous access to channel
> + *      Care is taken in this code to prevent simultaneous access to channel
>    *      queues from
>    *      1. Threads.
>    *      2. io_dpc(), scheduled from the io_isr() as an event.
> @@ -34,7 +34,7 @@
>    *  Channel Invariant:
>    *      There is an important invariant condition which must be maintained per
>    *      channel outside of bridge_chnl_get_ioc() and IO_Dispatch(), violation of
> - *      which may cause timeouts and/or failure offunction sync_wait_on_event.
> + *      which may cause timeouts and/or failure of function sync_wait_on_event.
>    *      This invariant condition is:
>    *
>    *          list_empty(&pchnl->io_completions) ==> pchnl->sync_event is reset
> @@ -602,7 +602,7 @@ int bridge_chnl_get_ioc(struct chnl_object *chnl_obj, u32 timeout,
>   		/*  Since DSPStream_Reclaim() does not take a timeout
>   		 *  parameter, we pass the stream's timeout value to
>   		 *  bridge_chnl_get_ioc. We cannot determine whether or not
> -		 *  we have waited in User mode. Since the stream's timeout
> +		 *  we have waited in user mode. Since the stream's timeout
>   		 *  value may be non-zero, we still have to set the event.
>   		 *  Therefore, this optimization is taken out.
>   		 *
> diff --git a/drivers/staging/tidspbridge/core/io_sm.c b/drivers/staging/tidspbridge/core/io_sm.c
> index 480a384..e322fb7 100644
> --- a/drivers/staging/tidspbridge/core/io_sm.c
> +++ b/drivers/staging/tidspbridge/core/io_sm.c
> @@ -837,8 +837,8 @@ static void io_dispatch_pm(struct io_mgr *pio_mgr)
>   /*
>    *  ======== io_dpc ========
>    *      Deferred procedure call for shared memory channel driver ISR.  Carries
> - *      out the dispatch of I/O as a non-preemptible event.It can only be
> - *      pre-empted      by an ISR.
> + *      out the dispatch of I/O as a non-preemptible event. It can only be
> + *      pre-empted by an ISR.
>    */
>   void io_dpc(unsigned long ref_data)
>   {
> @@ -877,7 +877,7 @@ void io_dpc(unsigned long ref_data)
>   						  pio_mgr->intr_val);
>   			}
>   		}
> -		/* Proc-copy chanel dispatch */
> +		/* Proc-copy channel dispatch */
>   		input_chnl(pio_mgr, NULL, IO_SERVICE);
>   		output_chnl(pio_mgr, NULL, IO_SERVICE);
>
> @@ -938,7 +938,7 @@ int io_mbox_msg(struct notifier_block *self, unsigned long len, void *msg)
>   /*
>    *  ======== io_request_chnl ========
>    *  Purpose:
> - *      Request chanenel I/O from the DSP. Sets flags in shared memory, then
> + *      Request channel I/O from the DSP. Sets flags in shared memory, then
>    *      interrupts the DSP.
>    */
>   void io_request_chnl(struct io_mgr *io_manager, struct chnl_object *pchnl,
> @@ -2208,7 +2208,7 @@ void dump_dl_modules(struct bridge_dev_context *bridge_context)
>   			module_struct->num_sects);
>
>   		/*
> -		 * The section name strings start immedialty following
> +		 * The section name strings start immediately following
>   		 * the array of dll_sect structures.
>   		 */
>   		sect_str = (char *) &module_struct->
> diff --git a/drivers/staging/tidspbridge/core/sync.c b/drivers/staging/tidspbridge/core/sync.c
> index 995986a..7bb550a 100644
> --- a/drivers/staging/tidspbridge/core/sync.c
> +++ b/drivers/staging/tidspbridge/core/sync.c
> @@ -49,7 +49,7 @@ void sync_set_event(struct sync_object *event)
>    * @timeout	timeout on waiting for the evetns.
>    * @pu_index	index of the event set.
>    *
> - * This functios will wait until any of the array element is set or until
> + * These functions will wait until any of the array element is set or until
>    * timeout. In case of success the function will return 0 and
>    * @pu_index will store the index of the array element set or in case
>    * of timeout the function will return -ETIME or in case of
> diff --git a/drivers/staging/tidspbridge/core/tiomap3430.c b/drivers/staging/tidspbridge/core/tiomap3430.c
> index f9609ce..a19bf5c 100644
> --- a/drivers/staging/tidspbridge/core/tiomap3430.c
> +++ b/drivers/staging/tidspbridge/core/tiomap3430.c
> @@ -328,7 +328,7 @@ static int bridge_brd_read(struct bridge_dev_context *dev_ctxt,
>   					   ul_num_bytes, mem_type);
>   		return status;
>   	}
> -	/* copy the data from  DSP memory, */
> +	/* copy the data from DSP memory */
>   	memcpy(host_buff, (void *)(dsp_base_addr + offset), ul_num_bytes);
>   	return status;
>   }
> @@ -1745,7 +1745,7 @@ static int mem_map_vmalloc(struct bridge_dev_context *dev_context,
>   	pa_next = page_to_phys(page[0]);
>   	while (!status && (i < num_pages)) {
>   		/*
> -		 * Reuse pa_next from the previous iteraion to avoid
> +		 * Reuse pa_next from the previous iteration to avoid
>   		 * an extra va2pa call
>   		 */
>   		pa_curr = pa_next;
> diff --git a/drivers/staging/tidspbridge/core/tiomap3430_pwr.c b/drivers/staging/tidspbridge/core/tiomap3430_pwr.c
> index 16a4aaf..58a1d6d 100644
> --- a/drivers/staging/tidspbridge/core/tiomap3430_pwr.c
> +++ b/drivers/staging/tidspbridge/core/tiomap3430_pwr.c
> @@ -356,7 +356,7 @@ int pre_scale_dsp(struct bridge_dev_context *dev_context, void *pargs)
>   		dev_dbg(bridge, "OPP: %s IVA in sleep. No message to DSP\n");
>   		return 0;
>   	} else if ((dev_context->brd_state == BRD_RUNNING)) {
> -		/* Send a prenotificatio to DSP */
> +		/* Send a prenotification to DSP */
>   		dev_dbg(bridge, "OPP: %s sent notification to DSP\n", __func__);
>   		sm_interrupt_dsp(dev_context, MBX_PM_SETPOINT_PRENOTIFY);
>   		return 0;
> diff --git a/drivers/staging/tidspbridge/dynload/tramp.c b/drivers/staging/tidspbridge/dynload/tramp.c
> index 60d22ea..404af18 100644
> --- a/drivers/staging/tidspbridge/dynload/tramp.c
> +++ b/drivers/staging/tidspbridge/dynload/tramp.c
> @@ -81,7 +81,7 @@ static u8 priv_h2a(u8 value)
>    * Description: Generate a trampoline symbol name (ASCII) using the value
>    *	  of the symbol.  This places the new name into the user buffer.
>    *	  The name is fixed in length and of the form: __$dbTR__xxxxxxxx
> - *	  (where "xxxxxxxx" is the hex value.
> + *	  (where "xxxxxxxx" is the hex value).
>    */
>   static void priv_tramp_sym_gen_name(u32 value, char *dst)
>   {
> @@ -414,7 +414,7 @@ static int priv_tramp_sym_finalize(struct dload_state *dlthis)
>   			/*  Copy the symbol contents into the flat table */
>   			*new_sym = cur_sym->sym_info;
>
> -			/*  Now finaize the symbol.  If it is in the tramp
> +			/*  Now finalize the symbol.  If it is in the tramp
>   			 * section, we need to adjust for the section start.
>   			 * If it is external then we don't need to adjust at
>   			 * all.
> @@ -773,7 +773,7 @@ static int priv_img_pkt_dup(struct dload_state *dlthis,
>   	int ret_val = 0;
>   	struct tramp_img_dup_relo *dup_relo = NULL;
>
> -	/*  Determinne if this image packet is already being tracked in the
> +	/*  Determine if this image packet is already being tracked in the
>   	   dup list for other trampolines. */
>   	dup_pkt = priv_dup_find(dlthis, secnn, image_offset);
>
> @@ -998,7 +998,7 @@ int dload_tramp_generate(struct dload_state *dlthis, s16 secnn,
>   /*
>    * Function:	dload_tramp_pkt_update
>    * Description: Update the duplicate copy of this image packet, which the
> - *	  trampoline layer is already tracking.  This is call is critical
> + *	  trampoline layer is already tracking.  This call is critical
>    *	  to make if trampolines were generated anywhere within the
>    *	  packet and first pass relo continued on the remainder.  The
>    *	  trampoline layer needs the updates image data so when 2nd
> diff --git a/drivers/staging/tidspbridge/hw/hw_mmu.c b/drivers/staging/tidspbridge/hw/hw_mmu.c
> index 8a93d55..71cb822 100644
> --- a/drivers/staging/tidspbridge/hw/hw_mmu.c
> +++ b/drivers/staging/tidspbridge/hw/hw_mmu.c
> @@ -61,7 +61,7 @@ enum hw_mmu_page_size_t {
>    *       Type		: hw_status
>    *       Description     : 0		 -- No errors occurred
>    *			 RET_BAD_NULL_PARAM     -- A Pointer
> - *						Paramater was set to NULL
> + *						Parameter was set to NULL
>    *
>    * PURPOSE:	      : Flush the TLB entry pointed by the
>    *			lock counter register
> @@ -103,7 +103,7 @@ static hw_status mmu_flush_entry(const void __iomem *base_address);
>    *
>    *       Type	    	: hw_status
>    *       Description     : 0		 -- No errors occurred
> - *			 RET_BAD_NULL_PARAM     -- A Pointer Paramater
> + *			 RET_BAD_NULL_PARAM     -- A Pointer Parameter
>    *						   was set to NULL
>    *			 RET_PARAM_OUT_OF_RANGE -- Input Parameter out
>    *						   of Range
> @@ -148,7 +148,7 @@ static hw_status mmu_set_cam_entry(const void __iomem *base_address,
>    *
>    *       Type	    	: hw_status
>    *       Description     : 0		 -- No errors occurred
> - *			 RET_BAD_NULL_PARAM     -- A Pointer Paramater
> + *			 RET_BAD_NULL_PARAM     -- A Pointer Parameter
>    *							was set to NULL
>    *			 RET_PARAM_OUT_OF_RANGE -- Input Parameter
>    *							out of Range
> diff --git a/drivers/staging/tidspbridge/include/dspbridge/dspioctl.h b/drivers/staging/tidspbridge/include/dspbridge/dspioctl.h
> index 0c7ec04..0fcda19 100644
> --- a/drivers/staging/tidspbridge/include/dspbridge/dspioctl.h
> +++ b/drivers/staging/tidspbridge/include/dspbridge/dspioctl.h
> @@ -51,7 +51,7 @@
>   #define BRDIOCTL_POSTSCALE_NOTIFY (BRDIOCTL_PWRCONTROL + 0xA)
>   #define BRDIOCTL_CONSTRAINT_REQUEST (BRDIOCTL_PWRCONTROL + 0xB)
>
> -/* Number of actual DSP-MMU TLB entrries */
> +/* Number of actual DSP-MMU TLB entries */
>   #define BRDIOCTL_NUMOFMMUTLB        32
>
>   struct bridge_ioctl_extproc {
> diff --git a/drivers/staging/tidspbridge/include/dspbridge/mbx_sh.h b/drivers/staging/tidspbridge/include/dspbridge/mbx_sh.h
> index 7424c88..d4cb394 100644
> --- a/drivers/staging/tidspbridge/include/dspbridge/mbx_sh.h
> +++ b/drivers/staging/tidspbridge/include/dspbridge/mbx_sh.h
> @@ -22,7 +22,7 @@
>    *  mailbox interrupt's cmd value received. The class value are defined
>    *  as a bit (10 thru 15) being set.
>    *
> - *  Note: Only 16 bits of each  is used. Other 16 bit data reg available.
> + *  Note: Only 16 bits of each is used. Other 16 bit data reg available.
>    *
>    *   16 bit Mbx bit defns:
>    *
> diff --git a/drivers/staging/tidspbridge/include/dspbridge/node.h b/drivers/staging/tidspbridge/include/dspbridge/node.h
> index 7397b7a..68ed74a 100644
> --- a/drivers/staging/tidspbridge/include/dspbridge/node.h
> +++ b/drivers/staging/tidspbridge/include/dspbridge/node.h
> @@ -220,7 +220,7 @@ extern int node_create_mgr(struct node_mgr **node_man,
>    *  Parameters:
>    *      noderes:              Node resource info handle returned from
>    *                                 node_allocate().
> - *      pr_ctxt:                Poninter to process context data.
> + *      pr_ctxt:                Pointer to process context data.
>    *  Returns:
>    *      0:            Success.
>    *      -EFAULT:        Invalid hnode.
> diff --git a/drivers/staging/tidspbridge/include/dspbridge/ntfy.h b/drivers/staging/tidspbridge/include/dspbridge/ntfy.h
> index cbc8819..6bb94d2 100644
> --- a/drivers/staging/tidspbridge/include/dspbridge/ntfy.h
> +++ b/drivers/staging/tidspbridge/include/dspbridge/ntfy.h
> @@ -78,7 +78,7 @@ static inline void ntfy_init(struct ntfy_object *no)
>    * ntfy_delete() - delete list of nofy events registered.
>    * @ntfy_obj:	Pointer to the ntfy object structure.
>    *
> - * This function is used to remove all the notify events  registered.
> + * This function is used to remove all the notify events registered.
>    * unregister function is not needed in this function, to unregister
>    * a ntfy_event please look at ntfy_register function.
>    *
> diff --git a/drivers/staging/tidspbridge/include/dspbridge/proc.h b/drivers/staging/tidspbridge/include/dspbridge/proc.h
> index a82380e..851b356 100644
> --- a/drivers/staging/tidspbridge/include/dspbridge/proc.h
> +++ b/drivers/staging/tidspbridge/include/dspbridge/proc.h
> @@ -263,7 +263,7 @@ extern int proc_get_processor_id(void *proc, u32 * proc_id);
>    *  Returns:
>    *      0     :   Success.
>    *      -EFAULT :   Invalid processor handle.
> - *      -EPERM   :   General failure while retireving processor trace
> + *      -EPERM   :   General failure while retrieving processor trace
>    *		      Buffer.
>    *  Requires:
>    *      pbuf is not NULL
> diff --git a/drivers/staging/tidspbridge/include/dspbridge/strm.h b/drivers/staging/tidspbridge/include/dspbridge/strm.h
> index dacf0c2..97aee4c 100644
> --- a/drivers/staging/tidspbridge/include/dspbridge/strm.h
> +++ b/drivers/staging/tidspbridge/include/dspbridge/strm.h
> @@ -203,7 +203,7 @@ extern int strm_issue(struct strm_object *stream_obj, u8 * pbuf,
>    *      index:         Stream index.
>    *      pattr:          Pointer to structure containing attributes to be
>    *                      applied to stream. Cannot be NULL.
> - *      strmres:     Location to store stream resuorce info handle on output.
> + *      strmres:     Location to store stream resource info handle on output.
>    *  Returns:
>    *      0:        Success.
>    *      -EFAULT:    Invalid hnode.
> diff --git a/drivers/staging/tidspbridge/include/dspbridge/sync.h b/drivers/staging/tidspbridge/include/dspbridge/sync.h
> index b1e75eb..58a0d5c 100644
> --- a/drivers/staging/tidspbridge/include/dspbridge/sync.h
> +++ b/drivers/staging/tidspbridge/include/dspbridge/sync.h
> @@ -78,7 +78,7 @@ void sync_set_event(struct sync_object *event);
>    * @event:	events to wait for it.
>    * @timeout	timeout on waiting for the evetn.
>    *
> - * This functios will wait until @event is set or until timeout. In case of
> + * This function will wait until @event is set or until timeout. In case of
>    * success the function will return 0 and
>    * in case of timeout the function will return -ETIME
>    * in case of signal the function will return -ERESTARTSYS
> @@ -106,7 +106,7 @@ static inline int sync_wait_on_event(struct sync_object *event,
>    * @timeout	timeout on waiting for the evetns.
>    * @pu_index	index of the event set.
>    *
> - * This functios will wait until any of the array element is set or until
> + * This function will wait until any of the array element is set or until
>    * timeout. In case of success the function will return 0 and
>    * @pu_index will store the index of the array element set and in case
>    * of timeout the function will return -ETIME.
> diff --git a/drivers/staging/tidspbridge/rmgr/dbdcd.c b/drivers/staging/tidspbridge/rmgr/dbdcd.c
> index 12a1d34..7dd8b52 100644
> --- a/drivers/staging/tidspbridge/rmgr/dbdcd.c
> +++ b/drivers/staging/tidspbridge/rmgr/dbdcd.c
> @@ -463,7 +463,7 @@ int dcd_get_object_def(struct dcd_manager *hdcd_mgr,
>   	status = cod_read_section(lib, sz_sect_name, psz_coff_buf, ul_len);
>   #endif
>   	if (!status) {
> -		/* Compres DSP buffer to conform to PC format. */
> +		/* Compress DSP buffer to conform to PC format. */
>   		if (strstr(dcd_key->path, "iva") == NULL) {
>   			compress_buf(psz_coff_buf, ul_len, DSPWORDSIZE);
>   		} else {
> diff --git a/drivers/staging/tidspbridge/rmgr/dspdrv.c b/drivers/staging/tidspbridge/rmgr/dspdrv.c
> index dc767b1..d460f58 100644
> --- a/drivers/staging/tidspbridge/rmgr/dspdrv.c
> +++ b/drivers/staging/tidspbridge/rmgr/dspdrv.c
> @@ -72,7 +72,7 @@ u32 dsp_init(u32 *init_status)
>
>   	/* Unwind whatever was loaded */
>   	if (status) {
> -		/* irrespective of the status of dev_remove_device we conitinue
> +		/* irrespective of the status of dev_remove_device we continue
>   		 * unloading. Get the Driver Object iterate through and remove.
>   		 * Reset the status to E_FAIL to avoid going through
>   		 * api_init_complete2. */
> @@ -92,7 +92,7 @@ u32 dsp_init(u32 *init_status)
>   func_cont:
>   	/* Attempt to Start the Board */
>   	if (!status) {
> -		/* BRD_AutoStart could fail if the dsp execuetable is not the
> +		/* BRD_AutoStart could fail if the dsp executable is not the
>   		 * correct one. We should not propagate that error
>   		 * into the device loader. */
>   		(void)api_init_complete2();
> diff --git a/drivers/staging/tidspbridge/rmgr/mgr.c b/drivers/staging/tidspbridge/rmgr/mgr.c
> index 8a1e928..b32ba0a 100644
> --- a/drivers/staging/tidspbridge/rmgr/mgr.c
> +++ b/drivers/staging/tidspbridge/rmgr/mgr.c
> @@ -262,8 +262,8 @@ int mgr_enum_processor_info(u32 processor_id,
>   				    IVAPROCTYPE_ARM7)
>   					proc_detect = true;
>   			}
> -			/* User applciatiuons aonly check for chip type, so
> -			 * this clumsy overwrite */
> +			/* User applications only check for chip type, so
> +			 * this is a clumsy overwrite */
>   			processor_info->processor_type = DSPTYPE64;
>   		} else {
>   			dev_dbg(bridge, "%s: Failed to get DCD processor info "
> diff --git a/drivers/staging/tidspbridge/rmgr/nldr.c b/drivers/staging/tidspbridge/rmgr/nldr.c
> index 30d5480..6309221 100644
> --- a/drivers/staging/tidspbridge/rmgr/nldr.c
> +++ b/drivers/staging/tidspbridge/rmgr/nldr.c
> @@ -898,7 +898,7 @@ static int add_ovly_info(void *handle, struct dbll_sect_info *sect_info,
>   				nldr_obj->ovly_table[i].execute_sects++;
>
>   		} else {
> -			/* Put in "other" sectins */
> +			/* Put in "other" sections */
>   			status =
>   			    add_ovly_sect(nldr_obj,
>   					  &nldr_obj->
> diff --git a/drivers/staging/tidspbridge/rmgr/node.c b/drivers/staging/tidspbridge/rmgr/node.c
> index 7fb426c..f17c128 100644
> --- a/drivers/staging/tidspbridge/rmgr/node.c
> +++ b/drivers/staging/tidspbridge/rmgr/node.c
> @@ -1613,7 +1613,7 @@ int node_get_attr(struct node_object *hnode,
>   		return -EFAULT;
>
>   	hnode_mgr = hnode->node_mgr;
> -	/* Enter hnode_mgr critical section (since we're accessing
> +	/* Enter hnode_mgr critical section since we're accessing
>   	 * data that could be changed by node_change_priority() and
>   	 * node_connect(). */
>   	mutex_lock(&hnode_mgr->node_mgr_lock);
> diff --git a/drivers/staging/tidspbridge/rmgr/proc.c b/drivers/staging/tidspbridge/rmgr/proc.c
> index 7e4f12f..5e43938 100644
> --- a/drivers/staging/tidspbridge/rmgr/proc.c
> +++ b/drivers/staging/tidspbridge/rmgr/proc.c
> @@ -300,7 +300,7 @@ proc_attach(u32 processor_id,
>   	if (status)
>   		goto func_end;
>
> -	/* If we made it this far, create the Proceesor object: */
> +	/* If we made it this far, create the Processor object: */
>   	p_proc_object = kzalloc(sizeof(struct proc_object), GFP_KERNEL);
>   	/* Fill out the Processor Object: */
>   	if (p_proc_object == NULL) {
>


