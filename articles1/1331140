Path: news.gmane.org!not-for-mail
From: Steven Rostedt <rostedt@goodmis.org>
Newsgroups: gmane.linux.kernel
Subject: [PATCH 14/19] kprobes: Inverse taking of module_mutex with kprobe_mutex
Date: Fri, 20 Jul 2012 22:19:57 -0400
Lines: 89
Approved: news@gmane.org
Message-ID: <20120721022110.650726104@goodmis.org>
References: <20120721021943.274162381@goodmis.org>
NNTP-Posting-Host: plane.gmane.org
Content-Type: multipart/signed; micalg="pgp-sha1"; protocol="application/pgp-signature"; boundary="00GvhwF7k39YY"
X-Trace: dough.gmane.org 1342837450 29803 80.91.229.3 (21 Jul 2012 02:24:10 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 21 Jul 2012 02:24:10 +0000 (UTC)
Cc: Ingo Molnar <mingo@elte.hu>,
	Andrew Morton <akpm@linux-foundation.org>,
	Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>,
	Frederic Weisbecker <fweisbec@gmail.com>,
	Thomas Gleixner <tglx@linutronix.de>,
	"H. Peter Anvin" <hpa@zytor.com>, Ingo Molnar <mingo@redhat.com>,
	Ananth N Mavinakayanahalli <ananth@in.ibm.com>,
	"Frank Ch. Eigler" <fche@redhat.com>
To: linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Jul 21 04:24:08 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SsPMV-0000dZ-9r
	for glk-linux-kernel-3@plane.gmane.org; Sat, 21 Jul 2012 04:24:07 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753812Ab2GUCWO (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 20 Jul 2012 22:22:14 -0400
Original-Received: from hrndva-omtalb.mail.rr.com ([71.74.56.122]:28027 "EHLO
	hrndva-omtalb.mail.rr.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752231Ab2GUCVM (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 20 Jul 2012 22:21:12 -0400
X-Authority-Analysis: v=2.0 cv=StQSGYy0 c=1 sm=0 a=s5Htg7xnQOKvHEu9STBOug==:17 a=OpT9cpI26MMA:10 a=Ciwy3NGCPMMA:10 a=t-Vslu4qGckA:10 a=5SG0PmZfjMsA:10 a=bbbx4UPp9XUA:10 a=meVymXHHAAAA:8 a=20KFwNOVAAAA:8 a=VwQbUJbxAAAA:8 a=oGMlB6cnAAAA:8 a=VnNF1IyMAAAA:8 a=Z4Rwk6OoAAAA:8 a=pGLkceISAAAA:8 a=3nbZYyFuAAAA:8 a=PgWMebuInx1RzEPmWVUA:9 a=QEXdDO2ut3YA:10 a=jEp0ucaQiEUA:10 a=Zh68SRI7RUMA:10 a=CY6gl2JlH4YA:10 a=jbrJJM5MRmoA:10 a=MSl-tDqOz04A:10 a=EvKJbDF4Ut8A:10 a=jeBq3FmKZ4MA:10 a=VkNXRRI44iGB_DlCy-sA:9 a=s5Htg7xnQOKvHEu9STBOug==:117
X-Cloudmark-Score: 0
X-Originating-IP: 72.230.195.127
Original-Received: from [72.230.195.127] ([72.230.195.127:42443] helo=gandalf.stny.rr.com)
	by hrndva-oedge03.mail.rr.com (envelope-from <rostedt@goodmis.org>)
	(ecelerity 2.2.3.46 r()) with ESMTP
	id 54/D0-00797-7121A005; Sat, 21 Jul 2012 02:21:11 +0000
Original-Received: from rostedt by gandalf.stny.rr.com with local (Exim 4.80)
	(envelope-from <rostedt@goodmis.org>)
	id 1SsPJe-0001ww-N4; Fri, 20 Jul 2012 22:21:10 -0400
User-Agent: quilt/0.60-1
Content-Disposition: inline; filename=0014-kprobes-Inverse-taking-of-module_mutex-with-kprobe_m.patch
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331140
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331140>

--00GvhwF7k39YY
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

From: Steven Rostedt <srostedt@redhat.com>

Currently module_mutex is taken before kprobe_mutex, but this
can cause issues when we have kprobes register ftrace, as the ftrace
mutex is taken before enabling a tracepoint, which currently takes
the module mutex.

If module_mutex is taken before kprobe_mutex, then we can not
have kprobes use the ftrace infrastructure.

There seems to be no reason that the kprobe_mutex can't be taken
before the module_mutex. Running lockdep shows that it is safe
among the kernels I've run.

Link: http://lkml.kernel.org/r/20120605102814.27845.21047.stgit@localhost.l=
ocaldomain

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
Cc: "Frank Ch. Eigler" <fche@redhat.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Frederic Weisbecker <fweisbec@gmail.com>
Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
---
 kernel/kprobes.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/kprobes.c b/kernel/kprobes.c
index c62b854..7a8a122 100644
--- a/kernel/kprobes.c
+++ b/kernel/kprobes.c
@@ -561,9 +561,9 @@ static __kprobes void kprobe_optimizer(struct work_stru=
ct *work)
 {
 	LIST_HEAD(free_list);
=20
+	mutex_lock(&kprobe_mutex);
 	/* Lock modules while optimizing kprobes */
 	mutex_lock(&module_mutex);
-	mutex_lock(&kprobe_mutex);
=20
 	/*
 	 * Step 1: Unoptimize kprobes and collect cleaned (unused and disarmed)
@@ -586,8 +586,8 @@ static __kprobes void kprobe_optimizer(struct work_stru=
ct *work)
 	/* Step 4: Free cleaned kprobes after quiesence period */
 	do_free_cleaned_kprobes(&free_list);
=20
-	mutex_unlock(&kprobe_mutex);
 	mutex_unlock(&module_mutex);
+	mutex_unlock(&kprobe_mutex);
=20
 	/* Step 5: Kick optimizer again if needed */
 	if (!list_empty(&optimizing_list) || !list_empty(&unoptimizing_list))
--=20
1.7.10.4



--00GvhwF7k39YY
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQIcBAABAgAGBQJQChIWAAoJEIy3vGnGbaoAacIQAI5Mvxj3McWYh6rl0DCP8f1+
bp1Lw4ADhprGYAktKy4GROlNo6XGY1A1C/oPd/6YY/1cN59FWnMcjJdihNv/Gi4H
O0uep5ILfvp68/VMvhCamGxttAUzfVUb1C9u839EaFZ6Xy6CvHGaGm50WJRNT/Dx
kTFZ/u/ABZCcv1ZSwmsqZsHaQnEryaBoo+zEcmcTgnJxoBytYfqRs+Zurhz19x4f
s4HMRlbmPMaHwsV5XFuZ95SsaZeOnfMrG/iFdEvRReNqguZFaMKF0ASOwjSyWMSj
f6mviG7ZGND6xuYzv5VG1v7qk7yfd5r2qe1jTgEpbUzbw9gUfQ9s7bB6cBK/T9UN
RcTHsu+emPUo/xNnzp9ds2eANeETeHXaJMCKpr4VZeKIzlZ7qrSMFaFqYR3ibYLd
xWtNCSGsYx1JTK5X6eHrt9VGNlKwLAqFKNlPQHyphVeii8ndjFcGkrQ33yep+L8N
+e0F7d+ZMlPlxrGXDxVnpvm/NVXo2XGCKHHwhFF0kTc/fqsC3CRPwUar0ULq3kJz
0RA9jz+7Ly9DL32qesE2C038B8KeJu9pB4Gp8K33/2cv4fWiBbpkGoL92yUAHXmH
WtWu9s3iCOyr9ufN8AhR9WRE/bWirpgawD5uXSsTrC5racjPWJlv9BxfD4bfMoYG
H/qj4RjzpnNPtNcJp5rY
=XtU0
-----END PGP SIGNATURE-----

--00GvhwF7k39YY--
