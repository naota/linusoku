Path: news.gmane.org!not-for-mail
From: Paolo Bonzini <pbonzini@redhat.com>
Newsgroups: gmane.linux.kernel.virtualization,gmane.comp.emulators.kvm.devel,gmane.linux.network,gmane.linux.kernel
Subject: Re: [net-next RFC V5 3/5] virtio: intorduce an API to set affinity
	for a virtqueue
Date: Fri, 27 Jul 2012 16:38:11 +0200
Lines: 56
Approved: news@gmane.org
Message-ID: <5012A7D3.4040800@redhat.com>
References: <1341484194-8108-1-git-send-email-jasowang@redhat.com>
	<1341484194-8108-4-git-send-email-jasowang@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343399910 17790 80.91.229.3 (27 Jul 2012 14:38:30 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 27 Jul 2012 14:38:30 +0000 (UTC)
Cc: krkumar2@in.ibm.com, habanero@linux.vnet.ibm.com, mashirle@us.ibm.com,
	kvm@vger.kernel.org, netdev@vger.kernel.org, linux-kernel@vger.kernel.org,
	virtualization@lists.linux-foundation.org, edumazet@google.com,
	tahm@linux.vnet.ibm.com, jwhan@filewood.snu.ac.kr,
	davem@davemloft.net, sri@us.ibm.com
To: Jason Wang <jasowang@redhat.com>, mst@redhat.com, 
	"Nicholas A. Bellinger" <nab@linux-iscsi.org>
Original-X-From: virtualization-bounces@lists.linux-foundation.org Fri Jul 27 16:38:27 2012
Return-path: <virtualization-bounces@lists.linux-foundation.org>
Envelope-to: glkv-virtualization@gmane.org
Original-Received: from mail.linuxfoundation.org ([140.211.169.12])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <virtualization-bounces@lists.linux-foundation.org>)
	id 1SulgR-0004fR-02
	for glkv-virtualization@gmane.org; Fri, 27 Jul 2012 16:38:27 +0200
Original-Received: from mail.linux-foundation.org (localhost [IPv6:::1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id 5E678829;
	Fri, 27 Jul 2012 14:38:24 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Original-Received: from smtp1.linuxfoundation.org (smtp1.linux-foundation.org
	[172.17.192.35])
	by mail.linuxfoundation.org (Postfix) with ESMTP id 6350C828
	for <virtualization@lists.linux-foundation.org>;
	Fri, 27 Jul 2012 14:38:23 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Original-Received: from mail-yw0-f47.google.com (mail-yw0-f47.google.com
	[209.85.213.47])
	by smtp1.linuxfoundation.org (Postfix) with ESMTPS id E94641FA2F
	for <virtualization@lists.linux-foundation.org>;
	Fri, 27 Jul 2012 14:38:22 +0000 (UTC)
Original-Received: by yhjj56 with SMTP id j56so2976086yhj.6
	for <virtualization@lists.linux-foundation.org>;
	Fri, 27 Jul 2012 07:38:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
	h=sender:message-id:date:from:user-agent:mime-version:to:cc:subject
	:references:in-reply-to:content-type:content-transfer-encoding;
	bh=vfEYFGiAzvaHFhzC3aiJUGinwWrEPizBDG9o12jF/zY=;
	b=GoS05e4I6dbOOp9qBa0juxJ4cLc+cdg//c8ZewH1F5chI9cCykPkUzY8kHNCpMLgfW
	KPh+niXN0SUumzTMH1vjlDn7b9dDiOH354I3GREhZvKw0oWVw0ThtlwM6C7IoiYjFBpv
	JuuNniAVD3z9xjt6U2Z9z3zwtXFMGvpibTnH6L8i1X8iQoGjjW8BoCgTOlxEU3j46XAj
	LzjcCb9z1sLygfTLA1Dxc5uK3ezCSs75pNLkJ8op3sJI98hILHypta6VZLNrxV8ZwYGM
	bvpyxmsUb07Lmma7zgk9EOZg3os2G7EDVeyYcnekHGgRzqybW8OGVVdMLh2V6uIXLtfJ
	6I8g==
Original-Received: by 10.66.87.138 with SMTP id ay10mr6022015pab.38.1343399901479;
	Fri, 27 Jul 2012 07:38:21 -0700 (PDT)
Original-Received: from yakj.usersys.redhat.com (93-34-189-113.ip51.fastwebnet.it.
	[93.34.189.113])
	by mx.google.com with ESMTPS id pi7sm2019911pbb.56.2012.07.27.07.38.14
	(version=TLSv1/SSLv3 cipher=OTHER);
	Fri, 27 Jul 2012 07:38:19 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64;
	rv:13.0) Gecko/20120615 Thunderbird/13.0.1
In-Reply-To: <1341484194-8108-4-git-send-email-jasowang@redhat.com>
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, FREEMAIL_FROM, RCVD_IN_DNSWL_LOW autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp1.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Original-Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org
Xref: news.gmane.org gmane.linux.kernel.virtualization:16333 gmane.comp.emulators.kvm.devel:95168 gmane.linux.network:238554 gmane.linux.kernel:1334349
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334349>

Il 05/07/2012 12:29, Jason Wang ha scritto:
> Sometimes, virtio device need to configure irq affiniry hint to maximize the
> performance. Instead of just exposing the irq of a virtqueue, this patch
> introduce an API to set the affinity for a virtqueue.
> 
> The api is best-effort, the affinity hint may not be set as expected due to
> platform support, irq sharing or irq type. Currently, only pci method were
> implemented and we set the affinity according to:
> 
> - if device uses INTX, we just ignore the request
> - if device has per vq vector, we force the affinity hint
> - if the virtqueues share MSI, make the affinity OR over all affinities
>  requested
> 
> Signed-off-by: Jason Wang <jasowang@redhat.com>

Hmm, I don't see any benefit from this patch, I need to use
irq_set_affinity (which however is not exported) to actually bind IRQs
to CPUs.  Example:

with irq_set_affinity_hint:
 43:   89  107  100   97   PCI-MSI-edge   virtio0-request
 44:  178  195  268  199   PCI-MSI-edge   virtio0-request
 45:   97  100   97  155   PCI-MSI-edge   virtio0-request
 46:  234  261  213  218   PCI-MSI-edge   virtio0-request

with irq_set_affinity:
 43:  721    0    0    1   PCI-MSI-edge   virtio0-request
 44:    0  746    0    1   PCI-MSI-edge   virtio0-request
 45:    0    0  658    0   PCI-MSI-edge   virtio0-request
 46:    0    0    1  547   PCI-MSI-edge   virtio0-request

I gathered these quickly after boot, but real benchmarks show the same
behavior, and performance gets actually worse with virtio-scsi
multiqueue+irq_set_affinity_hint than with irq_set_affinity.

I also tried adding IRQ_NO_BALANCING, but the only effect is that I
cannot set the affinity

The queue steering algorithm I use in virtio-scsi is extremely simple
and based on your tx code.  See how my nice pinning is destroyed:

# taskset -c 0 dd if=/dev/sda bs=1M count=1000 of=/dev/null iflag=direct
# cat /proc/interrupts
 43:  2690 2709 2691 2696   PCI-MSI-edge      virtio0-request
 44:   109  122  199  124   PCI-MSI-edge      virtio0-request
 45:   170  183  170  237   PCI-MSI-edge      virtio0-request
 46:   143  166  125  125   PCI-MSI-edge      virtio0-request

All my requests come from CPU#0 and thus go to the first virtqueue, but
the interrupts are serviced all over the place.

Did you set the affinity manually in your experiments, or perhaps there
is a difference between scsi and networking... (interrupt mitigation?)

Paolo
