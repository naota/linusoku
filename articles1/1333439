Path: news.gmane.org!not-for-mail
From: Paolo Bonzini <pbonzini@redhat.com>
Newsgroups: gmane.linux.scsi,gmane.linux.kernel,gmane.comp.emulators.kvm.devel
Subject: Re: virtio(-scsi) vs. chained sg_lists (was Re: [PATCH] scsi: virtio-scsi:
 Fix address translation failure of HighMem pages used by sg list)
Date: Thu, 26 Jul 2012 09:23:42 +0200
Lines: 69
Approved: news@gmane.org
Message-ID: <5010F07E.7050506@redhat.com>
References: <1343204966-23560-1-git-send-email-senwang@linux.vnet.ibm.com> <500FB1DE.1000100@redhat.com> <500FBAE8.2050107@panasas.com> <500FBF37.50603@redhat.com> <500FE7D2.7070101@panasas.com> <500FEB63.3000709@redhat.com> <500FF412.3090600@panasas.com> <50100014.2010109@redhat.com> <50101091.5090909@panasas.com> <50103043.5050508@redhat.com> <50104614.3080002@panasas.com> <501051DF.5040907@redhat.com> <50105F60.8050707@panasas.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343287434 26082 80.91.229.3 (26 Jul 2012 07:23:54 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 07:23:54 +0000 (UTC)
Cc: Wang Sen <senwang@linux.vnet.ibm.com>, linux-scsi@vger.kernel.org,
	JBottomley@parallels.com, stefanha@linux.vnet.ibm.com,
	mc@linux.vnet.ibm.com, linux-kernel@vger.kernel.org,
	"kvm@vger.kernel.org" <kvm@vger.kernel.org>,
	Rusty Russell <rusty@rustcorp.com.au>
To: Boaz Harrosh <bharrosh@panasas.com>
Original-X-From: linux-scsi-owner@vger.kernel.org Thu Jul 26 09:23:53 2012
Return-path: <linux-scsi-owner@vger.kernel.org>
Envelope-to: lnx-linux-scsi@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-scsi-owner@vger.kernel.org>)
	id 1SuIQK-0004oT-3b
	for lnx-linux-scsi@plane.gmane.org; Thu, 26 Jul 2012 09:23:52 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751609Ab2GZHXu (ORCPT <rfc822;lnx-linux-scsi@m.gmane.org>);
	Thu, 26 Jul 2012 03:23:50 -0400
Original-Received: from mail-wg0-f44.google.com ([74.125.82.44]:59096 "EHLO
	mail-wg0-f44.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750946Ab2GZHXs (ORCPT
	<rfc822;linux-scsi@vger.kernel.org>); Thu, 26 Jul 2012 03:23:48 -0400
Original-Received: by wgbdr13 with SMTP id dr13so1519833wgb.1
        for <multiple recipients>; Thu, 26 Jul 2012 00:23:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type:content-transfer-encoding;
        bh=rVl++4zWRM+vZBwNVhHOld5VRLQUXQ22z+ajZipDOhw=;
        b=YYn1lkkSuqaWpgG4kOckxKfw8Yln1ZTk3eyaWQcj9+JwdwUkfEQBP89kZOO9Fu9QDz
         2H/2eHg2L3owGpe6h7LSTMgCyuTZjqxslKg9/atvodeYmv8S2wGzSbv2+t9lu+o/2puE
         wIMQyL0HE0IovveYhaYYi4g+i6/Y95ufjuWGZglldWsxq520J7kmeaagFneGhONgeW1j
         Sv3293U9Ie0wAsLZ8nqno6oFdk8Cf05B5LkSXSq1ZbQhmTxglzHNrBlUFt+u6XCZNJ5N
         rkVTfqfPWQfDABNPKk6skteNyJucJhQuh9eZeV04jJs4BAlZDPE/Fwm2FRCLWxfjzwVc
         eojw==
Original-Received: by 10.180.99.196 with SMTP id es4mr10974621wib.18.1343287426569;
        Thu, 26 Jul 2012 00:23:46 -0700 (PDT)
Original-Received: from yakj.usersys.redhat.com (93-34-189-113.ip51.fastwebnet.it. [93.34.189.113])
        by mx.google.com with ESMTPS id w7sm6868147wiz.0.2012.07.26.00.23.44
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 26 Jul 2012 00:23:45 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:13.0) Gecko/20120615 Thunderbird/13.0.1
In-Reply-To: <50105F60.8050707@panasas.com>
Original-Sender: linux-scsi-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-scsi.vger.kernel.org>
X-Mailing-List: linux-scsi@vger.kernel.org
Xref: news.gmane.org gmane.linux.scsi:76586 gmane.linux.kernel:1333439 gmane.comp.emulators.kvm.devel:95070
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333439>

Il 25/07/2012 23:04, Boaz Harrosh ha scritto:
>> That not all architectures have ARCH_HAS_SG_CHAIN (though all those I
>> care about do).  So I need to go through all architectures and make sure
>> they use for_each_sg, or at least to change ARCH_HAS_SG_CHAIN to a
>> Kconfig define so that dependencies can be expressed properly.
> 
> What is actually preventing ARCH_HAS_SG_CHAIN from all these ARCHES?
> is that the DMA drivers not using for_each_sg(). Sounds like easy
> to fix.
> 
> But yes a deep change would convert ARCH_HAS_SG_CHAIN to a Kconfig.
> 
> If you want to be lazy, like me, You might just put a BUILD_BUG_ON
> in code, requesting the user to disable the driver for this ARCH.
> 
> I bet there is more things to do at ARCH to enable virtualization
> then just support ARCH_HAS_SG_CHAIN. Be it just another requirement.

Actually, many arches run just fine with QEMU's binary code translation
(alpha, mips, coldfire).  And since it's already pretty slow, using
virtio to improve performance is nice even in that scenario (which does
not require any kernel change).  But it's just an icing on the cake
indeed.  I can live with a BUILD_BUG_ON or better a "depends on
HAVE_SG_CHAIN" for the time being.

>>> And BTW you won't need that new __sg_set_page API anymore.
>>
>> Kind of.
>>
>>    sg_init_table(sg, 2);
>>    sg_set_buf(sg[0], req, sizeof(req));
>>    sg_chain(sg[1], scsi_out(sc));
>>
>> is still a little bit worse than
>>
>>    __sg_set_buf(sg[0], req, sizeof(req));
>>    __sg_chain(sg[1], scsi_out(sc));
> 
> 
> I believe they are the same, specially for the
> on the stack 2 elements array. Actually I think
> In both cases you need to at least call sg_init_table()
> once after allocation, No?

Because the scatterlist here would be allocated on the stack, I would
need to call it every time if I used sg_set_buf/sg_chain.

But sg_init_table is really just memset + set SG_MAGIC + sg_mark_end.
If you use the "full-init" APIs as above, you don't need any of those
(sg_chain undoes the flag changes in sg_mark_end and vice versa).

> But please for my sake do not call it __sg_chain. Call it
> something like sg_chain_not_end(). I hate those "__" which
> for god sack means what? 
> (A good name is when I don't have to read the code, an "__"
>  means "fuck you go read the code")

Right, better call them sg_init_buf/sg_init_page/sg_init_chain.

In the meanwhile, we still have a bug to fix, and we need to choose
between Sen Wang's v1 (sg_set_page) or v2 (value assignment).  I'm still
leaning more towards v2, if only because I already tested that one myself.

Paolo
--
To unsubscribe from this list: send the line "unsubscribe linux-scsi" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

