Path: news.gmane.org!not-for-mail
From: Xufeng Zhang <xufengzhang.main@gmail.com>
Newsgroups: gmane.linux.network,gmane.linux.kernel
Subject: Re: [PATCH] sctp: Make "Invalid Stream Identifier" ERROR follows SACK
 when bundling
Date: Mon, 30 Jul 2012 12:58:01 +0800
Lines: 133
Approved: news@gmane.org
Message-ID: <CA+=dFzh4dFatOy42FydbVvoXB8=5CvLu5AwPvUA16h+kymq0Lw@mail.gmail.com>
References: <1342677450-21810-1-git-send-email-xufengzhang.main@gmail.com>
	<500CDE35.6000009@windriver.com>
	<42fcd21f-68bd-4dc7-8460-0cb968eb512e@email.android.com>
	<500E1057.3020509@windriver.com>
	<75bdd73e-1c47-4fd6-bc29-5b86ee6da69a@email.android.com>
	<CA+=dFzg=Bpsv5bMzECoAXYVcbD95eYy6xDAzL6fwiHrunfq-tg@mail.gmail.com>
	<e7f8a685-9635-4aa9-bd67-1044e0720b29@email.android.com>
	<CA+=dFzifKwbiXmw=pu0+rWmz72+4jsbv6bXOBHyL0LmxaL9byg@mail.gmail.com>
	<CA+=dFzgXq3Sx-Ny+6oDZ3BEdsMQCgswNEVPVnhmhedHFvazzWw@mail.gmail.com>
	<50100A29.8010705@gmail.com>
	<CA+=dFzj11c9K0TS0T7D1aBVz+ppdFK91ZzBbevLV23FrWJNzmw@mail.gmail.com>
	<CA+=dFziK09TVcK29x1SLg+JanOj6o__bJKf8yohw6dTYCUCF5A@mail.gmail.com>
	<8ea83e51-81d1-407a-be06-98d2c99c876d@email.android.com>
	<CA+=dFzguqjjnnqHO53Mx859VB6NU=4MaPWAUzGQB2qtZGfdAUg@mail.gmail.com>
	<5013069F.3080306@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343624337 9225 80.91.229.3 (30 Jul 2012 04:58:57 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 04:58:57 +0000 (UTC)
Cc: Neil Horman <nhorman@tuxdriver.com>,
	xufeng zhang <xufeng.zhang@windriver.com>, sri@us.ibm.com,
	davem@davemloft.net, linux-sctp@vger.kernel.org,
	netdev@vger.kernel.org, linux-kernel@vger.kernel.org
To: Vlad Yasevich <vyasevich@gmail.com>
Original-X-From: netdev-owner@vger.kernel.org Mon Jul 30 06:58:55 2012
Return-path: <netdev-owner@vger.kernel.org>
Envelope-to: linux-netdev-2@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <netdev-owner@vger.kernel.org>)
	id 1Svi4C-00063k-Gf
	for linux-netdev-2@plane.gmane.org; Mon, 30 Jul 2012 06:58:53 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754001Ab2G3E6G (ORCPT <rfc822;linux-netdev-2@m.gmane.org>);
	Mon, 30 Jul 2012 00:58:06 -0400
Original-Received: from mail-vc0-f174.google.com ([209.85.220.174]:32875 "EHLO
	mail-vc0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751972Ab2G3E6D (ORCPT
	<rfc822;netdev@vger.kernel.org>); Mon, 30 Jul 2012 00:58:03 -0400
Original-Received: by vcbfk26 with SMTP id fk26so4281786vcb.19
        for <multiple recipients>; Sun, 29 Jul 2012 21:58:02 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=G62VRDW/fGa/bQvKKe+dYCZ7v02/kKZnYO3LelN7o2o=;
        b=kKTydpMnAhZ+DEvJ+AmsXWqCD9qufER3eEIjHaVr76/xU9nV8egIj7qGdDevJJ/BXw
         smKh3yKK7LhKGXAq55TQhenuGhLF7pfU6XnNto0A41x1z+JmVOAkoT+JZKe4Ov/ixtJh
         guRMMKZH7JDnYXWByAYHkCgQ+KepxDo39qVoKUa1oVMolR5kSjKRNl90ySUyxvR1W43u
         TUBrCf3vKYnDmMJeN5nrojVEF+2B6ckeAlwQAY0oD6k0eUCblHtmdfIeXfasvm5UNQdX
         7J1ZuaWSlWXgZxnk2Q8Ey8yL/MlmCsUDQvtdgafeZ5QBjbAyzFdJ9S39Eih5ZopYalA3
         OdPg==
Original-Received: by 10.52.179.129 with SMTP id dg1mr8507620vdc.71.1343624281897; Sun,
 29 Jul 2012 21:58:01 -0700 (PDT)
Original-Received: by 10.58.161.81 with HTTP; Sun, 29 Jul 2012 21:58:01 -0700 (PDT)
In-Reply-To: <5013069F.3080306@gmail.com>
Original-Sender: netdev-owner@vger.kernel.org
Precedence: bulk
List-ID: <netdev.vger.kernel.org>
X-Mailing-List: netdev@vger.kernel.org
Xref: news.gmane.org gmane.linux.network:238678 gmane.linux.kernel:1334884
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334884>

On 7/28/12, Vlad Yasevich <vyasevich@gmail.com> wrote:
> here is an untested prototype of what I was talking about.  This should
> handle multiple data chunks.

Yes, it works if only the end of the DATA chunk in a packet has
invalid stream identifier
and I have verified this patch by my test case, but what happens if
there are multiple
DATA chunks which have invalid stream identifier in a packet?

Consider the below example:
A packet has several chunks bundling together: "COOKIE_ECHO DATA DATA", both
of the two DATA chunks have invalid stream identifier, then the
response will be
"COOKIE_ACK ERROR SACK ERROR", right?



Thanks,
Xufeng Zhang

>
> -vlad
>
> ---
>   include/net/sctp/command.h |    1 +
>   net/sctp/sm_sideeffect.c   |   22 ++++++++++++++++++++++
>   net/sctp/sm_statefuns.c    |   18 ++++++++++--------
>   3 files changed, 33 insertions(+), 8 deletions(-)
>
> diff --git a/include/net/sctp/command.h b/include/net/sctp/command.h
> index 712b3be..4043445 100644
> --- a/include/net/sctp/command.h
> +++ b/include/net/sctp/command.h
> @@ -110,6 +110,7 @@ typedef enum {
>   	SCTP_CMD_SEND_NEXT_ASCONF, /* Send the next ASCONF after ACK */
>   	SCTP_CMD_PURGE_ASCONF_QUEUE, /* Purge all asconf queues.*/
>   	SCTP_CMD_SET_ASOC,	 /* Restore association context */
> +	SCTP_CMD_GEN_BAD_STREAM, /* Issue an Invalid Stream error */
>   	SCTP_CMD_LAST
>   } sctp_verb_t;
>
> diff --git a/net/sctp/sm_sideeffect.c b/net/sctp/sm_sideeffect.c
> index 1ff51c9..c5a1322 100644
> --- a/net/sctp/sm_sideeffect.c
> +++ b/net/sctp/sm_sideeffect.c
> @@ -1036,6 +1036,22 @@ static void sctp_cmd_send_asconf(struct
> sctp_association *asoc)
>   	}
>   }
>
> +static void sctp_cmd_make_inv_stream_err(sctp_cmd_seq_t *commands,
> +					 struct sctp_association *asoc,
> +					 struct sctp_chunk *chunk,
> +					 struct sctp_datahdr *data_hdr)
> +{
> +	struct sctp_chunk *err;
> +
> +	err = sctp_make_op_error(asoc, chunk, SCTP_ERROR_INV_STRM,
> +				 &data_hdr->stream,
> +				 sizeof(data_hdr->stream),
> +				 sizeof(u16));
> +	if (err)
> +		sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,
> +					SCTP_CHUNK(err));
> +}
> +
>
>   /* These three macros allow us to pull the debugging code out of the
>    * main flow of sctp_do_sm() to keep attention focused on the real
> @@ -1700,6 +1716,12 @@ static int sctp_cmd_interpreter(sctp_event_t
> event_type,
>   			asoc = cmd->obj.asoc;
>   			break;
>
> +		case SCTP_CMD_GEN_BAD_STREAM:
> +			sctp_cmd_make_inv_stream_err(commands,
> +					 asoc, chunk,
> +					 (struct sctp_datahdr *)cmd->obj.ptr);
> +			break;
> +
>   		default:
>   			pr_warn("Impossible command: %u, %p\n",
>   				cmd->verb, cmd->obj.ptr);
> diff --git a/net/sctp/sm_statefuns.c b/net/sctp/sm_statefuns.c
> index 891f5db..57532e3 100644
> --- a/net/sctp/sm_statefuns.c
> +++ b/net/sctp/sm_statefuns.c
> @@ -2972,6 +2972,12 @@ discard_noforce:
>   	if (chunk->end_of_packet)
>   		sctp_add_cmd_sf(commands, SCTP_CMD_GEN_SACK, force);
>
> +	/* Queue the INVALID STREAM error after the SACK if one is needed. */
> +	if (SCTP_IERROR_BAD_STREAM == error) {
> +		sctp_add_cmd_sf(commands, SCTP_CMD_GEN_BAD_STREAM,
> +				SCTP_PTR(chunk->subh.data_hdr));
> +	}
> +
>   	return SCTP_DISPOSITION_DISCARD;
>   consume:
>   	return SCTP_DISPOSITION_CONSUME;
> @@ -3044,6 +3050,10 @@ sctp_disposition_t
> sctp_sf_eat_data_fast_4_4(const struct sctp_endpoint *ep,
>   		 */
>   		sctp_add_cmd_sf(commands, SCTP_CMD_GEN_SHUTDOWN, SCTP_NULL());
>   		sctp_add_cmd_sf(commands, SCTP_CMD_GEN_SACK, SCTP_FORCE());
> +		if (SCTP_IERROR_BAD_STREAM == error) {
> +			sctp_add_cmd_sf(commands, SCTP_CMD_GEN_BAD_STREAM,
> +					SCTP_PTR(chunk->subh.data_hdr));
> +		}
>   		sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_RESTART,
>   				SCTP_TO(SCTP_EVENT_TIMEOUT_T2_SHUTDOWN));
>   	}
> @@ -6140,14 +6150,6 @@ static int sctp_eat_data(const struct
> sctp_association *asoc,
>   	if (sid >= asoc->c.sinit_max_instreams) {
>   		/* Mark tsn as received even though we drop it */
>   		sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_TSN, SCTP_U32(tsn));
> -
> -		err = sctp_make_op_error(asoc, chunk, SCTP_ERROR_INV_STRM,
> -					 &data_hdr->stream,
> -					 sizeof(data_hdr->stream),
> -					 sizeof(u16));
> -		if (err)
> -			sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,
> -					SCTP_CHUNK(err));
>   		return SCTP_IERROR_BAD_STREAM;
>   	}
>
> -- 1.7.7.6
>
>
>
