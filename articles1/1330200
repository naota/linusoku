Path: news.gmane.org!not-for-mail
From: Axel Lin <axel.lin@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH RFT 1/2] regulator: mc13892: Simplify implementation of
 mc13892_sw_regulator_set_voltage_sel()
Date: Thu, 19 Jul 2012 15:10:31 +0800
Lines: 80
Approved: news@gmane.org
Message-ID: <1342681831.13385.1.camel@phoenix>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1342681858 15775 80.91.229.3 (19 Jul 2012 07:10:58 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 19 Jul 2012 07:10:58 +0000 (UTC)
Cc: Fabio Estevam <fabio.estevam@freescale.com>,
	Sascha Hauer <s.hauer@pengutronix.de>,
	Arnaud Patard <arnaud.patard@rtp-net.org>,
	Liam Girdwood <lrg@ti.com>, linux-kernel@vger.kernel.org
To: Mark Brown <broonie@opensource.wolfsonmicro.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 19 09:10:56 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Srksv-0002QP-4L
	for glk-linux-kernel-3@plane.gmane.org; Thu, 19 Jul 2012 09:10:53 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752329Ab2GSHKo (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 19 Jul 2012 03:10:44 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:48215 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751221Ab2GSHKm (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 19 Jul 2012 03:10:42 -0400
Original-Received: by yhmm54 with SMTP id m54so2443892yhm.19
        for <linux-kernel@vger.kernel.org>; Thu, 19 Jul 2012 00:10:41 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:subject:from:to:cc:date:content-type:x-mailer
         :content-transfer-encoding:mime-version;
        bh=5emSnuTVx/Su44w4t1Z0+KCCG6ZNWQGVWzPaLpjg3UU=;
        b=dheciie98eQcUPf+5mK9SGQMMEwQNQpOKVsQaw/Ytuy74vjYyd3+6I7TwZkhxD3CFJ
         JU7ka756YVg47vpZsOJceD3RArumV+ASB2UiJxYL6CUXFV4hAoQSQ1fdptK3HTADoMyI
         ImDzN/+buK3NsnqYJkmp9TX1fo0XsdvB3y6Z3B8nCR+Egs1WO6SsGWxKWqv+604dx5a6
         LHdadgtJ4dt+Jn6rl71UstGv2gp1uUAsB33NOTDWHDtiJo1SqdLOdV08g4NU8UZg9w39
         s/3la21Dq1YXnEmqWbGgUhyjT5jw84ZAtq7MlCVx9/Tnklo0Bb7OwtREKu+/urcXytDc
         PKXg==
Original-Received: by 10.68.195.97 with SMTP id id1mr2889730pbc.91.1342681841308;
        Thu, 19 Jul 2012 00:10:41 -0700 (PDT)
Original-Received: from [114.39.109.175] (114-39-109-175.dynamic.hinet.net. [114.39.109.175])
        by mx.google.com with ESMTPS id pc6sm1223527pbc.47.2012.07.19.00.10.37
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 19 Jul 2012 00:10:40 -0700 (PDT)
X-Mailer: Evolution 3.2.3-0ubuntu6 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330200
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330200>

Use mc13xxx_reg_rmw rather than a mc13xxx_reg_read and a mc13xxx_reg_write calls.

This logic to set MC13892_SWITCHERS0_SWxHI bit is pretty simple:

if (volt > 1375000)
        set MC13892_SWITCHERS0_SWxHI bit
else if (volt < 1100000)
        clear MC13892_SWITCHERS0_SWxHI bit
else
        leave MC13892_SWITCHERS0_SWxHI bit untouched

We already know the selector, so we don't need to calculate the selector again.

Signed-off-by: Axel Lin <axel.lin@gmail.com>
---
 drivers/regulator/mc13892-regulator.c |   42 ++++++++++++---------------------
 1 file changed, 15 insertions(+), 27 deletions(-)

diff --git a/drivers/regulator/mc13892-regulator.c b/drivers/regulator/mc13892-regulator.c
index b388b74..60195b3 100644
--- a/drivers/regulator/mc13892-regulator.c
+++ b/drivers/regulator/mc13892-regulator.c
@@ -432,37 +432,25 @@ static int mc13892_sw_regulator_set_voltage_sel(struct regulator_dev *rdev,
 						unsigned selector)
 {
 	struct mc13xxx_regulator_priv *priv = rdev_get_drvdata(rdev);
-	int hi, value, mask, id = rdev_get_id(rdev);
-	u32 valread;
+	int volt, mask, id = rdev_get_id(rdev);
+	u32 reg_value;
 	int ret;
 
-	value = rdev->desc->volt_table[selector];
+	volt = rdev->desc->volt_table[selector];
+	mask = mc13892_regulators[id].vsel_mask;
+	reg_value = selector << mc13892_regulators[id].vsel_shift;
 
-	mc13xxx_lock(priv->mc13xxx);
-	ret = mc13xxx_reg_read(priv->mc13xxx,
-		mc13892_regulators[id].vsel_reg, &valread);
-	if (ret)
-		goto err;
+	if (volt > 1375000) {
+		mask |= MC13892_SWITCHERS0_SWxHI;
+		reg_value |= MC13892_SWITCHERS0_SWxHI;
+	} else if (volt < 1100000) {
+		mask |= MC13892_SWITCHERS0_SWxHI;
+		reg_value &= ~MC13892_SWITCHERS0_SWxHI;
+	}
 
-	if (value > 1375000)
-		hi = 1;
-	else if (value < 1100000)
-		hi = 0;
-	else
-		hi = valread & MC13892_SWITCHERS0_SWxHI;
-
-	if (hi) {
-		value = (value - 1100000) / 25000;
-		value |= MC13892_SWITCHERS0_SWxHI;
-	} else
-		value = (value - 600000) / 25000;
-
-	mask = mc13892_regulators[id].vsel_mask | MC13892_SWITCHERS0_SWxHI;
-	valread = (valread & ~mask) |
-			(value << mc13892_regulators[id].vsel_shift);
-	ret = mc13xxx_reg_write(priv->mc13xxx, mc13892_regulators[id].vsel_reg,
-			valread);
-err:
+	mc13xxx_lock(priv->mc13xxx);
+	ret = mc13xxx_reg_rmw(priv->mc13xxx, mc13892_regulators[id].reg, mask,
+			      reg_value);
 	mc13xxx_unlock(priv->mc13xxx);
 
 	return ret;
-- 
1.7.9.5



