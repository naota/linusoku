Path: news.gmane.org!not-for-mail
From: Glauber Costa <glommer@parallels.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [PATCH] slub: use free_page instead of put_page for freeing kmalloc
 allocation
Date: Thu, 2 Aug 2012 20:51:31 +0400
Lines: 59
Approved: news@gmane.org
Message-ID: <501AB013.1090607@parallels.com>
References: <1343913065-14631-1-git-send-email-glommer@parallels.com> <alpine.DEB.2.00.1208020902390.23049@router.home> <20120802164203.GA30111@cmpxchg.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343926302 27944 80.91.229.3 (2 Aug 2012 16:51:42 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 16:51:42 +0000 (UTC)
Cc: Christoph Lameter <cl@linux.com>, <linux-kernel@vger.kernel.org>, Andrew
 Morton <akpm@linux-foundation.org>, <linux-mm@kvack.org>, David Rientjes
	<rientjes@google.com>, Pekka Enberg <penberg@kernel.org>
To: Johannes Weiner <hannes@cmpxchg.org>
Original-X-From: owner-linux-mm@kvack.org Thu Aug 02 18:51:41 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1Swyce-0006rF-VK
	for glkm-linux-mm-2@m.gmane.org; Thu, 02 Aug 2012 18:51:41 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 988486B004D; Thu,  2 Aug 2012 12:51:39 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 87EAB6B005A; Thu,  2 Aug 2012 12:51:39 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 56D7F6B005D; Thu,  2 Aug 2012 12:51:39 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx139.postini.com [74.125.245.139])
	by kanga.kvack.org (Postfix) with SMTP id 976A16B004D
	for <linux-mm@kvack.org>; Thu,  2 Aug 2012 12:51:38 -0400 (EDT)
Original-Received: from mx2.parallels.com ([64.131.90.16]) (using TLSv1) by na3sys010amx139.postini.com ([74.125.244.10]) with SMTP;
	Thu, 02 Aug 2012 16:51:38 GMT
Original-Received: from [199.115.105.252] (helo=mail.parallels.com)
	by mx2.parallels.com with esmtps (TLSv1:AES128-SHA:128)
	(Exim 4.77)
	(envelope-from <glommer@parallels.com>)
	id 1Swycb-0002z9-4X; Thu, 02 Aug 2012 12:51:37 -0400
Original-Received: from straightjacket.localdomain (109.173.1.99) by mail.parallels.com
 (10.255.249.32) with Microsoft SMTP Server (TLS) id 14.2.247.3; Thu, 2 Aug
 2012 09:51:36 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120717 Thunderbird/14.0
In-Reply-To: <20120802164203.GA30111@cmpxchg.org>
X-Originating-IP: [109.173.1.99]
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-pstn-settings: 3 (1.0000:1.0000) s cv gt3 gt2 gt1 r p m c 
X-pstn-addresses: from <glommer@parallels.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83453 gmane.linux.kernel:1336919
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336919>

On 08/02/2012 08:42 PM, Johannes Weiner wrote:
> On Thu, Aug 02, 2012 at 09:06:41AM -0500, Christoph Lameter wrote:
>> On Thu, 2 Aug 2012, Glauber Costa wrote:
>>
>>> diff --git a/mm/slub.c b/mm/slub.c
>>> index e517d43..9ca4e20 100644
>>> --- a/mm/slub.c
>>> +++ b/mm/slub.c
>>> @@ -3453,7 +3453,7 @@ void kfree(const void *x)
>>>  	if (unlikely(!PageSlab(page))) {
>>>  		BUG_ON(!PageCompound(page));
>>>  		kmemleak_free(x);
>>> -		put_page(page);
>>> +		__free_pages(page, compound_order(page));
>>
>> Hmmm... put_page would have called put_compound_page(). which would have
>> called the dtor function. dtor is set to __free_pages() ok which does
>> mlock checks and verifies that the page is in a proper condition for
>> freeing. Then it calls free_one_page().
>>
>> __free_pages() decrements the refcount and then calls __free_pages_ok().
>>
>> So we loose the checking and the dtor stuff with this patch. Guess that is
>> ok?
> 
> The changelog is not correct, however.  People DO get pages underlying
> slab objects and even free the slab objects before returning the page.
> See recent fix:

Well, yes, in the sense that slab objects are page-backed.

The point is that a user of kmalloc/kfree should not treat a memory area
as if it were a page, even if it is page-sized.

If it is just the Changelog you are unhappy about, I can do another
submission rewording it.

> commit 5bf5f03c271907978489868a4c72aeb42b5127d2
> Author: Pravin B Shelar <pshelar@nicira.com>
> Date:   Tue May 29 15:06:49 2012 -0700
> 
>     mm: fix slab->page flags corruption
>     
>     Transparent huge pages can change page->flags (PG_compound_lock) without
>     taking Slab lock.  Since THP can not break slab pages we can safely access
>     compound page without taking compound lock.
>     
>     Specifically this patch fixes a race between compound_unlock() and slab
>     functions which perform page-flags updates.  This can occur when
>     get_page()/put_page() is called on a page from slab.

This is just another argument not to do put_page on slab pages!

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

