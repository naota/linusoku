Path: news.gmane.org!not-for-mail
From: Sachin Kamat <sachin.kamat@linaro.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.janitors
Subject: Re: [PATCH 5/5] drivers/video/exynos/exynos_dp_core.c: use devm_ functions
Date: Wed, 1 Aug 2012 10:08:28 +0530
Lines: 179
Approved: news@gmane.org
Message-ID: <CAK9yfHyvHEPQRFvuX6q5CZEEN_6xeTqWvitdtayib6W8t0qCWw@mail.gmail.com>
References: <1343752762-16861-1-git-send-email-damien.cassou@lifl.fr>
	<1343752762-16861-6-git-send-email-damien.cassou@lifl.fr>
	<002c01cd6f73$4252b090$c6f811b0$%han@samsung.com>
	<CAK9yfHzje6NLqi5ixxA3J4aT1a9p6wJNJePzTi4xG9LN6AeLVw@mail.gmail.com>
	<003e01cd6f9e$5a1146d0$0e33d470$%han@samsung.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343795922 23071 80.91.229.3 (1 Aug 2012 04:38:42 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 1 Aug 2012 04:38:42 +0000 (UTC)
Cc: Damien Cassou <damien.cassou@lifl.fr>,
	kernel-janitors@vger.kernel.org,
	Florian Tobias Schandinat <FlorianSchandinat@gmx.de>,
	linux-fbdev@vger.kernel.org, linux-kernel@vger.kernel.org
To: Jingoo Han <jg1.han@samsung.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 01 06:38:41 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SwQhk-0002gA-4w
	for glk-linux-kernel-3@plane.gmane.org; Wed, 01 Aug 2012 06:38:40 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751644Ab2HAEib (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 1 Aug 2012 00:38:31 -0400
Original-Received: from mail-vb0-f46.google.com ([209.85.212.46]:58572 "EHLO
	mail-vb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751157Ab2HAEi3 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 1 Aug 2012 00:38:29 -0400
Original-Received: by vbbff1 with SMTP id ff1so6580716vbb.19
        for <linux-kernel@vger.kernel.org>; Tue, 31 Jul 2012 21:38:28 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-gm-message-state;
        bh=Rru2IgDz8HVjt3EAPvTjunWcoUzESZ8IaZm3yAaSIoU=;
        b=d+tSz7bAfE9AMnIt0GaRKvuEgycp7uGii7gR3uSizkeFqbojNczFR6rZ2uG9ty127M
         6uRY67zke31UhCqqFde96qJ3AB/ECF3SpBFfXJdwXMJxq5+vCXcRLjPbv3EHkwJX9z5k
         F0m4zr9xC04UtwsNnlYN/dlzQyNtSLsUkfhQsMGxAvzFQKVlsmBJ4AZxXruDdapdAHO3
         1/ElUfQDC+skxhY024xpqA5zSjtQs1lo3r/kA3U7RRM7SrFRW+FoF0U5U9nBXaF7aDKq
         z8NVExKaivrFBnmVQMQ1OdbpOcHLzlDuCyZLj4CCUldvpUrd354hXg2OUoJyfFsLOtDm
         Nbtg==
Original-Received: by 10.52.94.36 with SMTP id cz4mr14226774vdb.10.1343795908704; Tue,
 31 Jul 2012 21:38:28 -0700 (PDT)
Original-Received: by 10.52.173.198 with HTTP; Tue, 31 Jul 2012 21:38:28 -0700 (PDT)
In-Reply-To: <003e01cd6f9e$5a1146d0$0e33d470$%han@samsung.com>
X-Gm-Message-State: ALoCoQlbZhDmANPz0YlhIeclxC42MshLYeR7GbzjQJGQXov3SKobzBPwVEF/uKeGMD91b86VV2HT
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1336156 gmane.linux.kernel.janitors:25304
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336156>

On 1 August 2012 10:00, Jingoo Han <jg1.han@samsung.com> wrote:
> On Wednesday, August 01, 2012 1:00 PMSachin Kamat wrote:
>>
>> On 1 August 2012 04:51, Jingoo Han <jg1.han@samsung.com> wrote:
>> > On Wednesday, August 01, 2012 1:39 AM Damien Cassou wrote:
>> >>
>> >> From: Damien Cassou <damien.cassou@lifl.fr>
>> >>
>> >> The various devm_ functions allocate memory that is released when a driver
>> >> detaches.  This patch uses these functions for data that is allocated in
>> >> the probe function of a platform device and is only freed in the remove
>> >> function.
>> >>
>> >> Signed-off-by: Damien Cassou <damien.cassou@lifl.fr>
>> >>
>> >> ---
>> >>  drivers/video/exynos/exynos_dp_core.c |   27 +++++++--------------------
>> >>  1 file changed, 7 insertions(+), 20 deletions(-)
>> >>
>> >> diff --git a/drivers/video/exynos/exynos_dp_core.c b/drivers/video/exynos/exynos_dp_core.c
>> >> index c6c016a..00fe4f0 100644
>> >> --- a/drivers/video/exynos/exynos_dp_core.c
>> >> +++ b/drivers/video/exynos/exynos_dp_core.c
>> >> @@ -872,7 +872,7 @@ static int __devinit exynos_dp_probe(struct platform_device *pdev)
>> >>
>> >>       dp->dev = &pdev->dev;
>> >>
>> >> -     dp->clock = clk_get(&pdev->dev, "dp");
>> >> +     dp->clock = devm_clk_get(&pdev->dev, "dp");
>> >>       if (IS_ERR(dp->clock)) {
>> >>               dev_err(&pdev->dev, "failed to get clock\n");
>> >>               return PTR_ERR(dp->clock);
>> >> @@ -881,31 +881,24 @@ static int __devinit exynos_dp_probe(struct platform_device *pdev)
>> >>       clk_enable(dp->clock);
>> >>
>> >>       res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
>> >> -     if (!res) {
>> >> -             dev_err(&pdev->dev, "failed to get registers\n");
>> >> -             ret = -EINVAL;
>> >> -             goto err_clock;
>> >> -     }
>> >
>> > Why do you remove this return check?
>> > If there is no reason, please, do it as follows:
>> >
>> >         res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
>> >         if (!res) {
>> >                 dev_err(&pdev->dev, "failed to get registers\n");
>> > -               ret = -EINVAL;
>> > -               goto err_clock;
>> > +               return -EINVAL;
>> >         }
>> >
>> >
>>
>> devm_request_and_ioremap function checks the validity of res. Hence
>> this check above is redundant and can be removed.
>
>
> I don't think so.
> Even though function called next checks the NULL value,
> for robustness, the return value of platform_get_resource() should be
> checked.
>
> It is possible that devm_request_and_ioremap() can be changed in the future,
> as request_mem_region() & ioremap() were changed to devm_request_and_ioremap().

They are not changed. They still exist.  devm_request_and_ioremap() is
an additional function provided for device managed resources.


>
>
> Best regards,
> Jingoo Han
>
>
>>
>> Damien,
>> This patch only adds devm_clk_get() function. Hence you could make the
>> subject line more specific.
>>
>>
>>
>>
>> > Best regards,
>> > Jingoo Han
>> >
>> >
>> >>
>> >>       dp->reg_base = devm_request_and_ioremap(&pdev->dev, res);
>> >>       if (!dp->reg_base) {
>> >>               dev_err(&pdev->dev, "failed to ioremap\n");
>> >> -             ret = -ENOMEM;
>> >> -             goto err_clock;
>> >> +             return -ENOMEM;
>> >>       }
>> >>
>> >>       dp->irq = platform_get_irq(pdev, 0);
>> >>       if (!dp->irq) {
>> >>               dev_err(&pdev->dev, "failed to get irq\n");
>> >> -             ret = -ENODEV;
>> >> -             goto err_clock;
>> >> +             return -ENODEV;
>> >>       }
>> >>
>> >>       ret = devm_request_irq(&pdev->dev, dp->irq, exynos_dp_irq_handler, 0,
>> >>                               "exynos-dp", dp);
>> >>       if (ret) {
>> >>               dev_err(&pdev->dev, "failed to request irq\n");
>> >> -             goto err_clock;
>> >> +             return ret;
>> >>       }
>> >>
>> >>       dp->video_info = pdata->video_info;
>> >> @@ -917,7 +910,7 @@ static int __devinit exynos_dp_probe(struct platform_device *pdev)
>> >>       ret = exynos_dp_detect_hpd(dp);
>> >>       if (ret) {
>> >>               dev_err(&pdev->dev, "unable to detect hpd\n");
>> >> -             goto err_clock;
>> >> +             return ret;
>> >>       }
>> >>
>> >>       exynos_dp_handle_edid(dp);
>> >> @@ -926,7 +919,7 @@ static int __devinit exynos_dp_probe(struct platform_device *pdev)
>> >>                               dp->video_info->link_rate);
>> >>       if (ret) {
>> >>               dev_err(&pdev->dev, "unable to do link train\n");
>> >> -             goto err_clock;
>> >> +             return ret;
>> >>       }
>> >>
>> >>       exynos_dp_enable_scramble(dp, 1);
>> >> @@ -940,17 +933,12 @@ static int __devinit exynos_dp_probe(struct platform_device *pdev)
>> >>       ret = exynos_dp_config_video(dp, dp->video_info);
>> >>       if (ret) {
>> >>               dev_err(&pdev->dev, "unable to config video\n");
>> >> -             goto err_clock;
>> >> +             return ret;
>> >>       }
>> >>
>> >>       platform_set_drvdata(pdev, dp);
>> >>
>> >>       return 0;
>> >> -
>> >> -err_clock:
>> >> -     clk_put(dp->clock);
>> >> -
>> >> -     return ret;
>> >>  }
>> >>
>> >>  static int __devexit exynos_dp_remove(struct platform_device *pdev)
>> >> @@ -962,7 +950,6 @@ static int __devexit exynos_dp_remove(struct platform_device *pdev)
>> >>               pdata->phy_exit();
>> >>
>> >>       clk_disable(dp->clock);
>> >> -     clk_put(dp->clock);
>> >>
>> >>       return 0;
>> >>  }
>> >
>> > --
>> > To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
>> > the body of a message to majordomo@vger.kernel.org
>> > More majordomo info at  http://vger.kernel.org/majordomo-info.html
>> > Please read the FAQ at  http://www.tux.org/lkml/
>>
>>
>>
>> --
>> With warm regards,
>> Sachin
>



-- 
With warm regards,
Sachin
