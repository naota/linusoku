Path: news.gmane.org!not-for-mail
From: Anton Vorontsov <cbouatmailru@gmail.com>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.debugging.kgdb.bugs
Subject: Re: [PATCH 0/7] KDB: Kiosk (reduced capabilities) mode
Date: Fri, 27 Jul 2012 18:26:32 -0700
Lines: 93
Approved: news@gmane.org
Message-ID: <20120728012632.GA1766@lizard>
References: <20120726142514.GA32158@lizard>
 <CAMbhsRSM3QwwVfUMBWq1bDJxHX+Ox2CQtbvJVmemuMWjxfmDoQ@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=utf-8
X-Trace: dough.gmane.org 1343438972 21966 80.91.229.3 (28 Jul 2012 01:29:32 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 28 Jul 2012 01:29:32 +0000 (UTC)
Cc: Jason Wessel <jason.wessel@windriver.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	Steven Rostedt <rostedt@goodmis.org>,
	John Stultz <john.stultz@linaro.org>, arve@android.com,
	linux-kernel@vger.kernel.org, linaro-kernel@lists.linaro.org,
	patches@linaro.org, kernel-team@android.com,
	kgdb-bugreport@lists.sourceforge.net,
	Alan Cox <alan@lxorguk.ukuu.org.uk>
To: Colin Cross <ccross@google.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Jul 28 03:29:29 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuvqR-0002NA-PA
	for glk-linux-kernel-3@plane.gmane.org; Sat, 28 Jul 2012 03:29:28 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752781Ab2G1B3F (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 27 Jul 2012 21:29:05 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:36246 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752534Ab2G1B2k (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 27 Jul 2012 21:28:40 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rp8so5909808pbb.19
        for <linux-kernel@vger.kernel.org>; Fri, 27 Jul 2012 18:28:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent;
        bh=InpYs3U9clNK4seV6GdjSdsxbPkBPQqqORjfGItL7EA=;
        b=kEj0hdCQ7mm7jtGM3ZQ8At3s+xDW869+0FxBw5SgKpkX4tRbp4YzfpdssNjnjpaU+i
         4tqpp74LfT78Cxu+DMgmjBoQT/mOaeobeZ7t/FDq0CRRAKzOOd0L6csM5fjkVrbPGuJc
         1MsJGwgA5BvfhKjn6TVrpmIdCXePrao123yooIG/fUMN00LOC/toqmBmVg0wKd+/XcVY
         gvr4+B9cHKvbbizsvJuQPr1hiadJaK3DRyKlcxf8CnVRH9Ix/uB1fBK6+XNEXYSSLSd3
         TV85UJFL3Sz5dzA71fXm8ZQs0X/dtZKyHrPJtp3IYw2eLrwAwNeHae1XRJFQU+s8ssUV
         kkug==
Original-Received: by 10.66.88.40 with SMTP id bd8mr9174145pab.36.1343438920652;
        Fri, 27 Jul 2012 18:28:40 -0700 (PDT)
Original-Received: from localhost (c-71-204-165-222.hsd1.ca.comcast.net. [71.204.165.222])
        by mx.google.com with ESMTPS id nh8sm2930677pbc.60.2012.07.27.18.28.38
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 27 Jul 2012 18:28:39 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <CAMbhsRSM3QwwVfUMBWq1bDJxHX+Ox2CQtbvJVmemuMWjxfmDoQ@mail.gmail.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1334573 gmane.linux.kernel.debugging.kgdb.bugs:5710
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334573>

On Fri, Jul 27, 2012 at 12:30:49PM -0700, Colin Cross wrote:
> > The are two use-cases for the mode, one is evil, but another is quite
> > legitimate.
> >
> > The evil use case is used by some (ahem) phone manufaturers that want
> > to have a debuging facilities on a production device, but still don't
> > want you to use the debugger to gain root access. I don't like locked
> > phones, and I would not touch this/get my hands dirty by implementing
> > the feature just for this evil (IMHO) use case.
> 
> The point of the reduced feature set in FIQ debugger is not to prevent
> you from accessing your own phone, it designed to prevent others from
> trivially rooting your phone and reading your data.  Both locked and
> unlocked phones run FIQ debugger.  Would you carry a phone with
> personal data on it and KGDB enabled on the serial console?

Short answer: yes, I would carry such a phone. :-)

Long answer:

If someone was so interested in cracking the phone/data and so
ended up with attaching serial console and attempted to use debugger 
techniques to gain access to my data, then thief's next step would be
soldering a few wires to JTAG spots, and it will be all done in
minutes. Knowledge-wise, using JTAG is even more trivial than using the
debugger techniques to get to my data, you just need some HW skills.

Of course, this is unless you also have the JTAG somehow vendor-locked,
but then, personally, I consider it as an utter evil. For a person who
really interested in my data, attaching to a flash directly is also not
a problem (the imaginary thief already soldered JTAG and if it didn't
work, soldering a few more wires is not a big deal).

Maybe I'm paranoid here, but for me it is hard to believe that the
reduced set was not considered as a "feature" to make life more
difficult for normal users wanting their device rooted. According to
copyright dates, the FIQ debugger started very early, in 2008, when
most Android phone vendors were very unfriendly to hackers.

Btw, why do the lovely vendors allow me to use an external SD card on
the phone? My data is not protected, but the vendors suddenly no longer
care. So what changed between my data on the external SD card and in the
phone itself? Nothing. Vendors care about the root access itself, not my
data.

Really, I tend to care more about my naked pictures^W^W^W NDA documents
I should not have taken out of the office^W^W^W^W^W loads of private data
on the SD card, and less about my email password stored in phone's
memory. That's because if SD card is stolen/lost, everyone can read it,
any time. And if password is stolen, I have some time to change it.

All I see is a very artful way to sell shackles to naive people, and
this is exactly what phone vendors do by locking their devices. If I
want my data protected, I use encryption with *my* keys, I don't want
to be "protected" by the ways described above.

And the KDB lock doesn't help in a way that thieves no longer need to
disassemble the phone to erase all the data and resell the phone (if
serial port is available outside). A guy who bought the stolen phone
on eBay will never know that the phone was disassembled: only a
professional can tell whether warranty seals are original. The thief
would probably not even bother with restoring the seals, he can always
say that the phone needed a screen replacement. (Now someone might be
wondering why do I know so much about phones' black market... :-)

Still, I'm not saying that the feature is not useful at all, it is
useful. But to me, it is much more useful for public PCs/ATMs, when
a few keystrokes on a panicked ATM can open ATM's money depository.
Or just administrator don't like when wise kids get root (yup) on
classroom's PCs.

But if you say that it wasn't the case, and no one thought about the
reducing the debugger in the "evil" way, so be it, I trust you. But I
still don't trust the phone vendors. They showed their bad attitude
in many ways towards hackers, so I think we both have quite legitimate
reasons to be a little bit paranoid. :-)

> An alternate option would be to allow userspace to write a password
> hash to a sysfs file, and require the password to be entered over the
> serial console to unlock KGDB or enable unsafe KGDB commands.

Yup, that's a very nice idea. This can be implemented by introducing
"unlock" KDB command. Although, that also requires tight integration
w/ user-space, i.e. on boot userland would need to supply hashing
method, salt and root's password hash. The same has to be done on every
password change. It is surely doable, but not sure if it is worth the
efforts. Maybe, some day.

Thanks,

-- 
Anton Vorontsov
Email: cbouatmailru@gmail.com
