Path: news.gmane.org!not-for-mail
From: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
Newsgroups: gmane.linux.documentation,gmane.linux.kernel,gmane.comp.emulators.kvm.devel
Subject: [PATCH] Documentation/kvm : Add documentation on Hypercalls
Date: Tue, 24 Jul 2012 14:23:59 +0530
Lines: 103
Approved: news@gmane.org
Message-ID: <20120724085359.11344.91022.sendpatchset@codeblue.in.ibm.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343120242 23338 80.91.229.3 (24 Jul 2012 08:57:22 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 08:57:22 +0000 (UTC)
Cc: Alexander Graf <agraf@suse.de>,
	Randy Dunlap <rdunlap@xenotime.net>, KVM <kvm@vger.kernel.org>,
	"H. Peter Anvin" <hpa@zytor.com>,
	Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>,
	Marcelo Tosatti <mtosatti@redhat.com>,
	Gleb Natapov <gleb@redhat.com>, Ingo Molnar <mingo@redhat.com>,
	Avi Kivity <avi@redhat.com>,
	Jan Kiszka <jan.kiszka@siemens.com>
To: Rob Landley <rob@landley.net>, linux-kernel@vger.kernel.org,
	linux-doc@vger.kernel.org
Original-X-From: linux-doc-owner@vger.kernel.org Tue Jul 24 10:57:17 2012
Return-path: <linux-doc-owner@vger.kernel.org>
Envelope-to: lnx-linux-doc@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-doc-owner@vger.kernel.org>)
	id 1StavV-00064e-Lf
	for lnx-linux-doc@plane.gmane.org; Tue, 24 Jul 2012 10:57:10 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752086Ab2GXI4y (ORCPT <rfc822;lnx-linux-doc@m.gmane.org>);
	Tue, 24 Jul 2012 04:56:54 -0400
Original-Received: from e23smtp09.au.ibm.com ([202.81.31.142]:56526 "EHLO
	e23smtp09.au.ibm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751965Ab2GXI4x (ORCPT
	<rfc822;linux-doc@vger.kernel.org>); Tue, 24 Jul 2012 04:56:53 -0400
Original-Received: from /spool/local
	by e23smtp09.au.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
	for <linux-doc@vger.kernel.org> from <raghavendra.kt@linux.vnet.ibm.com>;
	Tue, 24 Jul 2012 18:56:33 +1000
Original-Received: from d23relay03.au.ibm.com (202.81.31.245)
	by e23smtp09.au.ibm.com (202.81.31.206) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
	Tue, 24 Jul 2012 18:56:05 +1000
Original-Received: from d23av04.au.ibm.com (d23av04.au.ibm.com [9.190.235.139])
	by d23relay03.au.ibm.com (8.13.8/8.13.8/NCO v10.0) with ESMTP id q6O8uGEV43974826;
	Tue, 24 Jul 2012 18:56:16 +1000
Original-Received: from d23av04.au.ibm.com (loopback [127.0.0.1])
	by d23av04.au.ibm.com (8.14.4/8.13.1/NCO v10.0 AVout) with ESMTP id q6O8uFGf018187;
	Tue, 24 Jul 2012 18:56:15 +1000
Original-Received: from codeblue.in.ibm.com (codeblue.in.ibm.com [9.124.35.142])
	by d23av04.au.ibm.com (8.14.4/8.13.1/NCO v10.0 AVin) with ESMTP id q6O8uCUs018115;
	Tue, 24 Jul 2012 18:56:12 +1000
x-cbid: 12072408-3568-0000-0000-00000230B2D4
Original-Sender: linux-doc-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-doc.vger.kernel.org>
X-Mailing-List: linux-doc@vger.kernel.org
Xref: news.gmane.org gmane.linux.documentation:5859 gmane.linux.kernel:1332202 gmane.comp.emulators.kvm.devel:94948
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332202>

From: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>

Thanks Alex for KVM_HC_FEATURES inputs and Jan for VAPIC_POLL_IRQ,
and Peter (HPA) for suggesting hypercall ABI addition.

Signed-off-by: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
---
Please have a closer look at Hypercall ABI newly added

Changes since last post:
 - Added hypercall ABI (Peter)
 - made KVM_HC_VAPIC_POLL_IRQ active explicitly (Randy)

TODO: We need to add history details of each hypercall as suggested by HPA,
which I could not trace easily. Hope it is easy for hypercall authors

 Documentation/virtual/hypercalls.txt |   71 ++++++++++++++++++++++++++++++++++
 1 files changed, 71 insertions(+), 0 deletions(-)
 create mode 100644 Documentation/virtual/hypercalls.txt

diff --git a/Documentation/virtual/hypercalls.txt b/Documentation/virtual/hypercalls.txt
new file mode 100644
index 0000000..caffc08
--- /dev/null
+++ b/Documentation/virtual/hypercalls.txt
@@ -0,0 +1,71 @@
+Hypercall ABI:
+=============
+A brief look at calling conventions of X86, S390 and PPC
+X86:
+ KVM Hypercalls have a three-byte sequence of either the vmrun or the vmmrun
+ instruction. The hypervisor can replace it with instructions that are
+ guaranteed to be supported.
+
+ Up to four arguments may be passed in rbx, rcx, rdx, and rsi respectively.
+ The hypercall number should be placed in rax and the return value will be
+ placed in rax.  No other registers will be clobbered unless explicitly stated
+ by the particular hypercall.
+
+S390:
+  R2-R7 are used for parameters 1-6. In addition, R1 is used for hypercall
+  number. The return value is written to R2.
+
+  S390 uses diagnose instruction as hypercall (0x500) along with hypercall
+  number in R1.
+
+ PoewerPC:
+  It uses R3-R10 and hypercall number in R11. R4-R11 are used as output registers.
+  Return value is placed in R3.
+
+  KVM hypercalls uses 4 byte opcode, that are patched with 'hypercall-instructions'
+  property inside the device tree's /hypervisor node.
+  For more information refer to Documentation/virtual/kvm/ppc-pv.txt
+
+KVM Hypercalls Documentation
+===========================
+The template for each hypercall is:
+1. Hypercall name, value.
+2. Architecture(s)
+3. Status (deprecated, obsolete, active)
+4. Purpose
+
+1. KVM_HC_VAPIC_POLL_IRQ
+------------------------
+Value: 1
+Architecture: x86
+Status: active
+Purpose: Trigger guest exit so that the host can check for pending
+interrupts on reentry.
+
+2. KVM_HC_MMU_OP
+------------------------
+Value: 2
+Architecture: x86
+Status: deprecated.
+Purpose: Support MMU operations such as writing to PTE,
+flushing TLB, release PT.
+
+3. KVM_HC_FEATURES
+------------------------
+Value: 3
+Architecture: PPC
+Status: active
+Purpose: Expose hypercall availability to the guest. On x86 platforms, cpuid
+used to enumerate which hypercalls are available. On PPC, either device tree
+based lookup ( which is also what EPAPR dictates) OR KVM specific enumeration
+mechanism (which is this hypercall) can be used.
+
+4. KVM_HC_PPC_MAP_MAGIC_PAGE
+------------------------
+Value: 4
+Architecture: PPC
+Status: active
+Purpose: To enable communication between the hypervisor and guest there is a
+shared page that contains parts of supervisor visible register state.
+The guest can map this shared page to access its supervisor register through
+memory using this hypercall.

--
To unsubscribe from this list: send the line "unsubscribe linux-doc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

