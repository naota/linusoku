Path: news.gmane.org!not-for-mail
From: Fredrik Gustafsson <iveqy@iveqy.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH] [timer] Cleaned up according to scripts/check_patch.pl
Date: Sun, 22 Jul 2012 23:11:45 +0200
Lines: 118
Approved: news@gmane.org
Message-ID: <1342991505-18947-1-git-send-email-iveqy@iveqy.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1342991544 13297 80.91.229.3 (22 Jul 2012 21:12:24 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 22 Jul 2012 21:12:24 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, Fredrik Gustafsson <iveqy@iveqy.com>
To: tglx@linutronix.de
Original-X-From: linux-kernel-owner@vger.kernel.org Sun Jul 22 23:12:21 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1St3Rt-0003Le-Ff
	for glk-linux-kernel-3@plane.gmane.org; Sun, 22 Jul 2012 23:12:21 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752673Ab2GVVME (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 22 Jul 2012 17:12:04 -0400
Original-Received: from mail-lb0-f174.google.com ([209.85.217.174]:32788 "EHLO
	mail-lb0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752630Ab2GVVMB (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 22 Jul 2012 17:12:01 -0400
Original-Received: by lbbgm6 with SMTP id gm6so7178428lbb.19
        for <linux-kernel@vger.kernel.org>; Sun, 22 Jul 2012 14:12:00 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:from:to:cc:subject:date:message-id:x-mailer;
        bh=k5XozEA1lS1qcYSrRbD5sBkzpljcistzvcNa1wb14B0=;
        b=q/svu4T2vsjjpz9LzMnvRPWotNQOpJBaQ3Q8xUpp97ET8u3sFk3RGeFyn0nqSCbklE
         c628v3VLbfgG7RBaLtt/EMxbM9hF7472b90hqVMmCS6GhR7QBH6c3Bj5bSBNM+0ED+gV
         YobJZjBy+hEVcZvoQx1ZB2mY4/vuDbcISOsWHrkek3A857MdUyqDN6CSLOXtch5c/X1z
         rBcuY/6j6oX6S/lRauHFt9/XPTN6HaIuROevBA88yBmYyPSeAlxDlJ2XGUbUP89MvhPL
         Zd7LG+hgFakPSj/0BMWT932Oiw1pDXQ2R5NSXRVKQ1lJ9bErbeZ+8WyJE2+eVOHznrH+
         Eklw==
Original-Received: by 10.152.110.70 with SMTP id hy6mr4517355lab.44.1342991520055;
        Sun, 22 Jul 2012 14:12:00 -0700 (PDT)
Original-Received: from paksenarrion.iveqy.com (h-235-111.a189.priv.bahnhof.se. [81.170.235.111])
        by mx.google.com with ESMTPS id hz16sm11397015lab.6.2012.07.22.14.11.58
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 22 Jul 2012 14:11:59 -0700 (PDT)
Original-Received: from iveqy by paksenarrion.iveqy.com with local (Exim 4.72)
	(envelope-from <iveqy@paksenarrion.iveqy.com>)
	id 1St3RV-0004w7-1D; Sun, 22 Jul 2012 23:11:57 +0200
X-Mailer: git-send-email 1.7.2.5
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331422
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331422>

There's still 6 warnings left:
* WARNING: EXPORT_SYMBOL(foo); should immediately follow its
  function/variable

	This is an error in check_patch.pl

* WARNING: quoted string split across lines 1516: FILE: timer.c:1516:

	Is left unsolved because of lack of a good solution.

* WARNING: line over 80 characters

	Is not fixed, see https://lkml.org/lkml/2012/2/3/394

Signed-off-by: Fredrik Gustafsson <iveqy@iveqy.com>
---
 kernel/timer.c |   27 +++++++++++----------------
 1 files changed, 11 insertions(+), 16 deletions(-)

diff --git a/kernel/timer.c b/kernel/timer.c
index 6ec7e7e..a5ece2a 100644
--- a/kernel/timer.c
+++ b/kernel/timer.c
@@ -40,18 +40,16 @@
 #include <linux/irq_work.h>
 #include <linux/sched.h>
 #include <linux/slab.h>
-
-#include <asm/uaccess.h>
-#include <asm/unistd.h>
-#include <asm/div64.h>
-#include <asm/timex.h>
-#include <asm/io.h>
+#include <linux/uaccess.h>
+#include <linux/unistd.h>
+#include <linux/div64.h>
+#include <linux/timex.h>
+#include <linux/io.h>
 
 #define CREATE_TRACE_POINTS
 #include <trace/events/timer.h>
 
 u64 jiffies_64 __cacheline_aligned_in_smp = INITIAL_JIFFIES;
-
 EXPORT_SYMBOL(jiffies_64);
 
 /*
@@ -91,12 +89,12 @@ static DEFINE_PER_CPU(struct tvec_base *, tvec_bases) = &boot_tvec_bases;
 /* Functions below help us manage 'deferrable' flag */
 static inline unsigned int tbase_get_deferrable(struct tvec_base *base)
 {
-	return ((unsigned int)(unsigned long)base & TBASE_DEFERRABLE_FLAG);
+	return (unsigned int)(unsigned long)base & TBASE_DEFERRABLE_FLAG;
 }
 
 static inline struct tvec_base *tbase_get_base(struct tvec_base *base)
 {
-	return ((struct tvec_base *)((unsigned long)base & ~TBASE_DEFERRABLE_FLAG));
+	return (struct tvec_base *)((unsigned long)base & ~TBASE_DEFERRABLE_FLAG);
 }
 
 static inline void timer_set_deferrable(struct timer_list *timer)
@@ -1171,7 +1169,7 @@ static inline void __run_timers(struct tvec_base *base)
 			void (*fn)(unsigned long);
 			unsigned long data;
 
-			timer = list_first_entry(head, struct timer_list,entry);
+			timer = list_first_entry(head, struct timer_list, entry);
 			fn = timer->function;
 			data = timer->data;
 
@@ -1494,8 +1492,7 @@ signed long __sched schedule_timeout(signed long timeout)
 	struct timer_list timer;
 	unsigned long expire;
 
-	switch (timeout)
-	{
+	switch (timeout) {
 	case MAX_SCHEDULE_TIMEOUT:
 		/*
 		 * These two special cases are useful to be comfortable
@@ -1515,7 +1512,7 @@ signed long __sched schedule_timeout(signed long timeout)
 		 * that will tell you if something is gone wrong and where.
 		 */
 		if (timeout < 0) {
-			printk(KERN_ERR "schedule_timeout: wrong timeout "
+			pr_err("schedule_timeout: wrong timeout "
 				"value %lx\n", timeout);
 			dump_stack();
 			current->state = TASK_RUNNING;
@@ -1762,7 +1759,7 @@ static int __cpuinit timer_cpu_notify(struct notifier_block *self,
 	long cpu = (long)hcpu;
 	int err;
 
-	switch(action) {
+	switch (action) {
 	case CPU_UP_PREPARE:
 	case CPU_UP_PREPARE_FROZEN:
 		err = init_timers_cpu(cpu);
@@ -1809,7 +1806,6 @@ void msleep(unsigned int msecs)
 	while (timeout)
 		timeout = schedule_timeout_uninterruptible(timeout);
 }
-
 EXPORT_SYMBOL(msleep);
 
 /**
@@ -1824,7 +1820,6 @@ unsigned long msleep_interruptible(unsigned int msecs)
 		timeout = schedule_timeout_interruptible(timeout);
 	return jiffies_to_msecs(timeout);
 }
-
 EXPORT_SYMBOL(msleep_interruptible);
 
 static int __sched do_usleep_range(unsigned long min, unsigned long max)
-- 
1.7.2.5

