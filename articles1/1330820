Path: news.gmane.org!not-for-mail
From: Zhao Chenhui <chenhui.zhao@freescale.com>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.ppc64.devel
Subject: [PATCH v8 1/7] powerpc/smp: use a struct epapr_spin_table to replace macros
Date: Fri, 20 Jul 2012 20:42:33 +0800
Lines: 114
Approved: news@gmane.org
Message-ID: <1342788159-27529-2-git-send-email-chenhui.zhao@freescale.com>
References: <1342788159-27529-1-git-send-email-chenhui.zhao@freescale.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain
X-Trace: dough.gmane.org 1342788087 16990 80.91.229.3 (20 Jul 2012 12:41:27 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 20 Jul 2012 12:41:27 +0000 (UTC)
Cc: <linux-kernel@vger.kernel.org>, <leoli@freescale.com>
To: <linuxppc-dev@lists.ozlabs.org>, <scottwood@freescale.com>,
	<galak@kernel.crashing.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Jul 20 14:41:26 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SsCWI-0006Jg-SA
	for glk-linux-kernel-3@plane.gmane.org; Fri, 20 Jul 2012 14:41:23 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753441Ab2GTMlS (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 20 Jul 2012 08:41:18 -0400
Original-Received: from ch1ehsobe005.messaging.microsoft.com ([216.32.181.185]:54597
	"EHLO ch1outboundpool.messaging.microsoft.com" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1753314Ab2GTMlK (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 20 Jul 2012 08:41:10 -0400
Original-Received: from mail243-ch1-R.bigfish.com (10.43.68.240) by
 CH1EHSOBE017.bigfish.com (10.43.70.67) with Microsoft SMTP Server id
 14.1.225.23; Fri, 20 Jul 2012 12:41:09 +0000
Original-Received: from mail243-ch1 (localhost [127.0.0.1])	by
 mail243-ch1-R.bigfish.com (Postfix) with ESMTP id 9AF81108024C;	Fri, 20 Jul
 2012 12:41:09 +0000 (UTC)
X-Forefront-Antispam-Report: CIP:70.37.183.190;KIP:(null);UIP:(null);IPV:NLI;H:mail.freescale.net;RD:none;EFVD:NLI
X-SpamScore: 3
X-BigFish: VS3(zzc8kzz1202hzz8275bh8275dhz2dh2a8h668h839hd24he5bhf0ah107ah)
Original-Received: from mail243-ch1 (localhost.localdomain [127.0.0.1]) by mail243-ch1
 (MessageSwitch) id 1342788067314703_2282; Fri, 20 Jul 2012 12:41:07 +0000
 (UTC)
Original-Received: from CH1EHSMHS012.bigfish.com (snatpool2.int.messaging.microsoft.com
 [10.43.68.238])	by mail243-ch1.bigfish.com (Postfix) with ESMTP id
 414B91A80045;	Fri, 20 Jul 2012 12:41:07 +0000 (UTC)
Original-Received: from mail.freescale.net (70.37.183.190) by CH1EHSMHS012.bigfish.com
 (10.43.70.12) with Microsoft SMTP Server (TLS) id 14.1.225.23; Fri, 20 Jul
 2012 12:41:07 +0000
Original-Received: from az84smr01.freescale.net (10.64.34.197) by
 039-SN1MMR1-002.039d.mgd.msft.net (10.84.1.15) with Microsoft SMTP Server
 (TLS) id 14.2.298.5; Fri, 20 Jul 2012 07:41:06 -0500
Original-Received: from localhost.localdomain ([10.193.20.166])	by
 az84smr01.freescale.net (8.14.3/8.14.0) with ESMTP id q6KCevo8006731;	Fri, 20
 Jul 2012 05:41:03 -0700
X-Mailer: git-send-email 1.6.4.1
In-Reply-To: <1342788159-27529-1-git-send-email-chenhui.zhao@freescale.com>
X-OriginatorOrg: freescale.com
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330820 gmane.linux.ports.ppc64.devel:83701
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330820>

Signed-off-by: Zhao Chenhui <chenhui.zhao@freescale.com>
---
 arch/powerpc/platforms/85xx/smp.c |   46 ++++++++++++++++++------------------
 1 files changed, 23 insertions(+), 23 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/smp.c b/arch/powerpc/platforms/85xx/smp.c
index ff42490..4827709 100644
--- a/arch/powerpc/platforms/85xx/smp.c
+++ b/arch/powerpc/platforms/85xx/smp.c
@@ -2,7 +2,7 @@
  * Author: Andy Fleming <afleming@freescale.com>
  * 	   Kumar Gala <galak@kernel.crashing.org>
  *
- * Copyright 2006-2008, 2011 Freescale Semiconductor Inc.
+ * Copyright 2006-2008, 2011-2012 Freescale Semiconductor Inc.
  *
  * This program is free software; you can redistribute  it and/or modify it
  * under  the terms of  the GNU General  Public License as published by the
@@ -17,6 +17,7 @@
 #include <linux/of.h>
 #include <linux/kexec.h>
 #include <linux/highmem.h>
+#include <linux/cpu.h>
 
 #include <asm/machdep.h>
 #include <asm/pgtable.h>
@@ -31,23 +32,21 @@
 
 extern void __early_start(void);
 
-#define BOOT_ENTRY_ADDR_UPPER	0
-#define BOOT_ENTRY_ADDR_LOWER	1
-#define BOOT_ENTRY_R3_UPPER	2
-#define BOOT_ENTRY_R3_LOWER	3
-#define BOOT_ENTRY_RESV		4
-#define BOOT_ENTRY_PIR		5
-#define BOOT_ENTRY_R6_UPPER	6
-#define BOOT_ENTRY_R6_LOWER	7
-#define NUM_BOOT_ENTRY		8
-#define SIZE_BOOT_ENTRY		(NUM_BOOT_ENTRY * sizeof(u32))
+struct epapr_spin_table {
+	u32	addr_h;
+	u32	addr_l;
+	u32	r3_h;
+	u32	r3_l;
+	u32	reserved;
+	u32	pir;
+};
 
 static int __init
 smp_85xx_kick_cpu(int nr)
 {
 	unsigned long flags;
 	const u64 *cpu_rel_addr;
-	__iomem u32 *bptr_vaddr;
+	__iomem struct epapr_spin_table *spin_table;
 	struct device_node *np;
 	int n = 0, hw_cpu = get_hard_smp_processor_id(nr);
 	int ioremappable;
@@ -75,19 +74,20 @@ smp_85xx_kick_cpu(int nr)
 
 	/* Map the spin table */
 	if (ioremappable)
-		bptr_vaddr = ioremap(*cpu_rel_addr, SIZE_BOOT_ENTRY);
+		spin_table = ioremap(*cpu_rel_addr,
+				sizeof(struct epapr_spin_table));
 	else
-		bptr_vaddr = phys_to_virt(*cpu_rel_addr);
+		spin_table = phys_to_virt(*cpu_rel_addr);
 
 	local_irq_save(flags);
 
-	out_be32(bptr_vaddr + BOOT_ENTRY_PIR, hw_cpu);
+	out_be32(&spin_table->pir, hw_cpu);
 #ifdef CONFIG_PPC32
-	out_be32(bptr_vaddr + BOOT_ENTRY_ADDR_LOWER, __pa(__early_start));
+	out_be32(&spin_table->addr_l, __pa(__early_start));
 
 	if (!ioremappable)
-		flush_dcache_range((ulong)bptr_vaddr,
-				(ulong)(bptr_vaddr + SIZE_BOOT_ENTRY));
+		flush_dcache_range((ulong)spin_table,
+			(ulong)spin_table + sizeof(struct epapr_spin_table));
 
 	/* Wait a bit for the CPU to ack. */
 	while ((__secondary_hold_acknowledge != hw_cpu) && (++n < 1000))
@@ -95,18 +95,18 @@ smp_85xx_kick_cpu(int nr)
 #else
 	smp_generic_kick_cpu(nr);
 
-	out_be64((u64 *)(bptr_vaddr + BOOT_ENTRY_ADDR_UPPER),
-		__pa((u64)*((unsigned long long *) generic_secondary_smp_init)));
+	out_be64((u64 *)(&spin_table->addr_h),
+	  __pa((u64)*((unsigned long long *)generic_secondary_smp_init)));
 
 	if (!ioremappable)
-		flush_dcache_range((ulong)bptr_vaddr,
-				(ulong)(bptr_vaddr + SIZE_BOOT_ENTRY));
+		flush_dcache_range((ulong)spin_table,
+			(ulong)spin_table + sizeof(struct epapr_spin_table));
 #endif
 
 	local_irq_restore(flags);
 
 	if (ioremappable)
-		iounmap(bptr_vaddr);
+		iounmap(spin_table);
 
 	pr_debug("waited %d msecs for CPU #%d.\n", n, nr);
 
-- 
1.6.4.1


