Path: news.gmane.org!not-for-mail
From: Linus Walleij <linus.walleij@linaro.org>
Newsgroups: gmane.linux.ports.arm.kernel,gmane.linux.kernel
Subject: Re: [RFC] ARM: sched_clock: update epoch_cyc on resume
Date: Tue, 24 Jul 2012 02:14:22 +0200
Lines: 51
Approved: news@gmane.org
Message-ID: <CACRpkdYayLaKzUSq5V9N5sRkV74a+nZ1CbLJzRW7RP=pOU9bfw@mail.gmail.com>
References: <1342567672-29071-1-git-send-email-ccross@android.com>
 <CACRpkdaHdCvx1HJNDsyJSZAN--sF+4-V1TbzXZL1v+7Asoe_oA@mail.gmail.com>
 <CAMbhsRR2-VjUeL2XPKubeaG=iLV5NE-i_sVYbuMAryXLxsbo1g@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343088925 15115 80.91.229.3 (24 Jul 2012 00:15:25 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 00:15:25 +0000 (UTC)
Cc: Russell King <linux@arm.linux.org.uk>, Nicolas Pitre <nico@linaro.org>,
 Marc Zyngier <marc.zyngier@arm.com>, linux-kernel@vger.kernel.org,
 John Stultz <john.stultz@linaro.org>, Thomas Gleixner <tglx@linutronix.de>,
 linux-arm-kernel@lists.infradead.org, Krzysztof Halasa <khc@pm.waw.pl>
To: Colin Cross <ccross@android.com>
Original-X-From: linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org Tue Jul 24 02:15:23 2012
Return-path: <linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org>
Envelope-to: linux-arm-kernel@m.gmane.org
Original-Received: from merlin.infradead.org ([205.233.59.134])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org>)
	id 1StSmY-0005lE-S0
	for linux-arm-kernel@m.gmane.org; Tue, 24 Jul 2012 02:15:23 +0200
Original-Received: from localhost ([::1] helo=merlin.infradead.org)
	by merlin.infradead.org with esmtp (Exim 4.76 #1 (Red Hat Linux))
	id 1StSll-0001F8-4W; Tue, 24 Jul 2012 00:14:33 +0000
Original-Received: from mail-qc0-f177.google.com ([209.85.216.177])
 by merlin.infradead.org with esmtps (Exim 4.76 #1 (Red Hat Linux))
 id 1StSld-0001Eu-Ni
 for linux-arm-kernel@lists.infradead.org; Tue, 24 Jul 2012 00:14:29 +0000
Original-Received: by qcsu28 with SMTP id u28so3572754qcs.36
 for <linux-arm-kernel@lists.infradead.org>;
 Mon, 23 Jul 2012 17:14:23 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :cc:content-type:x-gm-message-state;
 bh=EpsE0m7qQyeeJxrVNavl8+MDdAs8VhiUAGm6ocIills=;
 b=nHfnf6fmkEeFmwwRTDNUmBmjhDKfyUeh6ofpSifEgvs2gAXBS1i46l4QgUeJQdTAr8
 efBEMP2qHO0atCrVvJbaMt4fWTOmIB3LAMhH08gwIsoI8Wa0Iaa4228T5mU7TZ//9e36
 0VPfexDp+LnSUgoqcr3Lcdg2wDjqLsELUUGStqRNB8VQrHJGYUlKLQPGfEBYpVBtTTw6
 C9qxAPfLq7SwL1Tgy6ZD2FN9nRrSjmFKjifFf2gpXjVK+N8/SNADnYFPakRg7jm9P59j
 KaT2rBbw2dgccBK1baqWMlUs6HyEK/X5bTKXhCV/QjXn0pDS2FyR2fUXfnOS4DDS0HDY
 WImQ==
Original-Received: by 10.224.197.7 with SMTP id ei7mr27476169qab.90.1343088863010; Mon,
 23 Jul 2012 17:14:23 -0700 (PDT)
Original-Received: by 10.229.234.81 with HTTP; Mon, 23 Jul 2012 17:14:22 -0700 (PDT)
In-Reply-To: <CAMbhsRR2-VjUeL2XPKubeaG=iLV5NE-i_sVYbuMAryXLxsbo1g@mail.gmail.com>
X-Gm-Message-State: ALoCoQlLk9QlsXeuOPQkb5nvu1jZJ7tEKK2XE/5UXWHLhKj6xgZ9LEBCo+hLbefQjRDReMSk9WL9
X-Spam-Note: CRM114 invocation failed
X-Spam-Score: -2.6 (--)
X-Spam-Report: SpamAssassin version 3.3.2 on merlin.infradead.org summary:
 Content analysis details:   (-2.6 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.7 RCVD_IN_DNSWL_LOW      RBL: Sender listed at http://www.dnswl.org/, low
 trust [209.85.216.177 listed in list.dnswl.org]
 -1.9 BAYES_00               BODY: Bayes spam probability is 0 to 1%
 [score: 0.0000]
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Original-Sender: linux-arm-kernel-bounces@lists.infradead.org
Errors-To: linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org
Xref: news.gmane.org gmane.linux.ports.arm.kernel:178494 gmane.linux.kernel:1332054
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332054>

On Mon, Jul 23, 2012 at 9:27 PM, Colin Cross <ccross@android.com> wrote:
> On Mon, Jul 23, 2012 at 11:55 AM, Linus Walleij

> Does the clock you use for sched_clock continue to run in all suspend
> modes? All the SoC's I've used only have a 32kHz clock in the deepest
> suspend mode,

Yes, and yes it is 32kHz.

> which is not ideal for sched_clock.

Not that I know why scheduling with 32kHz is so bad compared to the
default system scheduling granularity which is HZ if you don't have
sched_clock() implemented.

Since this seems to be such an important point, what makes you
want MHz:es for scheduling granularity? To me the biggest impact
is actually the granularity of the timestamps in the printk:s.

(It's not that I doubt your needs, more curiosity.)

>  For example, on
> Tegra2 the faster 1MHz clock used for sched_clock resets in the
> deepest suspend state (LP0) but not the shallowest suspend state
> (LP2), and which suspend state the chip hits depends on which hardware
> is active.  Opting out of this patch would cause Tegra's clock to
> sometimes run in suspend, and sometimes not, which seems worse for
> debugging than consistently not running in suspend.  I'd be surprised
> if a similar situation didn't apply to your platform.

Well being able to switch between different sched_clock() providers
may be the ideal...

>> - If it absolutely needs to be in the core code, also have a bool
>>   field indicating whether the clock is going to die during suspend
>>   and add new registration functions for setting that sched_clock
>>   type, e.g. setup_sched_clock_nonsuspendable()
>
> Sounds reasonable if some platforms need the extra complexity.

OK agreed.

A connecting theme is that of being avle to flag clock sources as
sched_clock providers. If all clocksources were tagged with
rating, and only clocksources were used for sched_clock(), the
kernel could select the highest-rated clock under all circumstances.

But that's quite intrusive, more of an idea. :-P

Yours,
Linus Walleij
