Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 40/40] mm/hugetlb: fix warning in alloc_huge_page/dequeue_huge_page_vma
Date: Thu, 26 Jul 2012 14:29:58 -0700
Lines: 50
Approved: news@gmane.org
Message-ID: <20120726211414.838347598@linuxfoundation.org>
References: <20120726211424.GA7709@kroah.com>
 <20120726211411.164006056@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343338418 11227 80.91.229.3 (26 Jul 2012 21:33:38 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 21:33:38 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk,
	Konstantin Khlebnikov <khlebnikov@openvz.org>,
	Mel Gorman <mgorman@suse.de>,
	David Rientjes <rientjes@google.com>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 26 23:33:37 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SuVge-0007W0-Cb
	for glk-linux-kernel-3@plane.gmane.org; Thu, 26 Jul 2012 23:33:36 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753801Ab2GZVdb (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 26 Jul 2012 17:33:31 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:55921 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753691Ab2GZVb4 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Jul 2012 17:31:56 -0400
Original-Received: by mail-yw0-f46.google.com with SMTP id m54so2517418yhm.19
        for <linux-kernel@vger.kernel.org>; Thu, 26 Jul 2012 14:31:56 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=fjLDYEA7NQaiIEq4osmolHlw+UfM4ln6/BV6snxmYxY=;
        b=fDsVe7124brdtYHy7SfokDf12KnuOeMl69Oy4ajUVTG3Ebzb9ktkEVdqN8y7GjjPU1
         81ygBqbGyvFU1G89Fx6qJ8Uo7xOcY9o0nOaZUTC9y50FgGtQEHTry7vwF+Sep+IOSkB8
         pHHZ/q31BOqvITQiJ7ANAg4atXAv70IUaNl72b6vmRLunOn1MtPJUGirVBG+LX9jFz3l
         4+ymCNg3sRSmnZr/O9wT5VBOJKcWY9jigt+CaOOZZMbjS3XomB8UShPUbfxaD8eXjJvr
         wy6THxYmBZBOaVwsDlbmbwiHqEPEb05WLwAyjMNa+q3u3SxQFqheSV/WonprZ+jH88ug
         FpKA==
Original-Received: by 10.66.78.9 with SMTP id x9mr320173paw.84.1343338315650;
        Thu, 26 Jul 2012 14:31:55 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id gh9sm439478pbc.20.2012.07.26.14.31.53
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 26 Jul 2012 14:31:54 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120726211411.164006056@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQlzd5/8iBpXr+dzux18pjyzfDNZPrAVLBY1YI5iJJwJV0GgWi972jVTvHU8PSF8eoel7NIK
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333945 gmane.linux.kernel.stable:28883
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333945>

From: Greg KH <gregkh@linuxfoundation.org>

3.0-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Konstantin Khlebnikov <khlebnikov@openvz.org>

commit b1c12cbcd0a02527c180a862e8971e249d3b347d upstream.

Stable note: Not tracked in Bugzilla. [get|put]_mems_allowed() is extremely
	expensive and severely impacted page allocator performance. This
	is part of a series of patches that reduce page allocator overhead.

Fix a gcc warning (and bug?) introduced in cc9a6c877 ("cpuset: mm: reduce
large amounts of memory barrier related damage v3")

Local variable "page" can be uninitialized if the nodemask from vma policy
does not intersects with nodemask from cpuset.  Even if it doesn't happens
it is better to initialize this variable explicitly than to introduce
a kernel oops in a weird corner case.

mm/hugetlb.c: In function `alloc_huge_page':
mm/hugetlb.c:1135:5: warning: `page' may be used uninitialized in this function

Signed-off-by: Konstantin Khlebnikov <khlebnikov@openvz.org>
Acked-by: Mel Gorman <mgorman@suse.de>
Acked-by: David Rientjes <rientjes@google.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Mel Gorman <mgorman@suse.de>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 mm/hugetlb.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@ -454,7 +454,7 @@ static struct page *dequeue_huge_page_vm
 				struct vm_area_struct *vma,
 				unsigned long address, int avoid_reserve)
 {
-	struct page *page;
+	struct page *page = NULL;
 	struct mempolicy *mpol;
 	nodemask_t *nodemask;
 	struct zonelist *zonelist;


