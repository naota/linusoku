Path: news.gmane.org!not-for-mail
From: Liu Qiang-B32616 <B32616@freescale.com>
Newsgroups: gmane.linux.kernel.cryptoapi,gmane.linux.ports.ppc64.devel,gmane.linux.kernel
Subject: RE: [PATCH v5 5/6] fsl-dma: use spin_lock_bh to instead of
 spin_lock_irqsave
Date: Thu, 2 Aug 2012 04:56:48 +0000
Lines: 186
Approved: news@gmane.org
Message-ID: <BCB48C05FCE8BC4D9E61E841ECBE6DB70D1D9D@039-SN2MPN1-011.039d.mgd.msft.net>
References: <1343811009-25466-1-git-send-email-qiang.liu@freescale.com>
 <20120801173059.GF11359@ovro.caltech.edu>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 8BIT
X-Trace: dough.gmane.org 1343883419 7011 80.91.229.3 (2 Aug 2012 04:56:59 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 04:56:59 +0000 (UTC)
Cc: "linux-crypto@vger.kernel.org" <linux-crypto@vger.kernel.org>,
	"linuxppc-dev@lists.ozlabs.org" <linuxppc-dev@lists.ozlabs.org>,
	"linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
	"dan.j.williams@gmail.com" <dan.j.williams@gmail.com>,
	Vinod Koul <vinod.koul@intel.com>,
	Tabi Timur-B04825 <B04825@freescale.com>,
	"herbert@gondor.apana.org.au" <herbert@gondor.apana.org.au>,
	Dan Williams <dan.j.williams@intel.com>,
	"davem@davemloft.net" <davem@davemloft.net>
To: "Ira W. Snyder" <iws@ovro.caltech.edu>
Original-X-From: linux-crypto-owner@vger.kernel.org Thu Aug 02 06:56:58 2012
Return-path: <linux-crypto-owner@vger.kernel.org>
Envelope-to: glkc-linux-crypto@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-crypto-owner@vger.kernel.org>)
	id 1SwnSy-0005jZ-8E
	for glkc-linux-crypto@plane.gmane.org; Thu, 02 Aug 2012 06:56:56 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751383Ab2HBE4y (ORCPT <rfc822;glkc-linux-crypto@m.gmane.org>);
	Thu, 2 Aug 2012 00:56:54 -0400
Original-Received: from co1ehsobe005.messaging.microsoft.com ([216.32.180.188]:16594
	"EHLO co1outboundpool.messaging.microsoft.com" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1751361Ab2HBE4x convert rfc822-to-8bit
	(ORCPT <rfc822;linux-crypto@vger.kernel.org>);
	Thu, 2 Aug 2012 00:56:53 -0400
Original-Received: from mail6-co1-R.bigfish.com (10.243.78.232) by
 CO1EHSOBE004.bigfish.com (10.243.66.67) with Microsoft SMTP Server id
 14.1.225.23; Thu, 2 Aug 2012 04:56:53 +0000
Original-Received: from mail6-co1 (localhost [127.0.0.1])	by mail6-co1-R.bigfish.com
 (Postfix) with ESMTP id 35871C0020C;	Thu,  2 Aug 2012 04:56:53 +0000 (UTC)
X-Forefront-Antispam-Report: CIP:70.37.183.190;KIP:(null);UIP:(null);IPV:NLI;H:mail.freescale.net;RD:none;EFVD:NLI
X-SpamScore: -7
X-BigFish: VS-7(zz98dI9371I542M1432Izz1202hzz8275ch8275bh8275dhz2dh2a8h668h839h8e2h8e3h944hd25hf0ah107ahbe9i)
Original-Received: from mail6-co1 (localhost.localdomain [127.0.0.1]) by mail6-co1
 (MessageSwitch) id 1343883411559992_1025; Thu,  2 Aug 2012 04:56:51 +0000
 (UTC)
Original-Received: from CO1EHSMHS020.bigfish.com (unknown [10.243.78.228])	by
 mail6-co1.bigfish.com (Postfix) with ESMTP id 82430AC004B;	Thu,  2 Aug 2012
 04:56:51 +0000 (UTC)
Original-Received: from mail.freescale.net (70.37.183.190) by CO1EHSMHS020.bigfish.com
 (10.243.66.30) with Microsoft SMTP Server (TLS) id 14.1.225.23; Thu, 2 Aug
 2012 04:56:51 +0000
Original-Received: from 039-SN2MPN1-011.039d.mgd.msft.net ([169.254.1.233]) by
 039-SN1MMR1-002.039d.mgd.msft.net ([10.84.1.15]) with mapi id 14.02.0298.005;
 Wed, 1 Aug 2012 23:56:49 -0500
Thread-Topic: [PATCH v5 5/6] fsl-dma: use spin_lock_bh to instead of
 spin_lock_irqsave
Thread-Index: AQHNb8YoJiv5fb8TmUGqQ/wwgwel0ZdFixmAgABrayA=
In-Reply-To: <20120801173059.GF11359@ovro.caltech.edu>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.192.208.94]
X-OriginatorOrg: freescale.com
Original-Sender: linux-crypto-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-crypto.vger.kernel.org>
X-Mailing-List: linux-crypto@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel.cryptoapi:7486 gmane.linux.ports.ppc64.devel:84182 gmane.linux.kernel:1336651
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336651>

> -----Original Message-----
> From: Ira W. Snyder [mailto:iws@ovro.caltech.edu]
> Sent: Thursday, August 02, 2012 1:31 AM
> To: Liu Qiang-B32616
> Cc: linux-crypto@vger.kernel.org; linuxppc-dev@lists.ozlabs.org; linux-
> kernel@vger.kernel.org; dan.j.williams@gmail.com; Vinod Koul; Tabi Timur-
> B04825; herbert@gondor.hengli.com.au; Dan Williams; davem@davemloft.net
> Subject: Re: [PATCH v5 5/6] fsl-dma: use spin_lock_bh to instead of
> spin_lock_irqsave
> 
> On Wed, Aug 01, 2012 at 04:50:09PM +0800, qiang.liu@freescale.com wrote:
> > From: Qiang Liu <qiang.liu@freescale.com>
> >
> > - use spin_lock_bh() is the right way to use async_tx api,
> > dma_run_dependencies() should not be protected by spin_lock_irqsave();
> > - use spin_lock_bh to instead of spin_lock_irqsave for improving
> > performance, There is not any place to access descriptor queues in
> > fsl-dma ISR except its tasklet, spin_lock_bh() is more proper here.
> > Interrupts will be turned off and context will be save in irqsave,
> there is needless to use irqsave..
> >
> 
> This description is not very clear English. I understand it is not your
> native language. Let me try to help.
> 
> """
> The use of spin_lock_irqsave() is a stronger locking mechanism than is
> required throughout the driver. The minimum locking required should be
> used instead.
> 
> Change all instances of spin_lock_irqsave() to spin_lock_bh(). All
> manipulation of protected fields is done using tasklet context or weaker,
> which makes spin_lock_bh() the correct choice.
> """
I will modify the description in v6, please check later.

> 
> Other than that,
> Acked-by: Ira W. Snyder <iws@ovro.caltech.edu>
Thanks.

> 
> > Cc: Dan Williams <dan.j.williams@intel.com>
> > Cc: Vinod Koul <vinod.koul@intel.com>
> > Cc: Li Yang <leoli@freescale.com>
> > Cc: Timur Tabi <timur@freescale.com>
> > Signed-off-by: Qiang Liu <qiang.liu@freescale.com>
> > ---
> >  drivers/dma/fsldma.c |   30 ++++++++++++------------------
> >  1 files changed, 12 insertions(+), 18 deletions(-)
> >
> > diff --git a/drivers/dma/fsldma.c b/drivers/dma/fsldma.c index
> > bb883c0..e3814aa 100644
> > --- a/drivers/dma/fsldma.c
> > +++ b/drivers/dma/fsldma.c
> > @@ -645,10 +645,9 @@ static dma_cookie_t fsl_dma_tx_submit(struct
> dma_async_tx_descriptor *tx)
> >  	struct fsldma_chan *chan = to_fsl_chan(tx->chan);
> >  	struct fsl_desc_sw *desc = tx_to_fsl_desc(tx);
> >  	struct fsl_desc_sw *child;
> > -	unsigned long flags;
> >  	dma_cookie_t cookie;
> >
> > -	spin_lock_irqsave(&chan->desc_lock, flags);
> > +	spin_lock_bh(&chan->desc_lock);
> >
> >  	/*
> >  	 * assign cookies to all of the software descriptors @@ -661,7
> > +660,7 @@ static dma_cookie_t fsl_dma_tx_submit(struct
> dma_async_tx_descriptor *tx)
> >  	/* put this transaction onto the tail of the pending queue */
> >  	append_ld_queue(chan, desc);
> >
> > -	spin_unlock_irqrestore(&chan->desc_lock, flags);
> > +	spin_unlock_bh(&chan->desc_lock);
> >
> >  	return cookie;
> >  }
> > @@ -770,15 +769,14 @@ static void fsldma_free_desc_list_reverse(struct
> > fsldma_chan *chan,  static void fsl_dma_free_chan_resources(struct
> > dma_chan *dchan)  {
> >  	struct fsldma_chan *chan = to_fsl_chan(dchan);
> > -	unsigned long flags;
> >
> >  	chan_dbg(chan, "free all channel resources\n");
> > -	spin_lock_irqsave(&chan->desc_lock, flags);
> > +	spin_lock_bh(&chan->desc_lock);
> >  	fsldma_cleanup_descriptor(chan);
> >  	fsldma_free_desc_list(chan, &chan->ld_pending);
> >  	fsldma_free_desc_list(chan, &chan->ld_running);
> >  	fsldma_free_desc_list(chan, &chan->ld_completed);
> > -	spin_unlock_irqrestore(&chan->desc_lock, flags);
> > +	spin_unlock_bh(&chan->desc_lock);
> >
> >  	dma_pool_destroy(chan->desc_pool);
> >  	chan->desc_pool = NULL;
> > @@ -997,7 +995,6 @@ static int fsl_dma_device_control(struct dma_chan
> > *dchan,  {
> >  	struct dma_slave_config *config;
> >  	struct fsldma_chan *chan;
> > -	unsigned long flags;
> >  	int size;
> >
> >  	if (!dchan)
> > @@ -1007,7 +1004,7 @@ static int fsl_dma_device_control(struct
> > dma_chan *dchan,
> >
> >  	switch (cmd) {
> >  	case DMA_TERMINATE_ALL:
> > -		spin_lock_irqsave(&chan->desc_lock, flags);
> > +		spin_lock_bh(&chan->desc_lock);
> >
> >  		/* Halt the DMA engine */
> >  		dma_halt(chan);
> > @@ -1017,7 +1014,7 @@ static int fsl_dma_device_control(struct dma_chan
> *dchan,
> >  		fsldma_free_desc_list(chan, &chan->ld_running);
> >  		chan->idle = true;
> >
> > -		spin_unlock_irqrestore(&chan->desc_lock, flags);
> > +		spin_unlock_bh(&chan->desc_lock);
> >  		return 0;
> >
> >  	case DMA_SLAVE_CONFIG:
> > @@ -1059,11 +1056,10 @@ static int fsl_dma_device_control(struct
> > dma_chan *dchan,  static void fsl_dma_memcpy_issue_pending(struct
> > dma_chan *dchan)  {
> >  	struct fsldma_chan *chan = to_fsl_chan(dchan);
> > -	unsigned long flags;
> >
> > -	spin_lock_irqsave(&chan->desc_lock, flags);
> > +	spin_lock_bh(&chan->desc_lock);
> >  	fsl_chan_xfer_ld_queue(chan);
> > -	spin_unlock_irqrestore(&chan->desc_lock, flags);
> > +	spin_unlock_bh(&chan->desc_lock);
> >  }
> >
> >  /**
> > @@ -1076,15 +1072,14 @@ static enum dma_status fsl_tx_status(struct
> > dma_chan *dchan,  {
> >  	struct fsldma_chan *chan = to_fsl_chan(dchan);
> >  	enum dma_status ret;
> > -	unsigned long flags;
> >
> >  	ret = dma_cookie_status(dchan, cookie, txstate);
> >  	if (ret == DMA_SUCCESS)
> >  		return ret;
> >
> > -	spin_lock_irqsave(&chan->desc_lock, flags);
> > +	spin_lock_bh(&chan->desc_lock);
> >  	fsldma_cleanup_descriptor(chan);
> > -	spin_unlock_irqrestore(&chan->desc_lock, flags);
> > +	spin_unlock_bh(&chan->desc_lock);
> >
> >  	return dma_cookie_status(dchan, cookie, txstate);  } @@ -1163,11
> > +1158,10 @@ static irqreturn_t fsldma_chan_irq(int irq, void *data)
> > static void dma_do_tasklet(unsigned long data)  {
> >  	struct fsldma_chan *chan = (struct fsldma_chan *)data;
> > -	unsigned long flags;
> >
> >  	chan_dbg(chan, "tasklet entry\n");
> >
> > -	spin_lock_irqsave(&chan->desc_lock, flags);
> > +	spin_lock_bh(&chan->desc_lock);
> >
> >  	/* the hardware is now idle and ready for more */
> >  	chan->idle = true;
> > @@ -1175,7 +1169,7 @@ static void dma_do_tasklet(unsigned long data)
> >  	/* Run all cleanup for this descriptor */
> >  	fsldma_cleanup_descriptor(chan);
> >
> > -	spin_unlock_irqrestore(&chan->desc_lock, flags);
> > +	spin_unlock_bh(&chan->desc_lock);
> >
> >  	chan_dbg(chan, "tasklet exit\n");
> >  }
> > --
> > 1.7.5.1
> >
> >
> > _______________________________________________
> > Linuxppc-dev mailing list
> > Linuxppc-dev@lists.ozlabs.org
> > https://lists.ozlabs.org/listinfo/linuxppc-dev


