Path: news.gmane.org!not-for-mail
From: Michel Lespinasse <walken@google.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [PATCH 4/6] rbtree: faster augmented insert
Date: Fri, 27 Jul 2012 14:43:15 -0700
Lines: 92
Approved: news@gmane.org
Message-ID: <CANN689HjQthCn=nOiSea1yzKbzsea8b_dOERhKMNrthkxANdBw@mail.gmail.com>
References: <1342787467-5493-1-git-send-email-walken@google.com>
	<1342787467-5493-5-git-send-email-walken@google.com>
	<1343417168.32120.38.camel@twins>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343425404 914 80.91.229.3 (27 Jul 2012 21:43:24 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 27 Jul 2012 21:43:24 +0000 (UTC)
Cc: riel@redhat.com, daniel.santos@pobox.com, aarcange@redhat.com, 
	dwmw2@infradead.org, akpm@linux-foundation.org, linux-mm@kvack.org, 
	linux-kernel@vger.kernel.org
To: Peter Zijlstra <peterz@infradead.org>
Original-X-From: owner-linux-mm@kvack.org Fri Jul 27 23:43:23 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SusJc-0002Cb-1e
	for glkm-linux-mm-2@m.gmane.org; Fri, 27 Jul 2012 23:43:20 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 597A26B004D; Fri, 27 Jul 2012 17:43:18 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 30C5B6B005A; Fri, 27 Jul 2012 17:43:18 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id E0D526B005D; Fri, 27 Jul 2012 17:43:17 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx190.postini.com [74.125.245.190])
	by kanga.kvack.org (Postfix) with SMTP id 30B546B004D
	for <linux-mm@kvack.org>; Fri, 27 Jul 2012 17:43:17 -0400 (EDT)
Original-Received: from mail-gh0-f169.google.com ([209.85.160.169]) (using TLSv1) by na3sys010amx190.postini.com ([74.125.244.10]) with SMTP;
	Fri, 27 Jul 2012 16:43:17 CDT
Original-Received: by ghrr18 with SMTP id r18so4426913ghr.14
        for <linux-mm@kvack.org>; Fri, 27 Jul 2012 14:43:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-system-of-record;
        bh=HsTmgWbvHN19boz+MsGfHO9FhOaUXYCiop7BnUY+nmU=;
        b=DFuYysxfibOUfX8CGzL7/GtjFAQLLhJM1rwVt4E24qVJc/Rh01O9UerUqE+/aFlESE
         4LkzA6ktm1v/R94tXiUCfosA/ekOLKBkrZjO3cK1pikGEiBvKcviT25EmZXxB8qnIbis
         1x8+fqJZw6IfxoXXZtKc66KL6Ci3sJJ5SH4kBQw+I6dSsPMgJujqssOvgcqN8PgTRKIM
         nTEKWe7wxqngQH5AQPq6LiOGXrI2LhCnfDif/got267Ovlt35JSuOGIE9nf+854V7BcP
         Lq1idXkPlF8Kcl26JQVTjyYh3l38ITrz8Z+2mkA/02T7dHM6hmj4QekT0POoCKtDCSCp
         TFDA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-system-of-record:x-gm-message-state;
        bh=HsTmgWbvHN19boz+MsGfHO9FhOaUXYCiop7BnUY+nmU=;
        b=QltRrN6RjlIiyp0fPXgrR3jmagu4zbXTHdh+eWi+0P+MIkj0+KSMNCXAdLpw1FOlNV
         ahX/WF5+xnuZ+Z2R3m0AUJMrgwFKffYurOxrsmPGLYvwTdnN+Qz5kBf/drRXSU67ALss
         BbHJVB3JNmE+S+U0I2Q12NmRtiPLt864C2LVBjnIz9qcyG79sa/So7zNQ/6W7a3J19Qc
         89azhb9DY3UbXKLBViy/k/1rGec3yUZj9qKK/RNRMLJ6ybESXm26p8FFHQbmHK21fCjy
         ilKRNmPWDJq4lEpVXI3Ra/Jgemd2QOMq1aeLpJgVq32B5WqgVjGSjuLgjifrn2ufsbIp
         1FBg==
Original-Received: by 10.43.110.197 with SMTP id el5mr2682960icc.1.1343425396233;
        Fri, 27 Jul 2012 14:43:16 -0700 (PDT)
Original-Received: by 10.43.110.197 with SMTP id el5mr2682950icc.1.1343425396049; Fri,
 27 Jul 2012 14:43:16 -0700 (PDT)
Original-Received: by 10.231.194.35 with HTTP; Fri, 27 Jul 2012 14:43:15 -0700 (PDT)
In-Reply-To: <1343417168.32120.38.camel@twins>
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQl23b53xkxdFeJWCQLfLt58qHiEHgbg6SIKlAr9kiXUrsOqRAWUGUh0Gt+hyasH/e1UEOLbgBB2th7YxdqUgOtz3786t32ivUTv3hiBEvkmudN27wwXCK07aIBYm92fsQvaM44t2/kO0KVYUZxsRMI6AGzdV4p3FsH80FymRPZmT11OIqs0DsgUqpOTnZgWKFmKRf/l
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.0100) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <walken@google.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83131 gmane.linux.kernel:1334509
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334509>

On Fri, Jul 27, 2012 at 12:26 PM, Peter Zijlstra <peterz@infradead.org> wrote:
> On Fri, 2012-07-20 at 05:31 -0700, Michel Lespinasse wrote:
>> --- a/lib/rbtree.c
>> +++ b/lib/rbtree.c
>> @@ -88,7 +88,8 @@ __rb_rotate_set_parents(struct rb_node *old, struct rb_node *new,
>>                 root->rb_node = new;
>>  }
>>
>> -void rb_insert_color(struct rb_node *node, struct rb_root *root)
>> +inline void rb_insert_augmented(struct rb_node *node, struct rb_root *root,
>> +                               rb_augment_rotate *augment)
>
> Daniel probably knows best, but I would have expected something like:
>
> __always_inline void
> __rb_insert(struct rb_node *node, struct rb_root *root,
>             const rb_augment_rotate *augment)
>
> Where you force inline and use a const function pointer since GCC is
> better with inlining them -- iirc, Daniel?

This hasn't been necessary with my compiler, but I can see how this
might help with older gcc versions. I really haven't investigated that
much and would be open to daniel's suggestions there.

To answer your question in the next email, we're using a gcc 4.6
variant with some local patches. TBH I don't know precisely what's in
there, however I think our compiler team makes a good job of working
with upstream so whatever changes they have are probably coming to a
future gcc version :)

>>  {
>>         struct rb_node *parent = rb_red_parent(node), *gparent, *tmp;
>>
>> @@ -152,6 +153,7 @@ void rb_insert_color(struct rb_node *node, struct rb_root *root)
>>                                         rb_set_parent_color(tmp, parent,
>>                                                             RB_BLACK);
>>                                 rb_set_parent_color(parent, node, RB_RED);
>> +                               augment(parent, node);
>
> And possibly:
>                 if (augment)
>                         augment(parent, node);
>
> That would obviate the need for the dummy..

__rb_insert() gets instanciated two times, one as rb_insert_color()
with dummy callbacks, and one as rb_insert_augmented() itself with
user-passed callbacks. Using NULL instead of dummy callbacks would
generate the same code in the rb_insert_color() instance, but not in
the version that takes user-passed callbacks (i.e. there would be an
extra check for NULL there, which we don't want).

>> +void rb_insert_color(struct rb_node *node, struct rb_root *root) {
>
> placed your { wrong..

Oops (caught myself a few times doing that, missed this one
apparently... thanks for noticing)

>> +       rb_insert_augmented(node, root, dummy);
>> +}
>>  EXPORT_SYMBOL(rb_insert_color);
>
> And use Daniel's __flatten here, like:
>
> void rb_insert_color(struct rb_node *node, struct rb_root *root)
> __flatten
> {
>         __rb_insert(node, root, NULL);
> }
> EXPORT_SYMBOL(rb_insert_color);
>
> void rb_insert_augmented(struct rb_node *node, struct rb_root *root,
>                          const rb_augment_rotate *augment) __flatten
> {
>         __rb_insert(node, root, augment);
> }
> EXPORT_SYMBOL(rb_insert_augmented);

Looks good, I'll try that and resubmit.

-- 
Michel "Walken" Lespinasse
A program is never fully debugged until the last user dies.

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

