Path: news.gmane.org!not-for-mail
From: Kent Overstreet <koverstreet@google.com>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.bcache.devel,gmane.linux.kernel.device-mapper.devel,gmane.linux.kernel.drbd.devel
Subject: [PATCH v4 03/12] block: Add bio_reset()
Date: Tue, 24 Jul 2012 13:11:20 -0700
Lines: 74
Approved: news@gmane.org
Message-ID: <1343160689-12378-4-git-send-email-koverstreet@google.com>
References: <1343160689-12378-1-git-send-email-koverstreet@google.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343160733 6892 80.91.229.3 (24 Jul 2012 20:12:13 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 20:12:13 +0000 (UTC)
Cc: Kent Overstreet <koverstreet@google.com>, tj@kernel.org,
	axboe@kernel.dk, agk@redhat.com, neilb@suse.de,
	drbd-dev@lists.linbit.com, bharrosh@panasas.com, vgoyal@redhat.com,
	mpatocka@redhat.com, sage@newdream.net, yehuda@hq.newdream.net
To: linux-bcache@vger.kernel.org, linux-kernel@vger.kernel.org,
	dm-devel@redhat.com
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 22:12:09 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StlSg-00031b-IF
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 22:12:06 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755699Ab2GXUMA (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 24 Jul 2012 16:12:00 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:33896 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755547Ab2GXUL4 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 24 Jul 2012 16:11:56 -0400
Original-Received: by mail-yw0-f46.google.com with SMTP id m54so7121571yhm.19
        for <linux-kernel@vger.kernel.org>; Tue, 24 Jul 2012 13:11:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references;
        bh=N7a2BUvQ2hM2VvN1Fn2Xmi4rMTvkuzHo44e2c0CTma4=;
        b=SH3dh47Qt/Dpvz72abmMrXhMmM2P0ofwfT6iaKHedD6CehAWoh5iqdi0m61MNJkXAm
         HS37Pe2i+aM1EQVsOjsfF21yLBzpMYnRWg7sJaZkyfBDoj+NWImApewas6FwamvCOt5Y
         tZ7xLeF9mojdtLZjUeh50+OHi4emixQXFftVfqSWkCYNQvuhdSy3VleY8Tq+WIIHCuYu
         dRXyMjQRwjfuiElwVg5+g8tlozWxKu8pE/ZzjLs9pXvaTw7N0RGxiaAiSG05kzybz6Xx
         1j4CeoFQdLgvUcFKVE1Sya7lzszkUt1KaS51VgIEI/xATcHN81GemjhmOQrUgvNYhljx
         D80w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :x-gm-message-state;
        bh=N7a2BUvQ2hM2VvN1Fn2Xmi4rMTvkuzHo44e2c0CTma4=;
        b=irRr4aPldYFvAL1jXFI1XumaAB1y4TDk5pSY8EyHOQQdjBvFKHYFPAR9YTt6xSW17N
         bhKaAIr2X2kYO5suDxRhB6pWAb7Ea80iTi5WNL8ytmRjkkkWJxXtr6HA+F1EAtTIpb7H
         ngcw9Grn6zYRyShUGnSx14rBLXHf7gpIz+bjC+bIC46sCn98GtUIjaAtOt9oGNLgKVH8
         +kEHnWQ0OPt6h1izZ8sceDMDVAnDh1+r/Vx0U+rA/UkDPTlrT+p+4Yf/XIikqLotEwQy
         aO9liIqRA8JZpmFldm4kIqjAtDnzbsR8i0FgK574cdwR73zuxNVw9lxOmZ85u9RKlM95
         eRfA==
Original-Received: by 10.68.223.129 with SMTP id qu1mr41095532pbc.165.1343160715956;
        Tue, 24 Jul 2012 13:11:55 -0700 (PDT)
Original-Received: by 10.68.223.129 with SMTP id qu1mr41095489pbc.165.1343160715730;
        Tue, 24 Jul 2012 13:11:55 -0700 (PDT)
Original-Received: from formenos.mtv.corp.google.com (formenos.mtv.corp.google.com [172.18.110.66])
        by mx.google.com with ESMTPS id jv6sm12774301pbc.40.2012.07.24.13.11.53
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 24 Jul 2012 13:11:54 -0700 (PDT)
X-Mailer: git-send-email 1.7.7.3
In-Reply-To: <1343160689-12378-1-git-send-email-koverstreet@google.com>
X-Gm-Message-State: ALoCoQkFP/StNRtQ4FDFU8cZG7gvcin+Hlxk6dvXgFelkj7dv16l1aNIsZh0hWhFoCWHLOmf39Oicf9Ef3psOUq8ID9KZCx7ycB0j7VZ2t2VA+YgpzHkVyLFR/SHTn1Qjo4KKtwrpKsDWpHzgr40OGnVgeiVSffgDrvtfwRw17ey3kG/ceZdWO/WJ2jCT+cFORfOaJQLIxdp
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332551 gmane.linux.kernel.bcache.devel:623 gmane.linux.kernel.device-mapper.devel:16404 gmane.linux.kernel.drbd.devel:2028
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332551>

Reusing bios is something that's been highly frowned upon in the past,
but driver code keeps doing it anyways. If it's going to happen anyways,
we should provide a generic method.

This'll help with getting rid of bi_destructor - drivers/block/pktcdvd.c
was open coding it, by doing a bio_init() and resetting bi_destructor.

Signed-off-by: Kent Overstreet <koverstreet@google.com>
---
 fs/bio.c                  |   10 ++++++++++
 include/linux/bio.h       |    1 +
 include/linux/blk_types.h |    6 ++++++
 3 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/fs/bio.c b/fs/bio.c
index 1c6c8b7..252e253 100644
--- a/fs/bio.c
+++ b/fs/bio.c
@@ -261,6 +261,16 @@ void bio_init(struct bio *bio)
 }
 EXPORT_SYMBOL(bio_init);
 
+void bio_reset(struct bio *bio)
+{
+	/* Clear all flags below BIO_OWNS_VEC */
+	unsigned long flags = bio->bi_flags & (~0UL << BIO_OWNS_VEC);
+
+	memset(bio, 0, BIO_RESET_BYTES);
+	bio->bi_flags = flags|(1 << BIO_UPTODATE);
+}
+EXPORT_SYMBOL(bio_reset);
+
 /**
  * bio_alloc_bioset - allocate a bio for I/O
  * @gfp_mask:   the GFP_ mask given to the slab allocator
diff --git a/include/linux/bio.h b/include/linux/bio.h
index 2643589..ba60319 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -226,6 +226,7 @@ extern void __bio_clone(struct bio *, struct bio *);
 extern struct bio *bio_clone(struct bio *, gfp_t);
 
 extern void bio_init(struct bio *);
+extern void bio_reset(struct bio *);
 
 extern int bio_add_page(struct bio *, struct page *, unsigned int,unsigned int);
 extern int bio_add_pc_page(struct request_queue *, struct bio *, struct page *,
diff --git a/include/linux/blk_types.h b/include/linux/blk_types.h
index 293547e..40411e2 100644
--- a/include/linux/blk_types.h
+++ b/include/linux/blk_types.h
@@ -59,6 +59,10 @@ struct bio {
 	unsigned int		bi_seg_front_size;
 	unsigned int		bi_seg_back_size;
 
+	/*
+	 * Everything starting with bi_max_vecs will be preserved by bio_reset()
+	 */
+
 	unsigned int		bi_max_vecs;	/* max bvl_vecs we can hold */
 
 	atomic_t		bi_cnt;		/* pin count */
@@ -93,6 +97,8 @@ struct bio {
 	struct bio_vec		bi_inline_vecs[0];
 };
 
+#define BIO_RESET_BYTES		offsetof(struct bio, bi_max_vecs)
+
 /*
  * bio flags
  */
-- 
1.7.7.3

