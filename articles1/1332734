Path: news.gmane.org!not-for-mail
From: "devendra.aaru" <devendra.aaru@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH v2] staging: gdm72xx: fix reference counting in gdm_wimax_event_init
Date: Wed, 25 Jul 2012 10:35:58 +0545
Lines: 57
Approved: news@gmane.org
Message-ID: <CAHdPZaOTvF=e3j8ypzK8_V5Uh_8Nk1U74uVe4tcXs+cdQvimjg@mail.gmail.com>
References: <1343141382-31087-1-git-send-email-benchan@chromium.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343191871 21349 80.91.229.3 (25 Jul 2012 04:51:11 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 04:51:11 +0000 (UTC)
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org,
	Dan Carpenter <dan.carpenter@oracle.com>
To: Ben Chan <benchan@chromium.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Jul 25 06:51:11 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SttZ0-00088Z-Ke
	for glk-linux-kernel-3@plane.gmane.org; Wed, 25 Jul 2012 06:51:10 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751374Ab2GYEvA (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 25 Jul 2012 00:51:00 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:39725 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750821Ab2GYEu7 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 25 Jul 2012 00:50:59 -0400
Original-Received: by ghrr11 with SMTP id r11so322565ghr.19
        for <linux-kernel@vger.kernel.org>; Tue, 24 Jul 2012 21:50:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=3bRqMGhoVcLLc2yU+WIc8IDCoBRfwvUDMUudh3BFTus=;
        b=Lv3AxWz9zi75IgX1UfddrvKGN6pYGEywBFxvnyanzMz6GNmfoZcpTQgmJVoGqzCUGy
         tiKeRl40AKi9TZtTo85zUzPAVmpTPFr8a48mRK9mEg7acBM2lDWk4dECPFRaGcIxAu+K
         3ZVdZaR1Q549HGf/ye2gqosCY8RoXzI6eTI2FSwrMf53RydwYBEZrU9lYz9xZ6CFQlsl
         MzWZkj9T2qwNpAu2Qev0pna3oaOYN0u1DkPQx4mxcqoCPJPp7KV8a1FF/6cVr2hJaP9C
         bmq+XAFmZVKcXrFxNNxXMBlzx+gvIfa0Qhy6pB5jNiX4KWusEO6jlQo8tC6devHaFJuv
         N/uw==
Original-Received: by 10.66.83.39 with SMTP id n7mr9765091pay.82.1343191858159; Tue, 24
 Jul 2012 21:50:58 -0700 (PDT)
Original-Received: by 10.68.136.162 with HTTP; Tue, 24 Jul 2012 21:50:58 -0700 (PDT)
In-Reply-To: <1343141382-31087-1-git-send-email-benchan@chromium.org>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332734
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332734>

On Tue, Jul 24, 2012 at 8:34 PM, Ben Chan <benchan@chromium.org> wrote:
> This patch fixes the commit "staging/gdm72xx: cleanup little at
> gdm_wimax_event_rcv" (8df858ea76b76dde9a39d4edd9aaded983582cfe),
> which mishandles the reference counting of wm_event.
>
> Signed-off-by: Ben Chan <benchan@chromium.org>
> ---
> Fixed the commit message as suggested by Dan Carpenter.
>
>  drivers/staging/gdm72xx/gdm_wimax.c |   16 ++++++++++------
>  1 files changed, 10 insertions(+), 6 deletions(-)
>
> diff --git a/drivers/staging/gdm72xx/gdm_wimax.c b/drivers/staging/gdm72xx/gdm_wimax.c
> index 0716efc..6cb8107 100644
> --- a/drivers/staging/gdm72xx/gdm_wimax.c
> +++ b/drivers/staging/gdm72xx/gdm_wimax.c
> @@ -258,12 +258,16 @@ static int gdm_wimax_event_init(void)
>         if (!wm_event.ref_cnt) {
>                 wm_event.sock = netlink_init(NETLINK_WIMAX,
>                                                 gdm_wimax_event_rcv);
> -               if (wm_event.sock)
> -                       wm_event.ref_cnt++;
> -               INIT_LIST_HEAD(&wm_event.evtq);
> -               INIT_LIST_HEAD(&wm_event.freeq);
> -               INIT_WORK(&wm_event.ws, __gdm_wimax_event_send);
> -               spin_lock_init(&wm_event.evt_lock);
> +               if (wm_event.sock) {
> +                       INIT_LIST_HEAD(&wm_event.evtq);
> +                       INIT_LIST_HEAD(&wm_event.freeq);
> +                       INIT_WORK(&wm_event.ws, __gdm_wimax_event_send);
> +                       spin_lock_init(&wm_event.evt_lock);
> +               }
> +       }
> +
> +       if (wm_event.sock) {
> +               wm_event.ref_cnt++;
>                 return 0;
>         }
>
> --
> 1.7.7.3
>

Hi Ben,

I have some basic understanding about this flow of the function,

Here is my understanding of the thing i have done when i was doing
some cleanups to this driver.

The ref_cnt will be 0 at first time. if so the sock creation happens
only once, and register_wimax_device only calls this function.
so i think doing the ref_cnt++ inside the if (!wm_event.ref_cnt) is valid.

Please suggest me if i am wrong.

Thanks,
