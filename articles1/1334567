Path: news.gmane.org!not-for-mail
From: Michel Lespinasse <walken@google.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [PATCH 5/6] rbtree: faster augmented erase
Date: Fri, 27 Jul 2012 17:44:15 -0700
Lines: 73
Approved: news@gmane.org
Message-ID: <CANN689Fn=DYR8eGKkBJPeQYMtOfP6tykzqLMBOdV0Yg8OdrVPQ@mail.gmail.com>
References: <1342787467-5493-1-git-send-email-walken@google.com>
	<1342787467-5493-6-git-send-email-walken@google.com>
	<1343419375.32120.48.camel@twins>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343436263 6294 80.91.229.3 (28 Jul 2012 00:44:23 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 28 Jul 2012 00:44:23 +0000 (UTC)
Cc: riel@redhat.com, daniel.santos@pobox.com, aarcange@redhat.com, 
	dwmw2@infradead.org, akpm@linux-foundation.org, linux-mm@kvack.org, 
	linux-kernel@vger.kernel.org
To: Peter Zijlstra <peterz@infradead.org>
Original-X-From: owner-linux-mm@kvack.org Sat Jul 28 02:44:22 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1Suv8n-0007EB-D1
	for glkm-linux-mm-2@m.gmane.org; Sat, 28 Jul 2012 02:44:21 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 146086B005A; Fri, 27 Jul 2012 20:44:18 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 03C0E6B005D; Fri, 27 Jul 2012 20:44:17 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id B71C86B0062; Fri, 27 Jul 2012 20:44:17 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx206.postini.com [74.125.245.206])
	by kanga.kvack.org (Postfix) with SMTP id 117C16B005A
	for <linux-mm@kvack.org>; Fri, 27 Jul 2012 20:44:17 -0400 (EDT)
Original-Received: from mail-ob0-f169.google.com ([209.85.214.169]) (using TLSv1) by na3sys010amx206.postini.com ([74.125.244.10]) with SMTP;
	Fri, 27 Jul 2012 18:44:17 CST
Original-Received: by obhx4 with SMTP id x4so6302653obh.14
        for <linux-mm@kvack.org>; Fri, 27 Jul 2012 17:44:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-system-of-record;
        bh=xBClSewFH6al/vZee5ZKjccvtRltrBhNtAg8Fv7MsTk=;
        b=bUHPuTgaKJGdi8ugWmuzYsd8vTPCH1wFhLZ7EMuQj7hZT1SLkEMO4KxxP8sjEX7B/f
         YdViXJPZXpkH8Au4Gz3w41LjBf6oTw1L9Jvg5Cgt6cgiPlRXFYdEvzStoIG+UwrYXQ2T
         Udp1wjh78fKpWXoKwel8ez12NNosDW3sxqV6Fz2fNS0/DifJBRstAlLo30GWTMHK+p2b
         xMqg0gyOJLb6EHNC9fOxICjxrZXEQoVvos0rsJ2p+bOtD+Z7YMZ8HKwgp5fkBflD4ycH
         lNlBHP+mihr9P5O1EsHQ9JYk0m9nuStbSYs5aGTR2DbHx1icjTzPve6ctH4ivOkwg+MW
         kqVg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-system-of-record:x-gm-message-state;
        bh=xBClSewFH6al/vZee5ZKjccvtRltrBhNtAg8Fv7MsTk=;
        b=Y5tWjqoLvN+GcMLqzoYv663nVg4/c+tEYt0nAMi0hbKQYRS3u+9j8makheYoCA9zZ+
         4zRRG4AFrdeJr6vKx007D2RYTUUG2kXy0VHs89e9FGjuiN1UjQ3G725FzpdgZSkCbro/
         65vPOr4wCY9XC1+zgaWNSIx4elsKt3bG5xalhd1KYxySwo0F5HXpgQI6WbHssgXAGgOs
         Eq3UgAmzAMmPUZFIYMDXZXUgsXDmPU7in4f4yT7EtdTCAM6AwVUHokWLvcW7yCvRIbJi
         6RSwzOWZFz6BrdheZQugKv0oKzau/02akf2B3B1/GBRMg+eurpPiJgqXbHv91TCrO89Q
         pygA==
Original-Received: by 10.50.77.200 with SMTP id u8mr3563862igw.6.1343436256133;
        Fri, 27 Jul 2012 17:44:16 -0700 (PDT)
Original-Received: by 10.50.77.200 with SMTP id u8mr3563838igw.6.1343436255845; Fri, 27
 Jul 2012 17:44:15 -0700 (PDT)
Original-Received: by 10.231.194.35 with HTTP; Fri, 27 Jul 2012 17:44:15 -0700 (PDT)
In-Reply-To: <1343419375.32120.48.camel@twins>
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQn9SuM89HCMpg4g10vpChhauzv+CKGW7TmDSgia43BOrucqQKl/sB6Lt1y5l1D/IcKgnV7QcmmmY5kKjhd8wLHzjBjDmTgBoHR1Rne4nchRWc+eU2+MSuk9I/9xV3JvjEO19JahpWWNC5y41JbbdP3utVJF/HGxN+1ACCExqNvRKm0NbQLgHCk+rvr/M4J0ptw0tm4z
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:88.1613 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.0100) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <walken@google.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83135 gmane.linux.kernel:1334567
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334567>

On Fri, Jul 27, 2012 at 1:02 PM, Peter Zijlstra <peterz@infradead.org> wrote:
>On Fri, 2012-07-20 at 05:31 -0700, Michel Lespinasse wrote:
>> --- a/lib/rbtree_test.c
>> +++ b/lib/rbtree_test.c
>> @@ -1,5 +1,6 @@
>>  #include <linux/module.h>
>>  #include <linux/rbtree.h>
>> +#include <linux/rbtree_internal.h>
>This confuses me.. either its internal to the rb-tree implementation and
>users don't need to see it, or its not in which case huh?

So, I'm not 100% happy with this either.

What's going on is that I think it's best for users not to know about
these implementation details, and that's why I had moved these away
from include/linux/rbtree.h. However, I haven't been successful in
hiding these details from augmented rbtree users, so with my proposal,
if you want to implement some new feature using augmented rbtrees, you
do get exposed to some rbtree implementation details. This is
unfortunate but at least this exposure doesn't leak to your users -
you'd have to include linux/rbtree_internal.h only in your feature's C
file, so your users will never have to know about rbtree
implementation details.

>> +static inline void
>> +rb_erase_augmented(struct rb_node *node, struct rb_root *root,
>> +                  rb_augment_propagate *augment_propagate,
>> +                  rb_augment_rotate *augment_rotate)
>
> So why put all this in a static inline in a header? As it stands
> rb_erase() isn't inlined and its rather big, why would you want to
> inline it for augmented callers?

Just as the non-augmented rb_erase() is generated (as a non-inline
function) by merging together the rb_erase_augmented() inline function
and its dummy callbacks, I want each library that uses augmented
rbtrees to generate their own rb_erase() equivalent using their own
callbacks. The inline function in rbtree_internal.h is only to be used
as a template for generating one non-inline instance for each data
structure that uses augmented rbtrees.

> You could at least pull out the initial erase stuff into a separate
> function, that way the rb_erase_augmented thing would shrink to
> something like:
>
> rb_erase_augmented(node, root)
> {
>         struct rb_node *parent, *child;
>         bool black;
>
>         __rb_erase(node, root, &parent, &child, &black);
>         augmented_propagate(parent);
>         if (black)
>                 __rb_erase_color(child, parent, root, augment_rotate);
> }

I see that you looked at the first version of patch 5, where
augmented_propagate() still always updated all the way to the root. I
have since sent an updated version of patch 5 that does more limited
updates; however this makes it harder to do what you propose as the
callbacks now need to happen in more places than just before
__rb_erase_color().

-- 
Michel "Walken" Lespinasse
A program is never fully debugged until the last user dies.

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

