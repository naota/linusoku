Path: news.gmane.org!not-for-mail
From: Tvrtko Ursulin <tvrtko.ursulin@onelan.co.uk>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH] add blockconsole version 1.1
Date: Tue, 24 Jul 2012 09:01:16 +0100
Lines: 65
Approved: news@gmane.org
Message-ID: <201207240901.16151.tvrtko.ursulin@onelan.co.uk>
References: <20120424205946.GH20610@logfs.org> <201207231533.16350.tvrtko.ursulin@onelan.co.uk> <20120723200230.GC17767@logfs.org>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: Text/Plain; charset=utf-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1343116913 30739 80.91.229.3 (24 Jul 2012 08:01:53 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 08:01:53 +0000 (UTC)
Cc: Andrew Morton <akpm@linux-foundation.org>,
	linux-kernel@vger.kernel.org, Jeff Moyer <jmoyer@redhat.com>,
	Steve Hodgson <steve@purestorage.com>
To: =?utf-8?q?J=C3=B6rn_Engel?= <joern@logfs.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 10:01:50 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sta3w-0002YS-79
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 10:01:48 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755593Ab2GXIB3 convert rfc822-to-quoted-printable (ORCPT
	<rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 24 Jul 2012 04:01:29 -0400
Original-Received: from claranet-outbound-smtp04.uk.clara.net ([195.8.89.37]:40917 "EHLO
	claranet-outbound-smtp04.uk.clara.net" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1755084Ab2GXIB0 convert rfc822-to-8bit
	(ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 24 Jul 2012 04:01:26 -0400
Original-Received: from 110.100.155.90.in-addr.arpa ([90.155.100.110]:53944 helo=deuteros.localnet)
	by relay04.mail.eu.clara.net (relay.clara.net [213.253.3.44]:1025)
	with esmtps (TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	id 1Sta3Q-0006CQ-F7 
	(return-path <tvrtko.ursulin@onelan.co.uk>); Tue, 24 Jul 2012 08:01:16 +0000
User-Agent: KMail/1.13.7 (Linux/3.1.0-90.fc15.x86_64; KDE/4.6.5; x86_64; ; )
In-Reply-To: <20120723200230.GC17767@logfs.org>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332178
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332178>

On Monday 23 Jul 2012 21:02:30 J=C3=B6rn Engel wrote:
> On Mon, 23 July 2012 15:33:16 +0100, Tvrtko Ursulin wrote:
> > On Thursday 12 Jul 2012 18:46:34 J=C3=B6rn Engel wrote:
> > > Console driver similar to netconsole, except it writes to a block
> > > device.  Can be useful in a setup where netconsole, for whatever
> > > reasons, is impractical.
> >=20
> > Perhaps you need to add a word or two about limitations compared to
> > netconsole in documentation because it is quite significant differe=
nce
> > in reliability? I mean so it is not assumed it is analogous to
> > netconsole but just a different underlying media. I don't know if
> > someone would expect it, but better said than not.
>=20
> Given that I don't even know the limitations, that's a bit tough.  As
> a general rule, I would always prefer netconsole.  It appears to be
> more reliable than blockconsole and beats serial console by half a
> lightyear.  But as a fallback when netconsole is not realistic,
> blockconsole has proven useful.

At the very least block console does not work from interrupt context wh=
ile=20
netconsole does, right? Also netconsole does things to try and work aro=
und low=20
memory situations. Things like that I think would be useful additions t=
o=20
documentation.
=20
> > I second the notion that logging to partitions would be useful.
>=20
> Below is a compile-tested patch to do that.  Feel free to give it a
> spin and fix any bugs.

I can't promise to do that in the very near future, but in principle id=
ea=20
could be interesting to me, at least to evaluate how reliable mechanism=
 is=20
with different storage interfaces and controllers.

> > Also, and I haven't checked what the swap format is, if it could so=
mehow
> > be integrated together that could be useful.
>=20
> That appears to be slightly less likely than crossbreeding a rabbit
> with a chicken.  Is there something obvious I have missed?

I was thinking how swap space is always there and is potentially much f=
aster=20
to write to than a random USB stick - which could translate to more rel=
iable.=20
Then it's a question of which storage subsystem (libata vs. usb-storage=
) would=20
work better in different oops/panic situations. Again I tend to have le=
ss hope=20
in USB based solutions - maybe it's my bias from working in that area m=
any=20
years ago. So the idea of swap space was that _if_ swap format could be=
=20
extended to allocate a number of blocks to use other than swap, then th=
at area=20
could be used by blockconsole. Seemed like a convenient and potentially=
 more=20
reliable solution to me, but as I said the latter may depend.

Tvrtko
