Path: news.gmane.org!not-for-mail
From: Bjorn Helgaas <bhelgaas@google.com>
Newsgroups: gmane.linux.acpi.devel,gmane.linux.kernel
Subject: Re: [PATCH v3 1/4] ACPI: Add acpi_pr_<level>() interfaces
Date: Thu, 26 Jul 2012 13:22:55 -0600
Lines: 151
Approved: news@gmane.org
Message-ID: <CAErSpo4=HDaWTusKf+tRU6aXmj-mC1i7CswnDzDLZii21i9NaQ@mail.gmail.com>
References: <1343257978-7085-1-git-send-email-toshi.kani@hp.com> <1343257978-7085-2-git-send-email-toshi.kani@hp.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343330612 28910 80.91.229.3 (26 Jul 2012 19:23:32 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 26 Jul 2012 19:23:32 +0000 (UTC)
Cc: lenb@kernel.org, linux-acpi@vger.kernel.org,
	linux-kernel@vger.kernel.org, joe@perches.com,
	isimatu.yasuaki@jp.fujitsu.com, liuj97@gmail.com,
	srivatsa.bhat@linux.vnet.ibm.com, prarit@redhat.com,
	imammedo@redhat.com, vijaymohan.pandarathil@hp.com
To: Toshi Kani <toshi.kani@hp.com>
Original-X-From: linux-acpi-owner@vger.kernel.org Thu Jul 26 21:23:28 2012
Return-path: <linux-acpi-owner@vger.kernel.org>
Envelope-to: glad-acpi-devel@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-acpi-owner@vger.kernel.org>)
	id 1SuTea-00080y-Bi
	for glad-acpi-devel@plane.gmane.org; Thu, 26 Jul 2012 21:23:20 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751418Ab2GZTXS (ORCPT <rfc822;glad-acpi-devel@m.gmane.org>);
	Thu, 26 Jul 2012 15:23:18 -0400
Original-Received: from mail-gg0-f174.google.com ([209.85.161.174]:42739 "EHLO
	mail-gg0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751251Ab2GZTXR (ORCPT
	<rfc822;linux-acpi@vger.kernel.org>); Thu, 26 Jul 2012 15:23:17 -0400
Original-Received: by gglu4 with SMTP id u4so2359001ggl.19
        for <linux-acpi@vger.kernel.org>; Thu, 26 Jul 2012 12:23:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type:x-system-of-record;
        bh=VDqKPmgMRnPl9qZXL3dKeKkb2E6glJG8O+awFWXeHZE=;
        b=jhzdHOpSWmp1ybzoAZi8hw3/z+8xJeahCJY8Ygr+piuyGCyU4JO4imJGc9yfyMKOwd
         F/Z5O57MLVofT+8wZNoZ2t3E3whi2SQi0igB6vnERTnqbIFRdoL5Ev7xOXNe7Tlj0EWO
         /uZnPz3fLqYQiT7FBfBlMGKGulufSXbuZfpR/1BnLWjq+Aouaw5d0Ax6DbketD8ARxHV
         1C1e0rdwzfaViDMOdSSAhQRbnX72fOMNd8mDe2V3XAfLIv7iu5S931R2qIqvXOBTGMqZ
         LeGU7YO/UCNJdFKPwmir5KRbDu1kVo+d/SVVfOKUP1VEGjSuGVvk7+Pk8pJLeJcuU49f
         6dnw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type:x-system-of-record:x-gm-message-state;
        bh=VDqKPmgMRnPl9qZXL3dKeKkb2E6glJG8O+awFWXeHZE=;
        b=SFloQ2Muxt+tWvZMPBIA2+M+cDdyv3+MtOHHSANg4ndp3nuLzuj/YZZthrFEWKlw1p
         LmeKKAdoeXnpEpV343ptHkbSgmKaD7P0ztq8XhIwKt90nm1Fh7/uIt5kIVYoaHuBOari
         Q9TQL2iAIaHIA0lS640tIk5XDYSOs6HlQkY10cRC1McHuGbpsM1XQc1MdQuPVHXXewFt
         J1gmq6SLZsyxmjrvYkoC9yRDX1en+WwMkrCOT85wTEylJRRClYIK8gAtdjO1R1TZjbGr
         J6Xc/kAxqbL3FnXl8msCCzny3PXluc53qAjd7Cglv+AXD+d1wE3xT0ZTRHo8cDffCe1p
         3WMg==
Original-Received: by 10.42.50.17 with SMTP id y17mr12371853icf.44.1343330596295;
        Thu, 26 Jul 2012 12:23:16 -0700 (PDT)
Original-Received: by 10.42.50.17 with SMTP id y17mr12371834icf.44.1343330596173; Thu,
 26 Jul 2012 12:23:16 -0700 (PDT)
Original-Received: by 10.50.91.169 with HTTP; Thu, 26 Jul 2012 12:22:55 -0700 (PDT)
In-Reply-To: <1343257978-7085-2-git-send-email-toshi.kani@hp.com>
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQnnv4MHl2jGunZihgI79d0XFuZlBZ+0MSWsIbxQyb/gLojSKhuWzqTb967eHeRQoMXTas6G3XaHdGSPfaV4TvFhL7OhzqJ+uKoWfEX5q5/HyXcBEBmfOrkNEnAi7rHjrPXDkRuHGxK5fhXNddbRFi38aY6pAFJ9I1fELFt+NbNP6ngxB/ZvdVZxQAILJ6SFlBKAYM1i
Original-Sender: linux-acpi-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-acpi.vger.kernel.org>
X-Mailing-List: linux-acpi@vger.kernel.org
Xref: news.gmane.org gmane.linux.acpi.devel:54582 gmane.linux.kernel:1333845
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333845>

On Wed, Jul 25, 2012 at 5:12 PM, Toshi Kani <toshi.kani@hp.com> wrote:
> This patch introduces acpi_pr_<level>(), where <level> is a kernel
> message level such as err/warn/info, to support improved logging
> messages for ACPI, esp. in hotplug operations.  acpi_pr_<level>()
> appends "ACPI" prefix and ACPI object path to the messages.  This
> improves diagnostics in hotplug operations since it identifies an
> object that caused an issue in a log file.
>
> acpi_pr_<level>() takes acpi_handle as an argument, which is passed
> to ACPI hotplug notify handlers from the ACPICA.  Therefore, it is
> always available unlike other kernel objects, such as device.
>
> For example, the statement below
>   acpi_pr_err(handle, "Device don't exist, dropping EJECT\n");
> logs an error message like this at KERN_ERR.
>   ACPI: \_SB_.SCK4.CPU4: Device don't exist, dropping EJECT
>
> ACPI drivers can use acpi_pr_<level>() when they need to identify
> a target ACPI object in their messages, such as error messages.

It's definitely an improvement to have *something* that identifies a
device in these messages.  But the ACPI namespace path is not really
intended to be user-consumable, so I don't think we should expose it
indiscriminately.  I think we should be using the ACPI device name
("PNP0C02:00") whenever possible.  Given the device name, we can get
the path from the sysfs "path" file.

> The usage model is similar to dev_<level>().  acpi_pr_<level>() can
> be used when device is not created/valid, which may be the case for
> ACPI hotplug handlers.  ACPI drivers can continue to use dev_<level>()
> when device is valid.

I'd argue that ACPI driver code should never be called unless the
device is valid, so drivers should *always* be able to use
dev_<level>.  Obviously, ACPI hotplug is currently screwed up (it's
mostly handled in drivers rather than in the ACPI core), so in some of
those hotplug paths in the drivers, we may not have a device yet.  But
those cases should be minimal.

Another possible approach to this is to add a %p extension rather than
adding acpi_printk().  Then you could do, e.g., 'printk("%pA ...\n",
handle)', and printk could interpolate the namespace path.  But I
really think there should be very few places where we need the path,
so I'm not sure it's worth it.

> ACPI drivers also continue to use pr_<level>() when ACPI device
> path does not have to be appended to the messages, such as boot-up
> messages.
>
> Note: ACPI_[WARNING|INFO|ERROR]() are intended for the ACPICA and
> are not associated with the kernel message level.
>
> Signed-off-by: Toshi Kani <toshi.kani@hp.com>
> Tested-by: Vijay Mohan Pandarathil <vijaymohan.pandarathil@hp.com>
> ---
>  drivers/acpi/utils.c    |   34 ++++++++++++++++++++++++++++++++++
>  include/acpi/acpi_bus.h |   31 +++++++++++++++++++++++++++++++
>  2 files changed, 65 insertions(+), 0 deletions(-)
>
> diff --git a/drivers/acpi/utils.c b/drivers/acpi/utils.c
> index 3e87c9c..ec0c6f9 100644
> --- a/drivers/acpi/utils.c
> +++ b/drivers/acpi/utils.c
> @@ -454,3 +454,37 @@ acpi_evaluate_hotplug_ost(acpi_handle handle, u32 source_event,
>  #endif
>  }
>  EXPORT_SYMBOL(acpi_evaluate_hotplug_ost);
> +
> +/**
> + * acpi_printk: Print messages with ACPI prefix and object path
> + *
> + * This function is intended to be called through acpi_pr_<level> macros.
> + */
> +void
> +acpi_printk(const char *level, acpi_handle handle, const char *fmt, ...)
> +{
> +       struct va_format vaf;
> +       va_list args;
> +       struct acpi_buffer buffer = {
> +               .length = ACPI_ALLOCATE_BUFFER,
> +               .pointer = NULL
> +       };
> +       const char *path;
> +       acpi_status ret;
> +
> +       va_start(args, fmt);
> +       vaf.fmt = fmt;
> +       vaf.va = &args;
> +
> +       ret = acpi_get_name(handle, ACPI_FULL_PATHNAME, &buffer);
> +       if (ret == AE_OK)
> +               path = buffer.pointer;
> +       else
> +               path = "<n/a>";
> +
> +       printk("%sACPI: %s: %pV", level, path, &vaf);
> +
> +       va_end(args);
> +       kfree(buffer.pointer);
> +}
> +EXPORT_SYMBOL(acpi_printk);
> diff --git a/include/acpi/acpi_bus.h b/include/acpi/acpi_bus.h
> index bde976e..1c855b8 100644
> --- a/include/acpi/acpi_bus.h
> +++ b/include/acpi/acpi_bus.h
> @@ -85,6 +85,37 @@ struct acpi_pld {
>
>  acpi_status
>  acpi_get_physical_device_location(acpi_handle handle, struct acpi_pld *pld);
> +
> +void acpi_printk(const char *level, acpi_handle handle, const char *fmt, ...);
> +
> +#define acpi_pr_emerg(handle, fmt, ...)                                \
> +       acpi_printk(KERN_EMERG, handle, fmt, ##__VA_ARGS__)
> +#define acpi_pr_alert(handle, fmt, ...)                                \
> +       acpi_printk(KERN_ALERT, handle, fmt, ##__VA_ARGS__)
> +#define acpi_pr_crit(handle, fmt, ...)                         \
> +       acpi_printk(KERN_CRIT, handle, fmt, ##__VA_ARGS__)
> +#define acpi_pr_err(handle, fmt, ...)                          \
> +       acpi_printk(KERN_ERR, handle, fmt, ##__VA_ARGS__)
> +#define acpi_pr_warn(handle, fmt, ...)                         \
> +       acpi_printk(KERN_WARNING, handle, fmt, ##__VA_ARGS__)
> +#define acpi_pr_notice(handle, fmt, ...)                       \
> +       acpi_printk(KERN_NOTICE, handle, fmt, ##__VA_ARGS__)
> +#define acpi_pr_info(handle, fmt, ...)                         \
> +       acpi_printk(KERN_INFO, handle, fmt, ##__VA_ARGS__)
> +
> +/* REVISIT: Need to support CONFIG_DYNAMIC_DEBUG */
> +#if defined(DEBUG) || defined(CONFIG_DYNAMIC_DEBUG)
> +#define acpi_pr_debug(handle, fmt, ...)                                        \
> +       acpi_printk(KERN_DEBUG, handle, fmt, ##__VA_ARGS__)
> +#else
> +#define acpi_pr_debug(handle, fmt, ...)                                        \
> +({                                                                     \
> +       if (0)                                                          \
> +               acpi_printk(KERN_DEBUG, handle, fmt, ##__VA_ARGS__);    \
> +       0;                                                              \
> +})
> +#endif
> +
>  #ifdef CONFIG_ACPI
>
>  #include <linux/proc_fs.h>
> --
> 1.7.7.6
>
--
To unsubscribe from this list: send the line "unsubscribe linux-acpi" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

