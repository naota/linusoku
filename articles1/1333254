Path: news.gmane.org!not-for-mail
From: Alan Stern <stern@rowland.harvard.edu>
Newsgroups: gmane.linux.kernel
Subject: Re: [RFC PATCH 0/6] CPU hotplug: Reverse invocation of notifiers
 during CPU hotplug
Date: Wed, 25 Jul 2012 15:44:21 -0400 (EDT)
Lines: 55
Approved: news@gmane.org
Message-ID: <Pine.LNX.4.44L0.1207251537300.2008-100000@iolanthe.rowland.org>
References: <20120725164331.GB2378@linux.vnet.ibm.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: dough.gmane.org 1343245474 5574 80.91.229.3 (25 Jul 2012 19:44:34 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 25 Jul 2012 19:44:34 +0000 (UTC)
Cc: "Srivatsa S. Bhat" <srivatsa.bhat@linux.vnet.ibm.com>,
	<tglx@linutronix.de>, <mingo@kernel.org>, <peterz@infradead.org>,
	<rusty@rustcorp.com.au>, <namhyung@kernel.org>, <tj@kernel.org>,
	<rjw@sisk.pl>, <nikunj@linux.vnet.ibm.com>,
	<linux-pm@vger.kernel.org>, <linux-kernel@vger.kernel.org>
To: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Jul 25 21:44:32 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Su7VX-0002Hr-Tq
	for glk-linux-kernel-3@plane.gmane.org; Wed, 25 Jul 2012 21:44:32 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752338Ab2GYToY (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 25 Jul 2012 15:44:24 -0400
Original-Received: from iolanthe.rowland.org ([192.131.102.54]:38086 "HELO
	iolanthe.rowland.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with SMTP id S1752181Ab2GYToW (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 25 Jul 2012 15:44:22 -0400
Original-Received: (qmail 3314 invoked by uid 2102); 25 Jul 2012 15:44:21 -0400
Original-Received: from localhost (sendmail-bs@127.0.0.1)
  by localhost with SMTP; 25 Jul 2012 15:44:21 -0400
X-X-Sender: stern@iolanthe.rowland.org
In-Reply-To: <20120725164331.GB2378@linux.vnet.ibm.com>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1333254
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1333254>

On Wed, 25 Jul 2012, Paul E. McKenney wrote:

> > I think the best you can do is stop using notifiers and use something 
> > else instead.  For example, a simple set of function calls (assuming 
> > you know beforehand what callbacks need to be invoked).
> 
> Unfortunately, we don't know beforehand.  There are loadable kernel
> modules that need to be informed of CPU hotplug events.  So we do need
> some runtime way to register to be notified CPU-hotplug events.
> 
> If it weren't for the modules, we might be able to use another data
> section and get a contiguous list of functions that need to be called.
> I suppose we could have such sections for modules and link/unlink them
> at module load/unload time, but it is not at all clear to me that this
> would be simpler than using notifiers.
> 
> But always happy to learn -- any specific suggestions?

Not knowing the details of CPU hotplug, it's hard to answer in anything 
but generalities.  :-)  (And FYI, I have no intention of learning the 
details of CPU hotplug -- there's enough on my plate already.)

Still, one possibility would be to organize matters by adding a couple
of steps to Thomas's list that would be devoted purely to callbacks and
associating a separate notifier chain to each of these steps.  That way
most of the important work would be kept in the core kernel but modules
could still step in where needed.  The different notifier chains would 
then be strictly ordered with respect to each other, but events within 
a particular chain would not have any specified ordering properties.

Also, Thomas may have mentioned something about having separate 
callbacks for the CPU-up and CPU-down events, instead of relying on one 
list that would be called forwards and backwards.

> > > One of the other ideas to improve the hotplug notifier stuff that came up during some
> > > of the discussions was to implement explicit dependency tracking between the notifiers
> > > and perhaps get rid of the priority numbers that are currently being used to provide
> > > some sort of ordering between the callbacks. Links to some of the related discussions
> > > are provided below.
> > 
> > This seems like misplaced over-engineering.
> 
> In fact, we have deferred dependency tracking.  If I remember correctly,
> the main motivation was to execute notifiers in parallel, but the fraction
> of time that hotplug spends executing notifiers proved to be quite small.
> At this point, I would be surprised if we ever do much with dependency
> tracking.
> 
> Again, any specific suggestions for improvement?

If it works okay without dependency tracking, leave well enough alone.  
:-)

Alan Stern

