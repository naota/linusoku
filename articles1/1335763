Path: news.gmane.org!not-for-mail
From: Lars-Peter Clausen <lars-Qo5EllUWu/uELgA04lAiVw@public.gmane.org>
Newsgroups: gmane.linux.kernel.iio,gmane.linux.kernel.janitors,gmane.linux.kernel
Subject: Re: [PATCH] drivers/iio/adc/at91_adc.c: use devm_ functions
Date: Tue, 31 Jul 2012 16:23:46 +0200
Lines: 67
Approved: news@gmane.org
Message-ID: <5017EA72.8030003@metafoo.de>
References: <1343729383-30073-1-git-send-email-Julia.Lawall@lip6.fr> <5017D148.6030006@metafoo.de> <alpine.DEB.2.02.1207311552440.1894@hadrien>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343744380 25880 80.91.229.3 (31 Jul 2012 14:19:40 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 31 Jul 2012 14:19:40 +0000 (UTC)
Cc: Jonathan Cameron <jic23-KWPb1pKIrIJaa/9Udqfwiw@public.gmane.org>,
	kernel-janitors-u79uwXL29TY76Z2rM5mHXA@public.gmane.org, linux-iio-u79uwXL29TY76Z2rM5mHXA@public.gmane.org,
	linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org, rob.herring-bsGFqQB8/DxBDgjK7y7TUQ@public.gmane.org
To: Julia Lawall <julia.lawall-L2FTfq7BK8M@public.gmane.org>
Original-X-From: linux-iio-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org Tue Jul 31 16:19:37 2012
Return-path: <linux-iio-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>
Envelope-to: glki-linux-iio-wOFGN7rlS/M9smdsby/KFg@public.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-iio-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>)
	id 1SwDIO-0006ju-I3
	for glki-linux-iio-wOFGN7rlS/M9smdsby/KFg@public.gmane.org; Tue, 31 Jul 2012 16:19:36 +0200
Original-Received: (majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org) by vger.kernel.org via listexpand
	id S1754089Ab2GaOTf (ORCPT <rfc822;glki-linux-iio@m.gmane.org>);
	Tue, 31 Jul 2012 10:19:35 -0400
Original-Received: from smtp-out-178.synserver.de ([212.40.185.178]:1045 "EHLO
	smtp-out-178.synserver.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751133Ab2GaOTe (ORCPT
	<rfc822;linux-iio-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>); Tue, 31 Jul 2012 10:19:34 -0400
Original-Received: (qmail 18316 invoked by uid 0); 31 Jul 2012 14:19:30 -0000
X-SynServer-TrustedSrc: 1
X-SynServer-AuthUser: lars-Qo5EllUWu/uELgA04lAiVw@public.gmane.org
X-SynServer-PPID: 18226
Original-Received: from p4fe61a53.dip.t-dialin.net (HELO ?192.168.0.176?) [79.230.26.83]
  by 217.119.54.96 with AES256-SHA encrypted SMTP; 31 Jul 2012 14:19:30 -0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:10.0.5) Gecko/20120624 Icedove/10.0.5
In-Reply-To: <alpine.DEB.2.02.1207311552440.1894@hadrien>
Original-Sender: linux-iio-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Precedence: bulk
List-ID: <linux-iio.vger.kernel.org>
X-Mailing-List: linux-iio-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Xref: news.gmane.org gmane.linux.kernel.iio:5159 gmane.linux.kernel.janitors:25289 gmane.linux.kernel:1335763
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335763>

On 07/31/2012 03:54 PM, Julia Lawall wrote:
> 
> 
> On Tue, 31 Jul 2012, Lars-Peter Clausen wrote:
> 
>> Hi,
>>
>> On 07/31/2012 12:09 PM, Julia Lawall wrote:
>>> From: Julia Lawall <Julia.Lawall-L2FTfq7BK8M@public.gmane.org>
>>> @@ -720,20 +698,14 @@ error_ret:
>>>  static int __devexit at91_adc_remove(struct platform_device *pdev)
>>>  {
>>>  	struct iio_dev *idev = platform_get_drvdata(pdev);
>>> -	struct resource *res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
>>>  	struct at91_adc_state *st = iio_priv(idev);
>>>
>>>  	iio_device_unregister(idev);
>>> [...]
>>> -	free_irq(st->irq, idev);
>>> [...]
>>>  	iio_device_free(idev);
>>
>> I think we have to be careful here. The interrupted is now freed after the
>> device has been freed, which means that it could trigger after the device
>> has been freed. And since we use the device in the interrupt handler we'll
>> get a use after free.
> 
> Perhaps the same would be true in the following code, from the file
> drivers/edac/highbank_l2_edac.c:
> 
>         res = devm_request_irq(&pdev->dev, drvdata->sb_irq,
>                                highbank_l2_err_handler,
>                                0, dev_name(&pdev->dev), dci);
>         if (res < 0)
>                 goto err;
> 
>         dci->mod_name = dev_name(&pdev->dev);
>         dci->dev_name = dev_name(&pdev->dev);
> 
>         if (edac_device_add_device(dci))
>                 goto err;
> 
>         devres_close_group(&pdev->dev, NULL);
>         return 0;
> err:
>     	devres_release_group(&pdev->dev, NULL);
>         edac_device_free_ctl_info(dci);

Yes looks like this has the same issue.

> 
> Is devm_request_irq perhaps not a very good idea?
> 

devm_request_irq has to be used carefully. It is ok to use it if the objects
which are accessed in the interrupt handler are also devres managed. devres
will free objects in the reverse order of which they are allocated.

E.g. if you do

obj = dev_kzalloc(...);
...
devm_request_irq(..., obj);

it is save to use, because 'obj' will be freed after the IRQ has been freed.

- Lars
