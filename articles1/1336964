Path: news.gmane.org!not-for-mail
From: Andy Lutomirski <luto@amacapital.net>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 03/17] perf, x86: Add copy_from_user_nmi_nochk for best
 effort copy
Date: Thu, 02 Aug 2012 11:47:30 -0700
Lines: 15
Approved: news@gmane.org
Message-ID: <501ACB42.6060201@amacapital.net>
References: <1342959280-5361-1-git-send-email-jolsa@redhat.com> <1342959280-5361-4-git-send-email-jolsa@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343933276 22478 80.91.229.3 (2 Aug 2012 18:47:56 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 18:47:56 +0000 (UTC)
Cc: acme@redhat.com, a.p.zijlstra@chello.nl, mingo@elte.hu,
	paulus@samba.org, cjashfor@linux.vnet.ibm.com, fweisbec@gmail.com,
	eranian@google.com, gorcunov@openvz.org, tzanussi@gmail.com,
	mhiramat@redhat.com, robert.richter@amd.com, fche@redhat.com,
	linux-kernel@vger.kernel.org, masami.hiramatsu.pt@hitachi.com,
	drepper@gmail.com, asharma@fb.com, benjamin.redelings@nescent.org,
	Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
To: Jiri Olsa <jolsa@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 02 20:47:50 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sx0R1-00037g-Nu
	for glk-linux-kernel-3@plane.gmane.org; Thu, 02 Aug 2012 20:47:48 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754311Ab2HBSrk (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 2 Aug 2012 14:47:40 -0400
Original-Received: from mail-ob0-f174.google.com ([209.85.214.174]:37394 "EHLO
	mail-ob0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753167Ab2HBSri (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 2 Aug 2012 14:47:38 -0400
Original-Received: by obbuo13 with SMTP id uo13so14208017obb.19
        for <linux-kernel@vger.kernel.org>; Thu, 02 Aug 2012 11:47:37 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type:content-transfer-encoding
         :x-gm-message-state;
        bh=oNnU/DHCpQwSyVYDXcMXjjHzpWzJ1J1cr35DanPE2V4=;
        b=QpJWit9xBKJpnH+XICz6i7YpcUzD7VImB9SvwOWrySj9ol3N/NIy9OIoHZWAKCXTv1
         TsF+Pzy2CWmzDg8s7PaTpSuH2bXPIshOw6t8qT0sybbetb9BGrC4pNWc66ky4sKK/nN+
         aT81KxzknjnbZdM/VuDJPVq04K286Gv0904ko6mob5gppG/aY+enn1Y1iTpXPQFTKQAp
         gGr5udDcsVaOdV3AFMiXkcxSZfshhBRrUVlHGFJjaCVmlzo4IzkkD2fEl4d4p1qMLW+x
         EgEFPeV9kZk9J71tPxcSQ50/+YR2h+7h8nbTIePsjyUbRMB/fh3QUJ5uASqHM4tlAIrs
         UJiQ==
Original-Received: by 10.182.216.99 with SMTP id op3mr39591867obc.30.1343933257353;
        Thu, 02 Aug 2012 11:47:37 -0700 (PDT)
Original-Received: from amaluto.corp.amacapital.net (50-76-60-73-ip-static.hfc.comcastbusiness.net. [50.76.60.73])
        by mx.google.com with ESMTPS id kc5sm6717692obb.21.2012.08.02.11.47.34
        (version=SSLv3 cipher=OTHER);
        Thu, 02 Aug 2012 11:47:36 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120717 Thunderbird/14.0
In-Reply-To: <1342959280-5361-4-git-send-email-jolsa@redhat.com>
X-Gm-Message-State: ALoCoQlXnN/VLelnaarOTI7aHoe94VTmAHi90KUQ6Xy/p+s878kvZ7H03XrlAr4Wp2JyQwWKZKcG
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1336964
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336964>

On 07/22/2012 05:14 AM, Jiri Olsa wrote:
> Adding copy_from_user_nmi_nochk that provides the best effort
> copy regardless the requesting size crossing the task boundary.
> 
> This is going to be useful for stack dump we need in post
> DWARF CFI based unwind, where we have predefined size of
> the user stack to dump, and we need to store the most of
> the requested dump size, regardless this size is crossing
> the task boundary.

Huh?  This is a TASK_SIZE check, which makes sure that the request
doesn't cross into kernel land.  Otherwise userspace could presumably
read kernel memory by setting bogus values of sp.

--Andy
