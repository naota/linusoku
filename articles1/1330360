Path: news.gmane.org!not-for-mail
From: Vivek Goyal <vgoyal@redhat.com>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.kexec
Subject: Re: [PATCH] printk: Export struct log size and member offsets
 through vmcoreinfo
Date: Thu, 19 Jul 2012 10:08:26 -0400
Lines: 36
Approved: news@gmane.org
Message-ID: <20120719140826.GD2761@redhat.com>
References: <20120718171812.GC21746@redhat.com>
 <CAPXgP12PioibfQhtAB0fCzL1MXmZvfvQqOGu_ZM0D8Sx4Vq7+w@mail.gmail.com>
 <20120718175625.GD21746@redhat.com>
 <CAPXgP12YasX6mBVOamO8Tk1mcFJ04XWh5CjuTRxhRShncgVCtA@mail.gmail.com>
 <20120719135736.GC2761@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1342706929 28991 80.91.229.3 (19 Jul 2012 14:08:49 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 19 Jul 2012 14:08:49 +0000 (UTC)
Cc: linux kernel mailing list <linux-kernel@vger.kernel.org>,
	Kexec Mailing List <kexec@lists.infradead.org>,
	"Eric W. Biederman" <ebiederm@xmission.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	Greg Kroah-Hartmann <gregkh@linuxfoundation.org>
To: Kay Sievers <kay@vrfy.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Jul 19 16:08:48 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SrrPM-0007fp-6H
	for glk-linux-kernel-3@plane.gmane.org; Thu, 19 Jul 2012 16:08:48 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751489Ab2GSOIj (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 19 Jul 2012 10:08:39 -0400
Original-Received: from mx1.redhat.com ([209.132.183.28]:20042 "EHLO mx1.redhat.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751020Ab2GSOIh (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 19 Jul 2012 10:08:37 -0400
Original-Received: from int-mx01.intmail.prod.int.phx2.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])
	by mx1.redhat.com (8.14.4/8.14.4) with ESMTP id q6JE8QXX011184
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Thu, 19 Jul 2012 10:08:26 -0400
Original-Received: from horse.usersys.redhat.com (dhcp-187-179.bos.redhat.com [10.16.187.179])
	by int-mx01.intmail.prod.int.phx2.redhat.com (8.13.8/8.13.8) with ESMTP id q6JE8QCB030281;
	Thu, 19 Jul 2012 10:08:26 -0400
Original-Received: by horse.usersys.redhat.com (Postfix, from userid 10451)
	id 4AB6063071; Thu, 19 Jul 2012 10:08:26 -0400 (EDT)
Content-Disposition: inline
In-Reply-To: <20120719135736.GC2761@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Scanned-By: MIMEDefang 2.67 on 10.5.11.11
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1330360 gmane.linux.kernel.kexec:6347
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1330360>

On Thu, Jul 19, 2012 at 09:57:36AM -0400, Vivek Goyal wrote:
> On Thu, Jul 19, 2012 at 11:38:57AM +0200, Kay Sievers wrote:
> > On Wed, Jul 18, 2012 at 7:56 PM, Vivek Goyal <vgoyal@redhat.com> wrote:
> > > On Wed, Jul 18, 2012 at 07:27:08PM +0200, Kay Sievers wrote:
> > >> On Wed, Jul 18, 2012 at 7:18 PM, Vivek Goyal <vgoyal@redhat.com> wrote:
> > >>
> > >> > Currently I am not exporting log "level" info as that is a bitfield and
> > >> > offsetof() bitfields can't be calculated.
> > >>
> > >> We could make the level the lower 3 bits of the byte, export the byte,
> > >> and define that only 3 bits of the byte are valid? Would that help?
> > >
> > > Yes, that should work. Here is the prototype patch which stores 5 bits
> > > of flag and 3 bits of level in a byte. I have not tested it yet, but
> > > if you like the approach, I will test it.
> > 
> > > -       u8 flags:5;             /* internal record flags */
> > > -       u8 level:3;             /* syslog level */
> > > +       u8 flags_level;         /* 5 bit internal record flags, 3 bits syslog
> > 
> > Looks ok.
> > 
> > If we would swap the 5 + 3 bit field byte declaration, and add
> > __packed, we can still not rely on the level to be consistently the
> > lower 3 bits of the byte, right?
> 

I think I missed your point in last response. Are you saying that retain
bit fields  for flags and level, and add __packed() and that will make sure
level bits are always lowest 3bits? I am really not sure how that is going
to work. Also if you want to add more fields to struct log down the line,
it will be a problem to determine the offset of byte where level bits are
stored. 

Thanks
Vivek
