Path: news.gmane.org!not-for-mail
From: bforce1729 <bforce1729@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: Need to know the size of data send from Kernel to USer Ap
Date: Tue, 24 Jul 2012 01:08:40 -0700
Lines: 23
Approved: news@gmane.org
Message-ID: <500E5808.1070607@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343117351 1589 80.91.229.3 (24 Jul 2012 08:09:11 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 24 Jul 2012 08:09:11 +0000 (UTC)
To: linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Jul 24 10:09:11 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StaB3-0007vn-7h
	for glk-linux-kernel-3@plane.gmane.org; Tue, 24 Jul 2012 10:09:09 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755639Ab2GXIJA (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 24 Jul 2012 04:09:00 -0400
Original-Received: from mail-ob0-f174.google.com ([209.85.214.174]:53930 "EHLO
	mail-ob0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755562Ab2GXIIn (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 24 Jul 2012 04:08:43 -0400
Original-Received: by mail-ob0-f174.google.com with SMTP id uo13so10780401obb.19
        for <linux-kernel@vger.kernel.org>; Tue, 24 Jul 2012 01:08:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:subject
         :content-type:content-transfer-encoding;
        bh=EY/0NPg8kxfut9iKh/Vx/BvTJ3mbNYMwGT1Dh46G6oU=;
        b=bshewW/VzPMKheAMAx8mKNr/Jp5lG7kDyJNay2T29YazKoNM8mEai58b35luy2BJBR
         G462F9zhjNaFqEL1bnq0BQoiNazCHG2Yvv5BhSLnKBdmjl2V/FbnqnWfifZ2YhRZdSxi
         4U0LOZARbyK0VHd9JWQSDmyylbJYpIZoSC7z/Suu2Uy46fASB4VVA9YAUa8CwPQrETKx
         Su7vDK/hBgAkplVM1a54Skuj1j7w9YxmCIOOHMHqMJaSWiynaL0kVBgzZ88ylwACxD0g
         0KMoXsgMw8chZWBwWDFi1bhyhpNtRYXWRFP8vCkiJIWiV3svJt8pTJJm3dRAjPrKEL62
         rRsQ==
Original-Received: by 10.182.108.71 with SMTP id hi7mr25246075obb.21.1343117323231;
        Tue, 24 Jul 2012 01:08:43 -0700 (PDT)
Original-Received: from [192.168.1.10] (ip68-6-81-113.sb.sd.cox.net. [68.6.81.113])
        by mx.google.com with ESMTPS id a9sm12909328obp.14.2012.07.24.01.08.41
        (version=SSLv3 cipher=OTHER);
        Tue, 24 Jul 2012 01:08:42 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux i686; rv:13.0) Gecko/20120615 Thunderbird/13.0.1
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1332181
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1332181>

Hi,

I am new to kernel programming so can anyone point me to the right 
forum/reply for the question below.

I would like to implement a character device and using a node of type 
character  read and write data. However I am not sure of the length of 
data from kernel which a user app will receive, so I would like to code 
safely. If the data exceeds the application gets killed.
Any idea or API to perform the task of knowing the data length when 
passing data to and fro from kernel to user level would be appreciated.

Kernel code:

                 copy_to_user(buff, kernel_msg, strlen(kernel_msg));

User App:
                 fd=open("./my_device",O_RDONLY);
ret=read(fd,buff,strlen(buf));                        //How can I know 
the size of buff, which would be sent/filled from kernel???

Regards
bforce
