Path: news.gmane.org!not-for-mail
From: Ian Abbott <abbotti@mev.co.uk>
Newsgroups: gmane.linux.kernel
Subject: Bug in UDF, setting larger file size when data in ICB
Date: Mon, 23 Jul 2012 16:19:35 +0100
Lines: 14
Approved: news@gmane.org
Message-ID: <500D6B87.7070700@mev.co.uk>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"; format=flowed
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1343056790 9133 80.91.229.3 (23 Jul 2012 15:19:50 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 23 Jul 2012 15:19:50 +0000 (UTC)
Cc: Jan Kara <jack@suse.cz>
To: lkml <linux-kernel@vger.kernel.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 23 17:19:50 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1StKQI-0005CU-BJ
	for glk-linux-kernel-3@plane.gmane.org; Mon, 23 Jul 2012 17:19:50 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754174Ab2GWPTm (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 23 Jul 2012 11:19:42 -0400
Original-Received: from mail.mev.co.uk ([62.49.15.74]:49585 "EHLO mail.mev.co.uk"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753327Ab2GWPTl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Mon, 23 Jul 2012 11:19:41 -0400
Original-Received: from localhost (localhost [127.0.0.1])
	by mail.mev.co.uk (Postfix) with ESMTP id 415FC59027;
	Mon, 23 Jul 2012 16:19:39 +0100 (BST)
X-Virus-Scanned: Debian amavisd-new at mail.mev.co.uk
Original-Received: from mail.mev.co.uk ([127.0.0.1])
	by localhost (mantis.mev.local [127.0.0.1]) (amavisd-new, port 10024)
	with LMTP id r62NGoihER4r; Mon, 23 Jul 2012 16:19:37 +0100 (BST)
Original-Received: from remote.mev.co.uk (mev2008.mev.local [10.0.0.1])
	by mail.mev.co.uk (Postfix) with ESMTPS id D60785900B;
	Mon, 23 Jul 2012 16:19:36 +0100 (BST)
Original-Received: from [10.0.0.210] (10.0.0.254) by remote.mev.co.uk (10.0.0.1) with
 Microsoft SMTP Server (TLS) id 8.1.436.0; Mon, 23 Jul 2012 16:19:35 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:13.0) Gecko/20120616 Thunderbird/13.0
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1331828
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1331828>

Hi folks,

in fs/udf/inode.c, udf_setsize(), if the new size is larger than the old 
size and the old data is in the ICB and the new size still fits in the 
ICB (iinfo->i_alloc_type == ICBTAG_FLAG_AD_IN_ICB and iinfo->i_lenAlloc 
= newsize), udf_extend_file() is called which promptly calls BUG() 
because it does not like this i_alloc_type value.

I think the simplest fix would be to add a 'goto' after the assignment 
to iinfo->i_lenAlloc, bypassing the call to udf_extend_file().

-- 
-=( Ian Abbott @ MEV Ltd.    E-mail: <abbotti@mev.co.uk>        )=-
-=( Tel: +44 (0)161 477 1898   FAX: +44 (0)161 718 3587         )=-
