Path: news.gmane.org!not-for-mail
From: Zhang Yanfei <zhangyanfei@cn.fujitsu.com>
Newsgroups: gmane.linux.kernel,gmane.comp.emulators.kvm.devel,gmane.linux.kernel.kexec
Subject: Re: [PATCH v5 0/3] Export offsets of VMCS fields as note information
 for kdump
Date: Mon, 30 Jul 2012 10:53:43 +0800
Lines: 202
Approved: news@gmane.org
Message-ID: <5015F737.7090508@cn.fujitsu.com>
References: <4FFE9EDE.8080107@cn.fujitsu.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1343616885 30408 80.91.229.3 (30 Jul 2012 02:54:45 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 02:54:45 +0000 (UTC)
Cc: mtosatti@redhat.com, ebiederm@xmission.com, luto@mit.edu,
	Joerg Roedel <joerg.roedel@amd.com>, dzickus@redhat.com,
	paul.gortmaker@windriver.com, ludwig.nussel@suse.de,
	linux-kernel@vger.kernel.org, kvm@vger.kernel.org,
	kexec@lists.infradead.org, Greg KH <gregkh@linuxfoundation.org>
To: Avi Kivity <avi@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 30 04:54:43 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Svg82-000469-76
	for glk-linux-kernel-3@plane.gmane.org; Mon, 30 Jul 2012 04:54:42 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754068Ab2G3Cyc convert rfc822-to-quoted-printable (ORCPT
	<rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 29 Jul 2012 22:54:32 -0400
Original-Received: from cn.fujitsu.com ([222.73.24.84]:26111 "EHLO song.cn.fujitsu.com"
	rhost-flags-OK-FAIL-OK-OK) by vger.kernel.org with ESMTP
	id S1753985Ab2G3Cy3 convert rfc822-to-8bit (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 29 Jul 2012 22:54:29 -0400
X-IronPort-AV: E=Sophos;i="4.77,676,1336320000"; 
   d="scan'208";a="5505322"
Original-Received: from unknown (HELO tang.cn.fujitsu.com) ([10.167.250.3])
  by song.cn.fujitsu.com with ESMTP; 30 Jul 2012 10:53:30 +0800
Original-Received: from fnstmail02.fnst.cn.fujitsu.com (tang.cn.fujitsu.com [127.0.0.1])
	by tang.cn.fujitsu.com (8.14.3/8.13.1) with ESMTP id q6U2sIhP001769;
	Mon, 30 Jul 2012 10:54:18 +0800
Original-Received: from localhost.localdomain ([10.167.226.121])
          by fnstmail02.fnst.cn.fujitsu.com (Lotus Domino Release 8.5.3)
          with ESMTP id 2012073010545410-7733 ;
          Mon, 30 Jul 2012 10:54:54 +0800 
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.9) Gecko/20100921 Fedora/3.1.4-1.fc14 Thunderbird/3.1.4
In-Reply-To: <4FFE9EDE.8080107@cn.fujitsu.com>
X-MIMETrack: Itemize by SMTP Server on mailserver/fnst(Release 8.5.3|September 15, 2011) at
 2012/07/30 10:54:54,
	Serialize by Router on mailserver/fnst(Release 8.5.3|September 15, 2011) at
 2012/07/30 10:55:03
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1334871 gmane.comp.emulators.kvm.devel:95222 gmane.linux.kernel.kexec:6382
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1334871>

Hello Avi,

Do you have any comments about this version of the patch set?

=E4=BA=8E 2012=E5=B9=B407=E6=9C=8812=E6=97=A5 17:54, Zhang Yanfei =E5=86=
=99=E9=81=93:
> This patch set exports offsets of VMCS fields as note information for
> kdump. We call it VMCSINFO. The purpose of VMCSINFO is to retrieve
> runtime state of guest machine image, such as registers, in host
> machine's crash dump as VMCS format. The problem is that VMCS interna=
l
> is hidden by Intel in its specification. So, we slove this problem
> by reverse engineering implemented in this patch set. The VMCSINFO
> is exported via sysfs (/sys/devices/system/cpu/vmcs/) to kexec-tools.
>=20
> Here are two usercases for two features that we want.
>=20
> 1) Create guest machine's crash dumpfile from host machine's crash du=
mpfile
>=20
> In general, we want to use this feature on failure analysis for the s=
ystem
> where the processing depends on the communication between host and gu=
est
> machines to look into the system from both machines's viewpoints.
>=20
> As a concrete situation, consider where there's heartbeat monitoring
> feature on the guest machine's side, where we need to determine in
> which machine side the cause of heartbeat stop lies. In our actual
> experiments, we encountered such situation and we found the cause of
> the bug was in host's process schedular so guest machine's vcpu stopp=
ed
> for a long time and then led to heartbeat stop.
>=20
> The module that judges heartbeat stop is on guest machine, so we need
> to debug guest machine's data. But if the cause lies in host machine
> side, we need to look into host machine's crash dump.
>=20
> Without this feature, we first create guest machine's dump and then
> create host mahine's, but there's only a short time between two
> processings, during which it's unlikely that buggy situation remains.
>=20
> So, we think the feature is useful to debug both guest machine's and
> host machine's sides at the same time, and expect we can make failure
> analysis efficiently.
>=20
> Of course, we believe this feature is commonly useful on the situatio=
n
> where guest machine doesn't work well due to something of host machin=
e's.
>=20
> 2) Get offsets of VMCS information on the CPU running on the host mac=
hine
>=20
> If kdump doesn't work well, then it means we cannot use kvm API to ge=
t
> register values of guest machine and they are still left on its vmcs
> region. In the case, we use crash dump mechanism running outside of
> linux kernel, such as sadump, a firmware-based crash dump. Then VMCS
> information is then necessary.
>=20
> TODO:
>   1. In kexec-tools, get VMCSINFO via sysfs and dump it as note infor=
mation
>      into vmcore.
>   2. Dump VMCS region of each guest vcpu and VMCSINFO into qemu-proce=
ss
>      core file. To do this, we will modify kernel core dumper, gdb gc=
ore
>      and crash gcore.
>   3. Dump guest image from the qemu-process core file into a vmcore.
>=20
> Changelog from v4 to v5:
> 1. The VMCSINFO is stored in a two-dimensional array filled with each
>    field's encoding and corresponding offset. So the size of VMCSINFO
>    is much smaller.
> 2. vmcs sysfs file /sys/devices/system/cpu/vmcs_id is moved to
>    /sys/devices/system/cpu/vmcs/id.
> 3. Rewrite the ABI entry for vmcs interface and remove the KernelVers=
ion
>    line.
>=20
> Changelog from v3 to v4:
> 1. All the variables and functions are moved to vmcsinfo-intel module=
=2E
> 2. Add a new sysfs interface /sys/devices/system/cpu/vmcs_id to expor=
t
>    vmcs revision identifier. And origial sysfs interface is changed
>    from /sys/devices/cpu/vmcs to /sys/devices/system/cpu/vmcs. Thanks
>    Greg KH for his helpful comments about sysfs.
>=20
> Changelog from v2 to v3:
> 1. New VMCSINFO format.
>    Now the VMCSINFO is mainly made up of an array that contains all v=
mcs
>    fields' offsets. The offsets aren't encoded because we decode them=
 in
>    the module itself. If some field doesn't exist or its offset canno=
t be
>    decoded correctly, the offset in the array is just set to zero.
> 2. New sysfs interface and Documentation/ABI entry.=20
>    We expose the actual fields in /sys/devices/cpu/vmcs instead of ju=
st
>    exporting the address of VMCSINFO in /sys/kernel/vmcsinfo.
>    For example, /sys/devices/cpu/vmcs/0800 contains the offset of
>    GUEST_DS_SELECTOR. 0800 is the encoding of GUEST_DS_SELECTOR.
>    Accordingly, ABI entry in Documentation is changed from sysfs-kern=
el-vmcsinfo
>    to sysfs-devices-cpu-vmcs.
>=20
> Changelog from v1 to v2:
> 1. The VMCSINFO now has a simple binary <field><encoded offset> forma=
t,
>    as below:
>      +-------------+--------------------------+
>      | Byte offset | Contents                 |
>      +-------------+--------------------------+
>      | 0           | VMCS revision identifier |
>      +-------------+--------------------------+
>      | 4           | <field><encoded offset>  |
>      +-------------+--------------------------+
>      | 16          | <field><encoded offset>  |
>      +-------------+--------------------------+
>      ......
>  =20
>    The first 32 bits of VMCSINFO contains the VMCS revision identifie=
r.
>    The remainder of VMCSINFO is used for <field><encoded offset> sets=
=2E
>    Each set takes 12 bytes: field occupys 4 bytes and its correspondi=
ng
>    encoded offset occupys 8 bytes.
>=20
>    Encoded offsets are raw values read by vmcs_read{16, 64, 32, l}, a=
nd
>    they are all unsigned extended to 8 bytes for each <field><encoded=
 offset>
>    set will have the same size.=20
>    We do not decode offsets here. The decoding work is delayed in use=
rspace
>    tools for more flexible handling.
>   =20
>    And here are two examples of the new VMCSINFO:
>    Processor: Intel(R) Core(TM)2 Duo CPU     E7500  @ 2.93GHz
>    VMCSINFO contains:
>      <0000000d>                   --> VMCS revision id =3D 0xd
>      <00004000><0000000001840180> --> OFFSET(PIN_BASED_VM_EXEC_CONTRO=
L) =3D 0x01840180
>      <00004002><0000000001940190> --> OFFSET(CPU_BASED_VM_EXEC_CONTRO=
L) =3D 0x01940190
>      <0000401e><000000000fe40fe0> --> OFFSET(SECONDARY_VM_EXEC_CONTRO=
L) =3D 0x0fe40fe0
>      <0000400c><0000000001e401e0> --> OFFSET(VM_EXIT_CONTROLS) =3D 0x=
01e401e0
>      ......
>=20
>    Processor: Intel(R) Xeon(R) CPU           E7540  @ 2.00GHz (24 cor=
es)
>    VMCSINFO contains:
>      <0000000e>                   --> VMCS revision id =3D 0xe=20
>      <00004000><0000000005540550> --> OFFSET(PIN_BASED_VM_EXEC_CONTRO=
L) =3D 0x05540550
>      <00004002><0000000005440540> --> OFFSET(CPU_BASED_VM_EXEC_CONTRO=
L) =3D 0x05440540
>      <0000401e><00000000054c0548> --> OFFSET(SECONDARY_VM_EXEC_CONTRO=
L) =3D 0x054c0548
>      <0000400c><00000000057c0578> --> OFFSET(VM_EXIT_CONTROLS) =3D 0x=
057c0578
>      ......
>=20
> 2. Add a new kernel module *vmcsinfo-intel* for filling VMCSINFO inst=
ead
>    of putting it in module kvm-intel. The new module is auto-loaded
>    when the vmx cpufeature is detected and it depends on module kvm-i=
ntel.
>    *Loading and unloading this module will have no side effect on the
>    running guests.*
> 3. The sysfs file vmcsinfo is splitted into 2 files:
>    /sys/kernel/vmcsinfo: shows physical address of VMCSINFO note info=
rmation.
>    /sys/kernel/vmcsinfo_maxsize: shows max size of VMCSINFO.
> 4. A new Documentation/ABI entry is added for vmcsinfo and vmcsinfo_m=
axsize.
> 5. Do not update VMCSINFO note when the kernel is panicked.
>=20
> zhangyanfei (3):
>   KVM: Export symbols for module vmcsinfo-intel
>   KVM-INTEL: Add new module vmcsinfo-intel to fill VMCSINFO
>   Documentation: Add ABI entry for vmcs sysfs interface.
>=20
>  Documentation/ABI/testing/sysfs-devices-system-cpu |   20 +
>  arch/x86/include/asm/vmx.h                         |   73 ++
>  arch/x86/kvm/Kconfig                               |   11 +
>  arch/x86/kvm/Makefile                              |    3 +
>  arch/x86/kvm/vmcsinfo.c                            |  714 ++++++++++=
++++++++++
>  arch/x86/kvm/vmx.c                                 |   81 +--
>  include/linux/kvm_host.h                           |    3 +
>  virt/kvm/kvm_main.c                                |    8 +-
>  8 files changed, 841 insertions(+), 72 deletions(-)
>  create mode 100644 arch/x86/kvm/vmcsinfo.c

