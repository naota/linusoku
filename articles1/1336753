Path: news.gmane.org!not-for-mail
From: Meredydd Luff <meredydd@senatehouse.org>
Newsgroups: gmane.linux.kernel.cross-arch,gmane.linux.kernel
Subject: Re: [PATCH] [RFC] syscalls,x86: Add execveat() system call (v2)
Date: Thu, 2 Aug 2012 10:14:53 +0100
Lines: 30
Approved: news@gmane.org
Message-ID: <CAD=T17Gkryua5TQW5h18kCu+yiViuVv6NyxtMw3C9we0RWzmKQ@mail.gmail.com>
References: <1343859049-3632-1-git-send-email-meredydd@senatehouse.org>
 <5019B36A.4030604@zytor.com> <CAD=T17Esguer01OsrxMtqEcHKZ-Ovg05+MxSdF7NhXENsUubgg@mail.gmail.com>
 <5019BC0E.4010109@zytor.com> <20120802065557.GI6481@ZenIV.linux.org.uk>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343898923 20478 80.91.229.3 (2 Aug 2012 09:15:23 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 09:15:23 +0000 (UTC)
Cc: "H. Peter Anvin" <hpa@zytor.com>, linux-kernel@vger.kernel.org,
	Kees Cook <keescook@chromium.org>,
	Ingo Molnar <mingo@redhat.com>, Jeff Dike <jdike@addtoit.com>,
	Richard Weinberger <richard@nod.at>,
	Andrew Morton <akpm@linux-foundation.org>,
	linux-arch@vger.kernel.org
To: Al Viro <viro@zeniv.linux.org.uk>
Original-X-From: linux-arch-owner@vger.kernel.org Thu Aug 02 11:15:20 2012
Return-path: <linux-arch-owner@vger.kernel.org>
Envelope-to: glka-linux-arch@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-arch-owner@vger.kernel.org>)
	id 1SwrUz-0003zU-Sv
	for glka-linux-arch@plane.gmane.org; Thu, 02 Aug 2012 11:15:18 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753590Ab2HBJPQ (ORCPT <rfc822;glka-linux-arch@m.gmane.org>);
	Thu, 2 Aug 2012 05:15:16 -0400
Original-Received: from mail-lb0-f174.google.com ([209.85.217.174]:55684 "EHLO
	mail-lb0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753594Ab2HBJPP (ORCPT
	<rfc822;linux-arch@vger.kernel.org>); Thu, 2 Aug 2012 05:15:15 -0400
Original-Received: by lbbgm6 with SMTP id gm6so857817lbb.19
        for <linux-arch@vger.kernel.org>; Thu, 02 Aug 2012 02:15:13 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type:x-gm-message-state;
        bh=Uwxc88XhrP90OS5GI/NejmV9bxYP2FgQYNnIB9EkiaM=;
        b=cViThtoByZF2Udt0lkgB13Tgd9q7sHw6e/cpG9r20M8toTDC6GAW/LWB+Ma0P+XUKY
         Tg0+MZ8UforUHtF7C4Edf1E/XTcgwoulQ3jmtro230cIhKqhj9aslXEBnC6rCBpq6iDA
         xbkISFrrIMnhUHrcwrELCmsaWCFpHTGRRP3CGfC5ewYYGm4fLmJsXH0BoUHHcRv5sSQS
         wJ0qGwB1QM56WjZbfLOrYcPm7JCRqvXSeUIU2TEZ81svZGPWceO1cxsDFxTpPm13XAew
         tJX87NhZpSjuet8s0Cvv17CP5VObj0jBPx4/jIZoZBbM1zMKODLLcrKSnTWRQOROMbLX
         IwVg==
Original-Received: by 10.152.148.195 with SMTP id tu3mr21012534lab.16.1343898913457;
 Thu, 02 Aug 2012 02:15:13 -0700 (PDT)
Original-Received: by 10.112.111.199 with HTTP; Thu, 2 Aug 2012 02:14:53 -0700 (PDT)
In-Reply-To: <20120802065557.GI6481@ZenIV.linux.org.uk>
X-Gm-Message-State: ALoCoQniPo+p7qnHf6RVujHxX21POJe8HFSWDoS9hBYpQdatej/dQVuVOndmIO+sJIInmB35iCQY
Original-Sender: linux-arch-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-arch.vger.kernel.org>
X-Mailing-List: linux-arch@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel.cross-arch:14743 gmane.linux.kernel:1336753
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1336753>

On Thu, Aug 2, 2012 at 7:55 AM, Al Viro <viro@zeniv.linux.org.uk> wrote:
>> This means you need an x32 version of the function -- execve
>> unfortunately is one of the few system calls which require a special x32
>> version (although it's a simple wrapper around sys32_execve).  See
>> sys_x32_execve.
>
> I *really* strongly object to doing that thing before we sanitize the
> situation with sys_execve().

"That thing" = "creating an x32 entry stub", or "merging execveat() at all"?

(snip)
> The thing is, there's essentially no reason to have more than one
> implementation.  What they are (badly) doing is "we need to find
> pt_regs to pass to do_execve(), the thing we are after has to be near
> our stack frame, so let's try to get to it that way".

Hang on...it's not just sys_execve that fits that description, is it?
You seem to be describing every call that needs a pt_regs parameter,
which at a glance is anything with a stub_ or PTREGSCALL in
arch/x86/kernel/entry_{32,64}.S. That's: clone, fork, vfork,
sigaltstack, iopl, execve, sigreturn, rt_sigreturn, vm86, vm86old.
Most of those are handled by a common PTREGSCALL macro, but there are
a few that get special treatment (different set on each arch - on
x86-64 it's execve and rt_sigreturn ; on i386 it's just clone).

Is there's something special about execve in particular, or do you
want to overhaul all the ptregscalls?

Meredydd
