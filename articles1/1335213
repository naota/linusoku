Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 41/41] vmscan: fix initial shrinker size handling
Date: Mon, 30 Jul 2012 10:31:40 -0700
Lines: 66
Approved: news@gmane.org
Message-ID: <20120730172904.512570228@linuxfoundation.org>
References: <20120730172901.306897424@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343669706 25711 80.91.229.3 (30 Jul 2012 17:35:06 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 30 Jul 2012 17:35:06 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk,
	Konstantin Khlebnikov <khlebnikov@openvz.org>,
	Dave Chinner <david@fromorbit.com>,
	Mel Gorman <mgorman@suse.de>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Jul 30 19:35:01 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Svtrt-0003bH-Li
	for glk-linux-kernel-3@plane.gmane.org; Mon, 30 Jul 2012 19:34:58 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755216Ab2G3ReE (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 30 Jul 2012 13:34:04 -0400
Original-Received: from mail-yx0-f174.google.com ([209.85.213.174]:44548 "EHLO
	mail-yx0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755103Ab2G3Rd6 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 30 Jul 2012 13:33:58 -0400
Original-Received: by mail-yx0-f174.google.com with SMTP id l2so5082674yen.19
        for <linux-kernel@vger.kernel.org>; Mon, 30 Jul 2012 10:33:57 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=jh8Rx+AhKUk+IcvH84YKLz6C0KjZKT5V5+dhAnfabVM=;
        b=EYp0w1Mow6sIzDgLHCGbaLjVZyCGHAiJGiIdZSCKT8e1FdhmS715DCmiOwf/W3b3oj
         RlCaaMAcloiNn34v6l0WFsfFBFOdK8KJ2LRoSsXx8zk2t3dg/RFP6i1jN91oMx+CIiTH
         wV44N0H5Yf9WGuZWyqB8WGdnzSVyhub35hgdtBVVgwborGZYdrh9d7EUPYc70mRGPfzE
         5I2geGvQkdBwgAAY+X6uJ2TSfbC2uqn66yE4i+eHU+R3U1I8PIQuVOlMz6BNoUxNutmU
         l6XBX9+hs52blGbVFr9f9LoyVxqIHHZEgGMa4O1V7BTOfbz5Sxe6EDLA+aaK595uLc4/
         lfCw==
Original-Received: by 10.66.74.97 with SMTP id s1mr26253115pav.11.1343669637451;
        Mon, 30 Jul 2012 10:33:57 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id pj10sm8294317pbb.46.2012.07.30.10.33.55
        (version=TLSv1/SSLv3 cipher=OTHER);
        Mon, 30 Jul 2012 10:33:56 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120730172901.306897424@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQmkSVmx5WSZeydBFkc45CrZqeCFXgU4hnw1A7ABi7cBIHmNvDKvBOziMshFEMCJDcnIDE3J
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1335213 gmane.linux.kernel.stable:28956
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1335213>

From: Greg KH <gregkh@linuxfoundation.org>

3.0-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Konstantin Khlebnikov <khlebnikov@openvz.org>

commit 635697c663f38106063d5659f0cf2e45afcd4bb5 upstream.

Stable note: The commit [acf92b48: vmscan: shrinker->nr updates race and
	go wrong] aimed to reduce excessive reclaim of slab objects but
	had bug in how it treated shrinker functions that returned -1.

A shrinker function can return -1, means that it cannot do anything
without a risk of deadlock.  For example prune_super() does this if it
cannot grab a superblock refrence, even if nr_to_scan=0.  Currently we
interpret this -1 as a ULONG_MAX size shrinker and evaluate `total_scan'
according to this.  So the next time around this shrinker can cause
really big pressure.  Let's skip such shrinkers instead.

Also make total_scan signed, otherwise the check (total_scan < 0) below
never works.

Signed-off-by: Konstantin Khlebnikov <khlebnikov@openvz.org>
Cc: Dave Chinner <david@fromorbit.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Mel Gorman <mgorman@suse.de>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 mm/vmscan.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -248,12 +248,16 @@ unsigned long shrink_slab(struct shrink_
 
 	list_for_each_entry(shrinker, &shrinker_list, list) {
 		unsigned long long delta;
-		unsigned long total_scan;
-		unsigned long max_pass;
+		long total_scan;
+		long max_pass;
 		int shrink_ret = 0;
 		long nr;
 		long new_nr;
 
+		max_pass = do_shrinker_shrink(shrinker, shrink, 0);
+		if (max_pass <= 0)
+			continue;
+
 		/*
 		 * copy the current shrinker scan count into a local variable
 		 * and zero it so that other concurrent shrinker invocations
@@ -264,7 +268,6 @@ unsigned long shrink_slab(struct shrink_
 		} while (cmpxchg(&shrinker->nr, nr, 0) != nr);
 
 		total_scan = nr;
-		max_pass = do_shrinker_shrink(shrinker, shrink, 0);
 		delta = (4 * nr_pages_scanned) / shrinker->seeks;
 		delta *= max_pass;
 		do_div(delta, lru_pages + 1);


