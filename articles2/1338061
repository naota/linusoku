Path: news.gmane.org!not-for-mail
From: "Semwal, Sumit" <sumit.semwal@ti.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel,gmane.linux.ports.arm.kernel,gmane.comp.video.dri.devel,gmane.linux.drivers.video-input-infrastructure
Subject: Re: [PATCH 2/2] dma-buf: add helpers for attacher dma-parms
Date: Mon, 6 Aug 2012 12:07:50 +0530
Lines: 151
Approved: news@gmane.org
Message-ID: <CAB2ybb-jWWgxNMwRBCOA5W4=y4Q9U-xQHeu+CtNp-eRteA4jxQ@mail.gmail.com>
References: <1342715014-5316-1-git-send-email-rob.clark@linaro.org>
 <1342715014-5316-3-git-send-email-rob.clark@linaro.org> <CAF6AEGs2evpga=h1+0L0sz+vG1czHff83z13WxdBv+xvcxQKxw@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344235100 10535 80.91.229.3 (6 Aug 2012 06:38:20 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 6 Aug 2012 06:38:20 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org, 
	linux-mm@kvack.org, linaro-mm-sig@lists.linaro.org, 
	dri-devel@lists.freedesktop.org, linux-media@vger.kernel.org, 
	patches@linaro.org, linux@arm.linux.org.uk, arnd@arndb.de, 
	jesse.barker@linaro.org, m.szyprowski@samsung.com, daniel@ffwll.ch, 
	t.stanislaws@samsung.com, maarten.lankhorst@canonical.com, 
	Rob Clark <rob@ti.com>
To: Rob Clark <rob.clark@linaro.org>
Original-X-From: owner-linux-mm@kvack.org Mon Aug 06 08:38:17 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SyGxD-0001bB-No
	for glkm-linux-mm-2@m.gmane.org; Mon, 06 Aug 2012 08:38:16 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 6245C6B0044; Mon,  6 Aug 2012 02:38:13 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 519A36B005A; Mon,  6 Aug 2012 02:38:13 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 1A30D6B005D; Mon,  6 Aug 2012 02:38:13 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx199.postini.com [74.125.245.199])
	by kanga.kvack.org (Postfix) with SMTP id 5B79A6B0044
	for <linux-mm@kvack.org>; Mon,  6 Aug 2012 02:38:12 -0400 (EDT)
Original-Received: from na3sys009aog125.obsmtp.com ([74.125.149.153]) (using TLSv1) by na3sys010amx199.postini.com ([74.125.244.10]) with SMTP;
	Mon, 06 Aug 2012 06:38:12 GMT
Original-Received: from mail-gg0-f173.google.com ([209.85.161.173]) (using TLSv1) by na3sys009aob125.postini.com ([74.125.148.12]) with SMTP
	ID DSNKUB9mUxjVRYvacj/nmZJbmK2WpW/uZAJC@postini.com; Sun, 05 Aug 2012 23:38:12 PDT
Original-Received: by ggnp1 with SMTP id p1so2109450ggn.4
        for <linux-mm@kvack.org>; Sun, 05 Aug 2012 23:38:11 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type:x-gm-message-state;
        bh=AfSuUO7Td42Daq4beEm/kQWE9cN5LZfpbn4nWrAma3A=;
        b=SDnTBzDInN68oXhWPf0CAEdzcuP+cCBHMJB71+th4EvEpw2RJnVKSK1gE68rkd67zw
         +mvFoUdI3cuKm9jXDn41n6gijmEWRdxUYJqjZZ2/QCD/jGcI4m8kS/MKZXJe6Y86ei6P
         IGAwvkLXFUe+RcuHCai+0jVEcm5GMr8Uw8RMXLi8eg07CBqsh8xEBchnjMhm6E/AcCkZ
         Ylr+Yo0wI7WGSiVlf/JrcBCtP6q+rWp9WORNC0/tXEz/skwQfAAs4EpchXO5kO/AujXB
         By2PRv7DsKbjsnfIWdzFYcKVyc+Y+Y0fjiVIGnb30HsiVdi3JH0y+eOyg9W5enrbfP7D
         XFRA==
Original-Received: by 10.66.76.227 with SMTP id n3mr15924399paw.53.1344235091221; Sun,
 05 Aug 2012 23:38:11 -0700 (PDT)
Original-Received: by 10.68.33.42 with HTTP; Sun, 5 Aug 2012 23:37:50 -0700 (PDT)
In-Reply-To: <CAF6AEGs2evpga=h1+0L0sz+vG1czHff83z13WxdBv+xvcxQKxw@mail.gmail.com>
X-Gm-Message-State: ALoCoQklnxEQPWMeXGNbifZiBn/cz8sDXo8Ci5Q0lD1T5rDxGkBR8HFHh4zqhL1EuJ9K3GYqVpgq
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.0100) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <sumit.semwal@ti.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83655 gmane.linux.kernel:1338061 gmane.linux.ports.arm.kernel:180326 gmane.comp.video.dri.devel:72162 gmane.linux.drivers.video-input-infrastructure:51833
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338061>

On Fri, Jul 20, 2012 at 10:09 PM, Rob Clark <rob.clark@linaro.org> wrote:
> Fyi, Daniel Vetter had suggested on IRC that it would be cleaner to
> have a single helper fxn that most-restrictive union of all attached
> device's dma_parms.  Really this should include dma_mask and
> coherent_dma_mask, I think.  But that touches a lot of other places in
> the code.  If no one objects to the cleanup of moving
> dma_mask/coherent_dma_mask into dma_parms, I'll do this first.
>
> So anyways, don't consider this patch yet for inclusion, I'll make an
> updated one based on dma_parms..
Hi Rob,
Any news on this patch-set?
>
> BR,
> -R
BR,
~Sumit.
>
> On Thu, Jul 19, 2012 at 11:23 AM, Rob Clark <rob.clark@linaro.org> wrote:
>> From: Rob Clark <rob@ti.com>
>>
>> Add some helpers to iterate through all attachers and get the most
>> restrictive segment size/count/boundary.
>>
>> Signed-off-by: Rob Clark <rob@ti.com>
>> ---
>>  drivers/base/dma-buf.c  |   63 +++++++++++++++++++++++++++++++++++++++++++++++
>>  include/linux/dma-buf.h |   19 ++++++++++++++
>>  2 files changed, 82 insertions(+)
>>
>> diff --git a/drivers/base/dma-buf.c b/drivers/base/dma-buf.c
>> index 24e88fe..757ee20 100644
>> --- a/drivers/base/dma-buf.c
>> +++ b/drivers/base/dma-buf.c
>> @@ -192,6 +192,69 @@ void dma_buf_put(struct dma_buf *dmabuf)
>>  EXPORT_SYMBOL_GPL(dma_buf_put);
>>
>>  /**
>> + * dma_buf_max_seg_size - helper for exporters to get the minimum of
>> + * all attached device's max segment size
>> + */
>> +unsigned int dma_buf_max_seg_size(struct dma_buf *dmabuf)
>> +{
>> +       struct dma_buf_attachment *attach;
>> +       unsigned int max = (unsigned int)-1;
>> +
>> +       if (WARN_ON(!dmabuf))
>> +               return 0;
>> +
>> +       mutex_lock(&dmabuf->lock);
>> +       list_for_each_entry(attach, &dmabuf->attachments, node)
>> +               max = min(max, dma_get_max_seg_size(attach->dev));
>> +       mutex_unlock(&dmabuf->lock);
>> +
>> +       return max;
>> +}
>> +EXPORT_SYMBOL_GPL(dma_buf_max_seg_size);
>> +
>> +/**
>> + * dma_buf_max_seg_count - helper for exporters to get the minimum of
>> + * all attached device's max segment count
>> + */
>> +unsigned int dma_buf_max_seg_count(struct dma_buf *dmabuf)
>> +{
>> +       struct dma_buf_attachment *attach;
>> +       unsigned int max = (unsigned int)-1;
>> +
>> +       if (WARN_ON(!dmabuf))
>> +               return 0;
>> +
>> +       mutex_lock(&dmabuf->lock);
>> +       list_for_each_entry(attach, &dmabuf->attachments, node)
>> +               max = min(max, dma_get_max_seg_count(attach->dev));
>> +       mutex_unlock(&dmabuf->lock);
>> +
>> +       return max;
>> +}
>> +EXPORT_SYMBOL_GPL(dma_buf_max_seg_count);
>> +
>> +/**
>> + * dma_buf_get_seg_boundary - helper for exporters to get the most
>> + * restrictive segment alignment of all the attached devices
>> + */
>> +unsigned int dma_buf_get_seg_boundary(struct dma_buf *dmabuf)
>> +{
>> +       struct dma_buf_attachment *attach;
>> +       unsigned int mask = (unsigned int)-1;
>> +
>> +       if (WARN_ON(!dmabuf))
>> +               return 0;
>> +
>> +       mutex_lock(&dmabuf->lock);
>> +       list_for_each_entry(attach, &dmabuf->attachments, node)
>> +               mask &= dma_get_seg_boundary(attach->dev);
>> +       mutex_unlock(&dmabuf->lock);
>> +
>> +       return mask;
>> +}
>> +EXPORT_SYMBOL_GPL(dma_buf_get_seg_boundary);
>> +
>> +/**
>>   * dma_buf_attach - Add the device to dma_buf's attachments list; optionally,
>>   * calls attach() of dma_buf_ops to allow device-specific attach functionality
>>   * @dmabuf:    [in]    buffer to attach device to.
>> diff --git a/include/linux/dma-buf.h b/include/linux/dma-buf.h
>> index eb48f38..9533b9b 100644
>> --- a/include/linux/dma-buf.h
>> +++ b/include/linux/dma-buf.h
>> @@ -167,6 +167,10 @@ int dma_buf_fd(struct dma_buf *dmabuf, int flags);
>>  struct dma_buf *dma_buf_get(int fd);
>>  void dma_buf_put(struct dma_buf *dmabuf);
>>
>> +unsigned int dma_buf_max_seg_size(struct dma_buf *dmabuf);
>> +unsigned int dma_buf_max_seg_count(struct dma_buf *dmabuf);
>> +unsigned int dma_buf_get_seg_boundary(struct dma_buf *dmabuf);
>> +
>>  struct sg_table *dma_buf_map_attachment(struct dma_buf_attachment *,
>>                                         enum dma_data_direction);
>>  void dma_buf_unmap_attachment(struct dma_buf_attachment *, struct sg_table *,
>> @@ -220,6 +224,21 @@ static inline void dma_buf_put(struct dma_buf *dmabuf)
>>         return;
>>  }
>>
>> +static inline unsigned int dma_buf_max_seg_size(struct dma_buf *dmabuf)
>> +{
>> +       return 0;
>> +}
>> +
>> +static inline unsigned int dma_buf_max_seg_count(struct dma_buf *dmabuf)
>> +{
>> +       return 0;
>> +}
>> +
>> +static inline unsigned int dma_buf_get_seg_boundary(struct dma_buf *dmabuf)
>> +{
>> +       return 0;
>> +}
>> +
>>  static inline struct sg_table *dma_buf_map_attachment(
>>         struct dma_buf_attachment *attach, enum dma_data_direction write)
>>  {
>> --
>> 1.7.9.5
>>

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

