Path: news.gmane.org!not-for-mail
From: Paul Moore <paul@paul-moore.com>
Newsgroups: gmane.linux.kernel,gmane.comp.security.selinux
Subject: Re: NULL pointer dereference in selinux_ip_postroute_compat
Date: Wed, 08 Aug 2012 16:46:59 -0400
Lines: 78
Approved: news@gmane.org
Message-ID: <1610114.P5WAdux1ri@sifl>
References: <50215A7E.8000701@linaro.org> <1344456578.28967.244.camel@edumazet-glaptop> <1344457972.28967.251.camel@edumazet-glaptop>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7Bit
X-Trace: dough.gmane.org 1344458845 32296 80.91.229.3 (8 Aug 2012 20:47:25 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 20:47:25 +0000 (UTC)
Cc: Eric Paris <eparis@parisplace.org>,
	John Stultz <johnstul@us.ibm.com>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	lkml <linux-kernel@vger.kernel.org>,
	James Morris <james.l.morris@oracle.com>,
	selinux@tycho.nsa.gov, Eric Dumazet <edumazet@google.com>,
	john.johansen@canonical.com
To: Eric Dumazet <eric.dumazet@gmail.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 22:47:21 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzD9z-0006fl-NI
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 22:47:20 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759298Ab2HHUrI (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 16:47:08 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:37407 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1759163Ab2HHUrG (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 16:47:06 -0400
Original-Received: by yhmm54 with SMTP id m54so1273524yhm.19
        for <linux-kernel@vger.kernel.org>; Wed, 08 Aug 2012 13:47:04 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:user-agent:in-reply-to
         :references:mime-version:content-transfer-encoding:content-type
         :x-gm-message-state;
        bh=w9FtqID3ZE0Qqpfj20pe1ZAEWxra8LGWaLszucwD0NE=;
        b=cf2mwxU4nOa/snbO+jNV1LCNBDbQqKUs1btz9IAUfJNO6UhhSkDJi8V0LSWfgg//Df
         HF+iIaJklYpMU6xwzSQyCZu/aBy0sD2g/9WX7PbL+aDNys6+GezSb4RzhLWCo9kUngeL
         yTlagdfKd9QLAgVuBzONgYYwqb7R/KXZmvGKJe93x9z1hst3UNiJ2kaziB1hQ1JPuqsL
         juBAM/qhITOOKBiE2nyt75wdEdeMICSJijVfNGx4D74TzD5+On7lh17ZuLSE+sGRJRxA
         niL/UCjpMkAxeERpaGUl0zfvlvvzXfs+yP648xH2bic/O6ExOaCObt4fsdgyYMkzfm6J
         9ipw==
Original-Received: by 10.50.161.131 with SMTP id xs3mr197755igb.46.1344458823723;
        Wed, 08 Aug 2012 13:47:03 -0700 (PDT)
Original-Received: from sifl.localnet (c-76-119-162-148.hsd1.nh.comcast.net. [76.119.162.148])
        by mx.google.com with ESMTPS id uq6sm3404742igb.14.2012.08.08.13.47.02
        (version=TLSv1/SSLv3 cipher=OTHER);
        Wed, 08 Aug 2012 13:47:02 -0700 (PDT)
User-Agent: KMail/4.9 (Linux/3.4.7-gentoo; KDE/4.9.0; x86_64; ; )
In-Reply-To: <1344457972.28967.251.camel@edumazet-glaptop>
X-Gm-Message-State: ALoCoQlHx1SVeE0dEE26DZ0Cwb7padCjMkBKNQiT8LgRfpp+G52j4D5rDulOj5dpMp1ThnsZEM02
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340302 gmane.comp.security.selinux:17714
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340302>

On Wednesday, August 08, 2012 10:32:52 PM Eric Dumazet wrote:
> On Wed, 2012-08-08 at 22:09 +0200, Eric Dumazet wrote:
> > On Wed, 2012-08-08 at 15:59 -0400, Eric Paris wrote:
> > > Seems wrong.  We shouldn't ever need ifdef CONFIG_SECURITY in core
> > > code.
> > 
> > Sure but it seems include file misses an accessor for this.
> > 
> > We could add it on a future cleanup patch, as Paul mentioned.
> 
> I cooked following patch.
> But smack/smack_lsm.c makes a reference to
> smk_of_current()... so it seems we are in a hole...
> 
> It makes little sense to me to have any kind of security on this
> internal sockets.
> 
> Maybe selinux should not crash if sk->sk_security is NULL ?

I realize our last emails probably passed each other mid-flight, but hopefully 
it explains why we can't just pass packets when sk->sk_security is NULL.

Regardless, some quick comments below ...

> diff --git a/security/selinux/hooks.c b/security/selinux/hooks.c
> index 6c77f63..459eca6 100644
> --- a/security/selinux/hooks.c
> +++ b/security/selinux/hooks.c
> @@ -4289,10 +4289,13 @@ out:
>  	return 0;
>  }
> 
> -static int selinux_sk_alloc_security(struct sock *sk, int family, ...
> +static int selinux_sk_alloc_security(struct sock *sk, int family, ...
>  {
>  	struct sk_security_struct *sksec;
> 
> +	if (check && sk->sk_security)
> +		return 0;
> +
>  	sksec = kzalloc(sizeof(*sksec), priority);
>  	if (!sksec)
>  		return -ENOMEM;

I think I might replace the "check" boolean with a "kern/kernel" boolean so 
that in addition to the allocation we can also initialize the socket to 
SECINITSID_KERNEL/kernel_t here in the case when the boolean is set.  The only 
place that would set the boolean to true would be ip_send_unicast_reply(), all 
other callers would set it to false.

> diff --git a/security/smack/smack_lsm.c b/security/smack/smack_lsm.c
> index 8221514..8965cf1 100644
> --- a/security/smack/smack_lsm.c
> +++ b/security/smack/smack_lsm.c
> @@ -1754,11 +1754,14 @@ static void smack_task_to_inode(struct task_struct
> *p, struct inode *inode) *
>   * Returns 0 on success, -ENOMEM is there's no memory
>   */
> -static int smack_sk_alloc_security(struct sock *sk, int family, gfp_t
> gfp_flags) +static int smack_sk_alloc_security(struct sock *sk, int family,
> gfp_t gfp_flags, bool check) {
>  	char *csp = smk_of_current();
>  	struct socket_smack *ssp;
> 
> +	if (check && sk->sk_security)
> +		return 0;
> +
>  	ssp = kzalloc(sizeof(struct socket_smack), gfp_flags);
>  	if (ssp == NULL)
>  		return -ENOMEM;

In the case of Smack, when the kernel boolean is true I think the right 
solution is to use smack_net_ambient.

-- 
paul moore
www.paul-moore.com

