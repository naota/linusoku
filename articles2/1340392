Path: news.gmane.org!not-for-mail
From: Kent Overstreet <koverstreet@google.com>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.bcache.devel,gmane.linux.kernel.device-mapper.devel,gmane.linux.kernel.drbd.devel
Subject: Re: [PATCH v5 05/12] block: Kill bi_destructor
Date: Wed, 8 Aug 2012 17:21:54 -0700
Lines: 70
Approved: news@gmane.org
Message-ID: <20120809002154.GE7262@moria.home.lan>
References: <1344290921-25154-1-git-send-email-koverstreet@google.com>
 <1344290921-25154-6-git-send-email-koverstreet@google.com>
 <20120808222223.GD6983@dhcp-172-17-108-109.mtv.corp.google.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1344471859 29092 80.91.229.3 (9 Aug 2012 00:24:19 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 9 Aug 2012 00:24:19 +0000 (UTC)
Cc: linux-bcache@vger.kernel.org, linux-kernel@vger.kernel.org,
	dm-devel@redhat.com, axboe@kernel.dk, agk@redhat.com,
	neilb@suse.de, drbd-dev@lists.linbit.com, vgoyal@redhat.com,
	mpatocka@redhat.com, sage@newdream.net, yehuda@hq.newdream.net
To: Tejun Heo <tj@kernel.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 09 02:23:08 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzGWp-0000Zv-Km
	for glk-linux-kernel-3@plane.gmane.org; Thu, 09 Aug 2012 02:23:07 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759416Ab2HIAWb (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 20:22:31 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:61378 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1758674Ab2HIAW3 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 20:22:29 -0400
Original-Received: by pbbrr13 with SMTP id rr13so2265061pbb.19
        for <linux-kernel@vger.kernel.org>; Wed, 08 Aug 2012 17:22:28 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent;
        bh=Pd/AqCwQy6JearZVJBREpfQlNE/DQwJQvMGVJh4CJ9s=;
        b=MLHI2RLGribjAg3r0piAVdvOsvWnYLw9FfkhsSxZeaFvBjGQCeB1YEFznknf61Knkm
         aCfcfKIwppP5y3PX7qScr164nwxQfm1ByBGo0p8D0GGgOhijZKgMGZANSYvjO+gpKTSB
         UHThQGUYMuO5foMuLTu9evebvv5ZTWZDZxP5zU9HiDNpdHIOLrZjlcX+C5phn6/7YcHe
         IzmZn8m+aXxkrzQsHVtvM0n7KkTruvUSJkt0JvAmeNgECmAnBjAvjdwL+sZf7aR5ilMx
         uJvF5WPERqCHvedslVPOdXJ9hRxccKXfmj5TXixsWJwbCMdkLnJpuxAGTcu4GQEnff+C
         92qg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent
         :x-gm-message-state;
        bh=Pd/AqCwQy6JearZVJBREpfQlNE/DQwJQvMGVJh4CJ9s=;
        b=EmVHBDpBgErLYcSRD9X6tT2cLjPvThTrpMsXPsPHH18jh2QlmCJe6v6M9Mq/m3Lo7l
         i5Xohh9bZ489HpQ0loOkU2bnrmYwt4zSa7YQSVEN78Oy6u7X0Im0uUD2fEiUAcZ2ZntS
         Evnfki/jS50sT4shEki5SaSKiVrAg439WYdcrD/o/yDneB3UYWQN98MkQ4+ycguDuBLj
         i0UCe5lA2O5PFnyk5agW/nr5ODjwAtLg5pLi7kCvSxSxv5fkFCkwukDtYaiztU5X4e1q
         ByFhobSTBLCryE2hNlMBkQnF/MsnuaVywhUoxuNNRBALkpWJHDzj5yzfdRww3CVA5Kvf
         VzQg==
Original-Received: by 10.68.226.6 with SMTP id ro6mr25809245pbc.115.1344471748489;
        Wed, 08 Aug 2012 17:22:28 -0700 (PDT)
Original-Received: by 10.68.226.6 with SMTP id ro6mr25809213pbc.115.1344471748310;
        Wed, 08 Aug 2012 17:22:28 -0700 (PDT)
Original-Received: from moria.home.lan (c-67-188-232-164.hsd1.ca.comcast.net. [67.188.232.164])
        by mx.google.com with ESMTPS id rm9sm6496206pbc.72.2012.08.08.17.22.26
        (version=SSLv3 cipher=OTHER);
        Wed, 08 Aug 2012 17:22:27 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <20120808222223.GD6983@dhcp-172-17-108-109.mtv.corp.google.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Gm-Message-State: ALoCoQnwUyiDVpBe83xiauED2QreNu65CILNFeG3TjX/85AAT4sc7cc2/Z6r0fzM1hN0BOgUdJmeEJshnW5F4CfBAdKsSFJNuhuW1JYsKZd7beuEpxWbhirJ9NqaXHqKG/7RkLXUiZMTYhpWoDcFF/yndWR7gEy+S9cl7x5fOnvz3HKTR6Pl8/hUerr2w/SJG89yzCci+WIXGJtGRKOLFJzCCUO5dg9N6Q==
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340392 gmane.linux.kernel.bcache.devel:706 gmane.linux.kernel.device-mapper.devel:16518 gmane.linux.kernel.drbd.devel:2087
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340392>

On Wed, Aug 08, 2012 at 03:22:23PM -0700, Tejun Heo wrote:
> Hello,
> 
> On Mon, Aug 06, 2012 at 03:08:34PM -0700, Kent Overstreet wrote:
> > Now that we've got generic code for freeing bios allocated from bio
> > pools, this isn't needed anymore.
> > 
> > This also changes the semantics of bio_free() a bit - it now also frees
> > bios allocated by bio_kmalloc(). It's also no longer exported, as
> > without bi_destructor there should be no need for it to be called
> > anywhere else.
> > 
> > v5: Switch to BIO_KMALLOC_POOL ((void *)~0), per Boaz
> > 
> > Signed-off-by: Kent Overstreet <koverstreet@google.com>
> > ---
> > diff --git a/drivers/block/drbd/drbd_main.c b/drivers/block/drbd/drbd_main.c
> > index 920ede2..19bf632 100644
> > --- a/drivers/block/drbd/drbd_main.c
> > +++ b/drivers/block/drbd/drbd_main.c
> > @@ -161,23 +161,12 @@ static const struct block_device_operations drbd_ops = {
> >  	.release = drbd_release,
> >  };
> >  
> > -static void bio_destructor_drbd(struct bio *bio)
> > -{
> > -	bio_free(bio, drbd_md_io_bio_set);
> > -}
> > -
> >  struct bio *bio_alloc_drbd(gfp_t gfp_mask)
> >  {
> > -	struct bio *bio;
> > -
> >  	if (!drbd_md_io_bio_set)
> >  		return bio_alloc(gfp_mask, 1);
> >  
> > -	bio = bio_alloc_bioset(gfp_mask, 1, drbd_md_io_bio_set);
> > -	if (!bio)
> > -		return NULL;
> > -	bio->bi_destructor = bio_destructor_drbd;
> > -	return bio;
> > +	return bio_alloc_bioset(gfp_mask, 1, drbd_md_io_bio_set);
> >  }
> 
> Does this chunk belong to this patch?

Hrm, that should've been in the first patch. Will move it.

> 
> > @@ -56,6 +56,8 @@ static struct biovec_slab bvec_slabs[BIOVEC_NR_POOLS] __read_mostly = {
> >   */
> >  struct bio_set *fs_bio_set;
> >  
> > +#define BIO_KMALLOC_POOL ((void *) ~0)
> 
> What's wrong with good ol' NULL?

If it's NULL, we can't distinguish between bios where that field wasn't
set (i.e. bios that were statically allocated somewhere) from bios that
were allocated by bio_kmalloc().

It's just there to make debugging easier - if bi_cnt goes to 0 on a bio
where it shouldn't we'll catch it at the BUG_ON() in bio_free() instead
of kfreeing a bad pointer.

> 
> Thanks.
> 
> -- 
> tejun
