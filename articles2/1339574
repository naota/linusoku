Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 27/49] ext4: dont let i_reserved_meta_blocks go negative
Date: Tue,  7 Aug 2012 15:44:45 -0700
Lines: 56
Approved: news@gmane.org
Message-ID: <20120807222029.321223796@linuxfoundation.org>
References: <20120807222026.848194739@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344380044 24427 80.91.229.3 (7 Aug 2012 22:54:04 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 22:54:04 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk, Brian Foster <bfoster@redhat.com>,
	"Theodore Tso" <tytso@mit.edu>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 00:54:02 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sysf3-00044Z-1E
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 00:54:01 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1031253Ab2HGWxx (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 7 Aug 2012 18:53:53 -0400
Original-Received: from mail-yx0-f174.google.com ([209.85.213.174]:41572 "EHLO
	mail-yx0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1031194Ab2HGWqq (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 7 Aug 2012 18:46:46 -0400
Original-Received: by mail-yx0-f174.google.com with SMTP id l2so172738yen.19
        for <linux-kernel@vger.kernel.org>; Tue, 07 Aug 2012 15:46:45 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=Klv7UOvtYqKuWbHUWpuCpv5xWcvvGPH53sXD5HRBzSA=;
        b=hll3IvsSSgRTkz/R0TeSBgNr44D+w7zba1qpOquTK2jFTVodQvLP9SpDXZMkrpRkiD
         t2Pyn1i/+mylyeJUxnAeYm8NXrICypYa4lJKU9Xc1duQnddOSgV4wfaIFdTT2EPt2IN8
         3T+5vMx+3nvZFX/sta9a63+LnzZiUrCWqxL9srntQ7pCHBFERjDFM5zBB3q8H2Uo7YLL
         tnVHk9DXatkwqRvozNqUYyPS6NzWtlIL7UPKOnISjHbI9xf8MY5DAe+U7Uro9sGEePMZ
         yZ5ZTYb2weJEUAoorwa+kp4w5w7F3ZEbhr1NXALgsRQvC6Hx1d/9JNqFmIAGDnAlRMhP
         VoIg==
Original-Received: by 10.66.82.97 with SMTP id h1mr29257502pay.45.1344379605435;
        Tue, 07 Aug 2012 15:46:45 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id pt2sm11977338pbb.58.2012.08.07.15.46.43
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 07 Aug 2012 15:46:44 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120807222026.848194739@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQml42ih0wbUsRoprDE3Osba+BYt+beLuOnWPHtKHmKNf+i6e0h9quHhnbGEmVTBq0nbs/5O
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1339574 gmane.linux.kernel.stable:29407
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1339574>

From: Greg KH <gregkh@linuxfoundation.org>

3.0-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Brian Foster <bfoster@redhat.com>

commit 97795d2a5b8d3c8dc4365d4bd3404191840453ba upstream.

If we hit a condition where we have allocated metadata blocks that
were not appropriately reserved, we risk underflow of
ei->i_reserved_meta_blocks.  In turn, this can throw
sbi->s_dirtyclusters_counter significantly out of whack and undermine
the nondelalloc fallback logic in ext4_nonda_switch().  Warn if this
occurs and set i_allocated_meta_blocks to avoid this problem.

This condition is reproduced by xfstests 270 against ext2 with
delalloc enabled:

Mar 28 08:58:02 localhost kernel: [  171.526344] EXT4-fs (loop1): delayed block allocation failed for inode 14 at logical offset 64486 with max blocks 64 with error -28
Mar 28 08:58:02 localhost kernel: [  171.526346] EXT4-fs (loop1): This should not happen!! Data will be lost

270 ultimately fails with an inconsistent filesystem and requires an
fsck to repair.  The cause of the error is an underflow in
ext4_da_update_reserve_space() due to an unreserved meta block
allocation.

Signed-off-by: Brian Foster <bfoster@redhat.com>
Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/ext4/inode.c |    9 +++++++++
 1 file changed, 9 insertions(+)

--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@ -1134,6 +1134,15 @@ void ext4_da_update_reserve_space(struct
 		used = ei->i_reserved_data_blocks;
 	}
 
+	if (unlikely(ei->i_allocated_meta_blocks > ei->i_reserved_meta_blocks)) {
+		ext4_msg(inode->i_sb, KERN_NOTICE, "%s: ino %lu, allocated %d "
+			 "with only %d reserved metadata blocks\n", __func__,
+			 inode->i_ino, ei->i_allocated_meta_blocks,
+			 ei->i_reserved_meta_blocks);
+		WARN_ON(1);
+		ei->i_allocated_meta_blocks = ei->i_reserved_meta_blocks;
+	}
+
 	/* Update per-inode reservations */
 	ei->i_reserved_data_blocks -= used;
 	ei->i_reserved_meta_blocks -= ei->i_allocated_meta_blocks;


