Path: news.gmane.org!not-for-mail
From: Takashi Iwai <tiwai@suse.de>
Newsgroups: gmane.linux.kernel,gmane.linux.alsa.devel
Subject: [PATCH 2/2] ALSA: hda - Deferred probing with request_firmware_nowait()
Date: Thu, 09 Aug 2012 15:11:41 +0200
Lines: 110
Approved: news@gmane.org
Message-ID: <s5ha9y42os2.wl%tiwai@suse.de>
References: <1344494723-6827-1-git-send-email-thierry.reding@avionic-design.de>
	<s5hhascft86.wl%tiwai@suse.de>
	<20120809070813.GA6979@avionic-0098.mockup.avionic-design.de>
	<s5hd330frn1.wl%tiwai@suse.de>
	<20120809073642.GA24695@avionic-0098.mockup.avionic-design.de>
	<s5h7gt8fr47.wl%tiwai@suse.de>
	<20120809080713.GC24808@avionic-0098.mockup.avionic-design.de>
	<s5hzk64earo.wl%tiwai@suse.de>
	<20120809103430.GA1560@avionic-0098.mockup.avionic-design.de>
	<s5hobmk2ql5.wl%tiwai@suse.de>
	<s5hd3302ovw.wl%tiwai@suse.de>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
X-Trace: dough.gmane.org 1344517910 6323 80.91.229.3 (9 Aug 2012 13:11:50 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 9 Aug 2012 13:11:50 +0000 (UTC)
Cc: alsa-devel@alsa-project.org, linux-kernel@vger.kernel.org,
	David Henningsson <david.henningsson@canonical.com>
To: Thierry Reding <thierry.reding@avionic-design.de>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 09 15:11:49 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzSWj-0007MW-6O
	for glk-linux-kernel-3@plane.gmane.org; Thu, 09 Aug 2012 15:11:49 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758226Ab2HINLn (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 9 Aug 2012 09:11:43 -0400
Original-Received: from cantor2.suse.de ([195.135.220.15]:56217 "EHLO mx2.suse.de"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752310Ab2HINLm (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 9 Aug 2012 09:11:42 -0400
Original-Received: from relay2.suse.de (unknown [195.135.220.254])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx2.suse.de (Postfix) with ESMTP id 8553DA3421;
	Thu,  9 Aug 2012 15:11:41 +0200 (CEST)
In-Reply-To: <s5hd3302ovw.wl%tiwai@suse.de>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/24.1
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340687 gmane.linux.alsa.devel:99896
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340687>

For processing the firmware handling properly for built-in kernels,
implement an asynchronous f/w loading with request_firmware_nowait().
This means that the codec probing is deferred when the patch option is
specified.

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 sound/pci/hda/hda_codec.c |  2 +-
 sound/pci/hda/hda_intel.c | 41 +++++++++++++++++++++++++++++++++++++----
 2 files changed, 38 insertions(+), 5 deletions(-)

diff --git a/sound/pci/hda/hda_codec.c b/sound/pci/hda/hda_codec.c
index 88a9c20..408babc 100644
--- a/sound/pci/hda/hda_codec.c
+++ b/sound/pci/hda/hda_codec.c
@@ -4184,7 +4184,7 @@ int snd_hda_codec_build_pcms(struct hda_codec *codec)
  *
  * This function returns 0 if successful, or a negative error code.
  */
-int __devinit snd_hda_build_pcms(struct hda_bus *bus)
+int snd_hda_build_pcms(struct hda_bus *bus)
 {
 	struct hda_codec *codec;
 
diff --git a/sound/pci/hda/hda_intel.c b/sound/pci/hda/hda_intel.c
index b25d539..06e7897 100644
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@ -493,6 +493,7 @@ struct azx {
 	unsigned int use_vga_switcheroo:1;
 	unsigned int init_failed:1; /* delayed init failed */
 	unsigned int disabled:1; /* disabled by VGA-switcher */
+	unsigned int probe_deferred:1; /* deferred probing for patch loader */
 
 	/* for debugging */
 	unsigned int last_cmd[AZX_MAX_CODECS];
@@ -564,13 +565,17 @@ enum {
  * VGA-switcher support
  */
 #ifdef SUPPORT_VGA_SWITCHEROO
+#define use_vga_switcheroo(chip)	((chip)->use_vga_switcheroo)
+#else
+#define use_vga_switcheroo(chip)	0
+#endif
+
+#if defined(SUPPORT_VGA_SWITCHEROO) || defined(CONFIG_SND_HDA_PATCH_LOADER)
 #define DELAYED_INIT_MARK
 #define DELAYED_INITDATA_MARK
-#define use_vga_switcheroo(chip)	((chip)->use_vga_switcheroo)
 #else
 #define DELAYED_INIT_MARK	__devinit
 #define DELAYED_INITDATA_MARK	__devinitdata
-#define use_vga_switcheroo(chip)	0
 #endif
 
 static char *driver_short_names[] DELAYED_INITDATA_MARK = {
@@ -3155,6 +3160,31 @@ static void power_down_all_codecs(struct azx *chip)
 #endif
 }
 
+/* callback from request_firmware_nowait() */
+static void azx_firmware_cb(const struct firmware *fw, void *context)
+{
+	struct snd_card *card = context;
+	struct azx *chip = card->private_data;
+	struct pci_dev *pci = chip->pci;
+
+	if (!fw) {
+		snd_printk(KERN_ERR SFX "Cannot load firmware, aborting\n");
+		goto error;
+	}
+
+	chip->probe_deferred = 0;
+	if (!chip->disabled) {
+		/* continue probing */
+		if (azx_probe_continue(chip))
+			goto error;
+	}
+	return; /* OK */
+
+ error:
+	snd_card_free(card);
+	pci_set_drvdata(pci, NULL);
+}
+
 static int __devinit azx_probe(struct pci_dev *pci,
 			       const struct pci_device_id *pci_id)
 {
@@ -3187,13 +3217,16 @@ static int __devinit azx_probe(struct pci_dev *pci,
 	if (patch[dev] && *patch[dev]) {
 		snd_printk(KERN_ERR SFX "Applying patch firmware '%s'\n",
 			   patch[dev]);
-		err = request_firmware(&chip->fw, patch[dev], &pci->dev);
+		err = request_firmware_nowait(THIS_MODULE, true, patch[dev],
+					      &pci->dev, GFP_KERNEL, card,
+					      azx_firmware_cb);
 		if (err < 0)
 			goto out_free;
+		chip->probe_deferred = 1;
 	}
 #endif /* CONFIG_SND_HDA_PATCH_LOADER */
 
-	if (!chip->disabled) {
+	if (!chip->disabled && !chip->probe_deferred) {
 		err = azx_probe_continue(chip);
 		if (err < 0)
 			goto out_free;
-- 
1.7.11.4

