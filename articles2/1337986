Path: news.gmane.org!not-for-mail
From: Nicolas Pitre <nicolas.pitre@linaro.org>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: Re: [PATCH 02/22] ARM: use late patch framework for phys-virt
 patching
Date: Sun, 5 Aug 2012 22:06:30 -0400 (EDT)
Lines: 97
Approved: news@gmane.org
Message-ID: <alpine.LFD.2.02.1208052153540.5231@xanadu.home>
References: <1343775898-28345-1-git-send-email-cyril@ti.com> <1343775898-28345-3-git-send-email-cyril@ti.com> <alpine.LFD.2.02.1208040138560.5231@xanadu.home> <501E7D41.8070303@ti.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: dough.gmane.org 1344218810 11681 80.91.229.3 (6 Aug 2012 02:06:50 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 6 Aug 2012 02:06:50 +0000 (UTC)
Cc: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
	arnd@arndb.de, catalin.marinas@arm.com, linux@arm.linux.org.uk,
	will.deacon@arm.com
To: Cyril Chemparathy <cyril@ti.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Aug 06 04:06:49 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SyCiS-0006SY-Ak
	for glk-linux-kernel-3@plane.gmane.org; Mon, 06 Aug 2012 04:06:44 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755476Ab2HFCGf (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 5 Aug 2012 22:06:35 -0400
Original-Received: from mail-qa0-f53.google.com ([209.85.216.53]:38803 "EHLO
	mail-qa0-f53.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755352Ab2HFCGd (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 5 Aug 2012 22:06:33 -0400
Original-Received: by qaas11 with SMTP id s11so611143qaa.19
        for <linux-kernel@vger.kernel.org>; Sun, 05 Aug 2012 19:06:33 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:in-reply-to:message-id:references
         :user-agent:mime-version:content-type:x-gm-message-state;
        bh=gQLG0Hx72MNIpekpJhs4Wyv5zZxxTREV8suxlwAccsE=;
        b=QMJK+xKxq/10U+zlguc7hcsZSqYEuR6mgONeil36GP4/UueolpLy1FdT/plBRx32eh
         Rm1usO5coBduaV0d6+C2kO0+FOiWIBteTAqJi/aXM6VcJSJde8BjATPgJHkOwlcbf33z
         UFqwa1fyRfow+Loe7EYfAVoPb7DdZyc8bFq3nK3QDLkSqDSD8CP1XKBNmixSLBJz7ab2
         CLgPcWVrNjC0GQN2oxi/MmajPGrUvRSYLkd8a9GdtwHP0rCby+pBqqjJMHzMM6Dc8qzv
         c68UPmQ8UnKraLfjBpP9n7B5q8pDcOEjW/0bmV0Ac5J6vPXuDIpXNWmGYqm3sGCJ0y7e
         Hpyw==
Original-Received: by 10.224.217.130 with SMTP id hm2mr15316653qab.87.1344218792979;
        Sun, 05 Aug 2012 19:06:32 -0700 (PDT)
Original-Received: from xanadu.home (modemcable149.196-201-24.mc.videotron.ca. [24.201.196.149])
        by mx.google.com with ESMTPS id eb10sm13070971qab.4.2012.08.05.19.06.31
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 05 Aug 2012 19:06:32 -0700 (PDT)
In-Reply-To: <501E7D41.8070303@ti.com>
User-Agent: Alpine 2.02 (LFD 1266 2009-07-14)
X-Gm-Message-State: ALoCoQlVMCRyamUSFnchn7YVLrNEHVw0sSgycCn8280BbYwHYqaKflqBvnAdQIaBtiYj2FtuoLMS
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337986 gmane.linux.ports.arm.kernel:180297
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337986>

On Sun, 5 Aug 2012, Cyril Chemparathy wrote:

> Hi Nicolas,
> 
> On 8/4/2012 2:15 AM, Nicolas Pitre wrote:
> > On Tue, 31 Jul 2012, Cyril Chemparathy wrote:
> > 
> > > This patch replaces the original physical offset patching implementation
> > > with one that uses the newly added patching framework.  In the process, we
> > > now
> > > unconditionally initialize the __pv_phys_offset and __pv_offset globals in
> > > the
> > > head.S code.
> > 
> > Why unconditionally initializing those?  There is no reason for that.
> > 
> 
> We could keep this conditional on LPAE, but do you see any specific need for
> keeping it conditional?

This has nothing to do with LPAe.  This is about 
CONFIG_ARM_PATCH_PHYS_VIRT only.  If not selected, those global 
vaariables have no need to exist.

> > Comments below.
> > 
> > > diff --git a/arch/arm/kernel/head.S b/arch/arm/kernel/head.S
> > > index 835898e..d165896 100644
> > > --- a/arch/arm/kernel/head.S
> > > +++ b/arch/arm/kernel/head.S
> > [...]
> > >   	.data
> > >   	.globl	__pv_phys_offset
> > >   	.type	__pv_phys_offset, %object
> > >   __pv_phys_offset:
> > >   	.long	0
> > >   	.size	__pv_phys_offset, . - __pv_phys_offset
> > > +
> > > +	.globl	__pv_offset
> > > +	.type	__pv_offset, %object
> > >   __pv_offset:
> > >   	.long	0
> > > -#endif
> > > +	.size	__pv_offset, . - __pv_offset
> > 
> > Please move those to C code.  They aren't of much use in this file
> > anymore.  This will allow you to use pphys_addr_t for them as well in
> > your subsequent patch. And more importantly get rid of that ugly
> > pv_offset_high that you introduced iin another patch.
> > 
> 
> Moving it to C-code caused problems because these get filled in prior to BSS
> being cleared.
> 
> We could potentially have this initialized in C with a mystery dummy value to
> prevent it from landing in BSS.  Would that be acceptable?

Just initialize them explicitly to zero.  They will end up in .ddata 
section.
> 
> > > index df5e897..39f8fce 100644
> > > --- a/arch/arm/kernel/module.c
> > > +++ b/arch/arm/kernel/module.c
> > > @@ -317,11 +317,6 @@ int module_finalize(const Elf32_Ehdr *hdr, const
> > > Elf_Shdr *sechdrs,
> > >   					         maps[i].txt_sec->sh_addr,
> > >   					         maps[i].txt_sec->sh_size);
> > >   #endif
> > > -#ifdef CONFIG_ARM_PATCH_PHYS_VIRT
> > > -	s = find_mod_section(hdr, sechdrs, ".pv_table");
> > > -	if (s)
> > > -		fixup_pv_table((void *)s->sh_addr, s->sh_size);
> > > -#endif
> > >   	s = find_mod_section(hdr, sechdrs, ".patch.table");
> > >   	if (s)
> > >   		patch_kernel((void *)s->sh_addr, s->sh_size);
> > 
> > The patch_kernel code and its invokation should still be conditional on
> > CONFIG_ARM_PATCH_PHYS_VIRT.  This ability may still be configured out
> > irrespective of the implementation used.
> > 
> 
> Maybe CONFIG_ARM_PATCH_PHYS_VIRT is not quite appropriate if this is used to
> patch up other things in addition to phys-virt stuff?

Maybe, but at the moment this is not the case.

> I could have this dependent on CONFIG_ARM_INIT_PATCH (or whatever nomenclature
> we chose for this) and have CONFIG_ARM_PATCH_PHYS_VIRT depend on it.

Let's cross that bridge in time.

FWIW, I don't like "init patch" much.  I feel like the "runtime" 
qualifier more pricisely describe this code than "init".


Nicolas
