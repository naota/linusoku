Path: news.gmane.org!not-for-mail
From: Russell King - ARM Linux <linux@arm.linux.org.uk>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.omap,gmane.linux.ports.arm.kernel
Subject: Re: [PATCH v3] printk: add option to print cpu id
Date: Sat, 4 Aug 2012 09:51:42 +0100
Lines: 20
Approved: news@gmane.org
Message-ID: <20120804085142.GP7405@n2100.arm.linux.org.uk>
References: <1344013004-32211-1-git-send-email-vikram.pandita@ti.com> <m2628z6euk.fsf@firstfloor.org> <CAFm5wm3ScpUU5wa=ei3TY0zjU4kVbOgJMmE5_QDpwy7B-TJa+A@mail.gmail.com> <20120803200822.GC731@harshnoise.musicnaut.iki.fi> <CAFm5wm2sf9LnZNj9_BDYTF9G7XH32fOL3x5n=kZ-1ih0Cek2DQ@mail.gmail.com> <20120803215954.GA4489@kroah.com> <CAFm5wm1_-JP0xjDdBvAcqqpZPQvxJPsmNtUOFQyaNw=6H_JJcg@mail.gmail.com> <20120803221327.GA5102@kroah.com> <CAFm5wm3ayofPD7oF1=z_jwE_wuqBxBHicAs=KOhjcUr7Jo0wDQ@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1344070335 14135 80.91.229.3 (4 Aug 2012 08:52:15 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 4 Aug 2012 08:52:15 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	Mike Turquette <mturquette@linaro.org>,
	Aaro Koskinen <aaro.koskinen@iki.fi>,
	Vimarsh Zutshi <vimarsh.zutshi@gmail.com>, kay@vrfy.org,
	linux-kernel@vger.kernel.org, Andi Kleen <andi@firstfloor.org>,
	linux-omap@vger.kernel.org, linux-arm-kernel@lists.infradead.org
To: "Pandita, Vikram" <vikram.pandita@ti.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Aug 04 10:52:13 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sxa5l-0004RX-JC
	for glk-linux-kernel-3@plane.gmane.org; Sat, 04 Aug 2012 10:52:13 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753892Ab2HDIwG (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sat, 4 Aug 2012 04:52:06 -0400
Original-Received: from caramon.arm.linux.org.uk ([78.32.30.218]:54367 "EHLO
	caramon.arm.linux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753258Ab2HDIwC (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sat, 4 Aug 2012 04:52:02 -0400
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=arm.linux.org.uk; s=caramon;
	h=Sender:In-Reply-To:Content-Type:MIME-Version:References:Message-ID:Subject:Cc:To:From:Date; bh=4DTxyxxGZk8AbfZGWpJH47SPtU/PLOTeHgsiO2dBSZ0=;
	b=nSnCn4TpI4x2cwrpNreBIhYasTnzZTFcauVgInYE4/AG917OX1fD/gjTAFgj8r5kd/Mduv6s3Ehm2U5wqwN5/s6voWZd/j94lsp5g7U1S5a60PjbPFXLkliiW102EKy6iOlzKVa2chhYgtIZq6iXeAuRBhWLFc68aDpsHEQp3wk=;
Original-Received: from n2100.arm.linux.org.uk ([2002:4e20:1eda:1:214:fdff:fe10:4f86]:55929)
	by caramon.arm.linux.org.uk with esmtpsa (TLSv1:AES256-SHA:256)
	(Exim 4.76)
	(envelope-from <linux@arm.linux.org.uk>)
	id 1Sxa5H-0001au-J3; Sat, 04 Aug 2012 09:51:43 +0100
Original-Received: from linux by n2100.arm.linux.org.uk with local (Exim 4.76)
	(envelope-from <linux@n2100.arm.linux.org.uk>)
	id 1Sxa5G-0007Bo-Hh; Sat, 04 Aug 2012 09:51:42 +0100
Content-Disposition: inline
In-Reply-To: <CAFm5wm3ayofPD7oF1=z_jwE_wuqBxBHicAs=KOhjcUr7Jo0wDQ@mail.gmail.com>
User-Agent: Mutt/1.5.19 (2009-01-05)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337630 gmane.linux.ports.arm.omap:81796 gmane.linux.ports.arm.kernel:180192
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337630>

On Fri, Aug 03, 2012 at 03:25:17PM -0700, Pandita, Vikram wrote:
> Other issue i found, using this patch, that on multi-core ARM systems,
> almost 99% of times, IRQ's are handled by CPU0,
> even if CPU0 was really busy and other CPU's were free. I am yet to
> understand a good reason why.

That is because you're probably not running irqbalanced on your platforms.

Firstly, the hardware does no IRQ balancing itself - you have to manually
route IRQs to CPUs in the hardware, and if you ask for an IRQ to be
delivered to several CPUs, all CPUs will get it each time it fires (unlike
x86 IOAPIC which picks a CPU to route the IRQ to.)

The ARM kernel does no IRQ balancing itself across CPUs, because when I
tried to implement it, every algorithm I tried gave completely sub-optimal
results, and irqbalanced existed to do the job in userspace.  So as there
is a userspace solution which works, there was no point to doing this in
the kernel.

Please use the irqbalance daemon to spread IRQs across your CPUs.
