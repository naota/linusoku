Path: news.gmane.org!not-for-mail
From: Joe Perches <joe@perches.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel,gmane.linux.network
Subject: Re: [RFC v3 1/7] hashtable: introduce a small and naive hashtable
Date: Mon, 06 Aug 2012 18:19:06 -0700
Lines: 62
Approved: news@gmane.org
Message-ID: <1344302346.2026.23.camel@joe2Laptop>
References: <1344300317-23189-1-git-send-email-levinsasha928@gmail.com>
	 <1344300317-23189-2-git-send-email-levinsasha928@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344302361 27780 80.91.229.3 (7 Aug 2012 01:19:21 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 01:19:21 +0000 (UTC)
Cc: torvalds@linux-foundation.org, tj@kernel.org, akpm@linux-foundation.org,
  linux-kernel@vger.kernel.org, linux-mm@kvack.org,
 paul.gortmaker@windriver.com,  davem@davemloft.net, rostedt@goodmis.org,
 mingo@elte.hu, ebiederm@xmission.com,  aarcange@redhat.com,
 ericvh@gmail.com, netdev@vger.kernel.org,  josh@joshtriplett.org,
 eric.dumazet@gmail.com, mathieu.desnoyers@efficios.com
To: Sasha Levin <levinsasha928@gmail.com>
Original-X-From: owner-linux-mm@kvack.org Tue Aug 07 03:19:16 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SyYRz-0007vR-5S
	for glkm-linux-mm-2@m.gmane.org; Tue, 07 Aug 2012 03:19:11 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id C32E66B0044; Mon,  6 Aug 2012 21:19:08 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id B08E56B004D; Mon,  6 Aug 2012 21:19:08 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 7D1926B005A; Mon,  6 Aug 2012 21:19:08 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx148.postini.com [74.125.245.148])
	by kanga.kvack.org (Postfix) with SMTP id ED8DF6B0044
	for <linux-mm@kvack.org>; Mon,  6 Aug 2012 21:19:07 -0400 (EDT)
Original-Received: from labridge.com ([206.117.179.246]) (using SSLv3) by na3sys010amx148.postini.com ([74.125.244.10]) with SMTP;
	Mon, 06 Aug 2012 18:19:08 PDT
Original-Received: from [173.51.221.202] (account joe@perches.com HELO [192.168.1.162])
  by labridge.com (CommuniGate Pro SMTP 5.0.14)
  with ESMTPA id 19459042; Mon, 06 Aug 2012 18:19:06 -0700
In-Reply-To: <1344300317-23189-2-git-send-email-levinsasha928@gmail.com>
X-Mailer: Evolution 3.2.2- 
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:88.60247/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-pstn-settings: 3 (1.0000:1.0000) s cv gt3 gt2 gt1 r p m c 
X-pstn-addresses: from <joe@perches.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83743 gmane.linux.kernel:1338664 gmane.linux.network:239313
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338664>

On Tue, 2012-08-07 at 02:45 +0200, Sasha Levin wrote:
> This hashtable implementation is using hlist buckets to provide a simple
> hashtable to prevent it from getting reimplemented all over the kernel.

> diff --git a/include/linux/hashtable.h b/include/linux/hashtable.h

Just trivial style notes and a typo

> +/* Use hash_32 when possible to allow for fast 32bit hashing in 64bit kernels. */
> +#define hash_min(val, bits) ((sizeof(val)==4)?hash_32((val), (bits)):hash_long((val), (bits)))

This is a pretty long line.  It doesn't use normal kernel spacing
style and it has unnecessary parentheses.

Maybe:

#define hash_min(val, bits)						\
	(sizeof(val) == 4 ? hash_32(val, bits) : hash_long(val, bits))

> +
> +/**
> + * hash_init - initialize a hash table
> + * @hashtable: hashtable to be initialized
> + * @bits: bit count of hashing function
> + *
> + * Initializes a hash table with 2**bits buckets.
> + */
> +static inline void hash_init(struct hlist_head *hashtable, int bits)
> +{
> +	int i;
> +
> +	for (i = 0; i < HASH_SIZE(bits); i++)
> +		INIT_HLIST_HEAD(hashtable + i);
> +}

Maybe use a struct hlist_head *last_hash_entry as a loop variable

{
	struct hlist_head *eo_hash = hashtable + HASH_SIZE(bits);

	while (hashtable < eo_hash)
		INIT_HLIST_HEAD(hashtable++);
}

The compiler might generate the same code anyway...

[]

> +/**
> + * hash_for_each_possible - iterate over all possible objects for a giver key
> + * @name: hashtable to iterate
> + * @obj: the type * to use as a loop cursor for each bucke

bucket


--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

