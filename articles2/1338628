Path: news.gmane.org!not-for-mail
From: Mikulas Patocka <mpatocka-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org>
Newsgroups: gmane.linux.kernel.bcache.devel,gmane.linux.kernel.device-mapper.devel,gmane.linux.kernel,gmane.linux.kernel.drbd.devel
Subject: Re: [dm-devel] [PATCH v5 12/12] block: Only clone bio vecs that are
 in use
Date: Mon, 6 Aug 2012 19:16:33 -0400 (EDT)
Lines: 113
Approved: news@gmane.org
Message-ID: <Pine.LNX.4.64.1208061913500.21956@file.rdu.redhat.com>
References: <1344290921-25154-1-git-send-email-koverstreet@google.com>
 <1344290921-25154-13-git-send-email-koverstreet@google.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: dough.gmane.org 1344295016 11147 80.91.229.3 (6 Aug 2012 23:16:56 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 6 Aug 2012 23:16:56 +0000 (UTC)
Cc: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org, linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org,
	axboe-tSWWG44O7X1aa/9Udqfwiw@public.gmane.org, Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>,
	vgoyal-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, yehuda-L5o5AL9CYN0tUFlbccrkMA@public.gmane.org, tj-DgEjT+Ai2ygdnm+yROfE0A@public.gmane.org,
	sage-BnTBU8nroG7k1uMJSBkQmQ@public.gmane.org, agk-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, drbd-dev-cunTk1MwBs8qoQakbn7OcQ@public.gmane.org
To: device-mapper development <dm-devel-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org>
Original-X-From: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org Tue Aug 07 01:16:54 2012
Return-path: <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>
Envelope-to: glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>)
	id 1SyWXc-0001t2-S5
	for glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org; Tue, 07 Aug 2012 01:16:53 +0200
Original-Received: (majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org) by vger.kernel.org via listexpand
	id S1752990Ab2HFXQw (ORCPT <rfc822;glbd-linux-bcache@m.gmane.org>);
	Mon, 6 Aug 2012 19:16:52 -0400
Original-Received: from mx1.redhat.com ([209.132.183.28]:3834 "EHLO mx1.redhat.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751697Ab2HFXQv (ORCPT <rfc822;linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>);
	Mon, 6 Aug 2012 19:16:51 -0400
Original-Received: from int-mx02.intmail.prod.int.phx2.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com [10.5.11.12])
	by mx1.redhat.com (8.14.4/8.14.4) with ESMTP id q76NGfiU020496
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Mon, 6 Aug 2012 19:16:41 -0400
Original-Received: from file.rdu.redhat.com (file.rdu.redhat.com [10.11.255.147])
	by int-mx02.intmail.prod.int.phx2.redhat.com (8.13.8/8.13.8) with ESMTP id q76NGY1R027029
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Mon, 6 Aug 2012 19:16:35 -0400
Original-Received: from file.rdu.redhat.com (localhost [127.0.0.1])
	by file.rdu.redhat.com (8.14.4/8.14.4) with ESMTP id q76NGYk4028342;
	Mon, 6 Aug 2012 19:16:34 -0400
Original-Received: from localhost (mpatocka@localhost)
	by file.rdu.redhat.com (8.14.4/8.14.4/Submit) with ESMTP id q76NGX3k028319;
	Mon, 6 Aug 2012 19:16:33 -0400
X-Authentication-Warning: file.rdu.redhat.com: mpatocka owned process doing -bs
X-X-Sender: mpatocka-e+HWlsje6Db1wF9wiOj0lkEOCMrvLtNR@public.gmane.org
In-Reply-To: <1344290921-25154-13-git-send-email-koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
X-Scanned-By: MIMEDefang 2.67 on 10.5.11.12
Original-Sender: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Precedence: bulk
List-ID: <linux-bcache.vger.kernel.org>
X-Mailing-List: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Xref: news.gmane.org gmane.linux.kernel.bcache.devel:673 gmane.linux.kernel.device-mapper.devel:16481 gmane.linux.kernel:1338628 gmane.linux.kernel.drbd.devel:2066
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338628>

Hi Kent

When you change the semantics of an exported function, rename that 
function. There may be external modules that use __bio_clone and this 
change could silently introduce bugs in them.

Otherwise, the patchset looks fine.

Mikulas


On Mon, 6 Aug 2012, Kent Overstreet wrote:

> bcache creates large bios internally, and then splits them according to
> the device requirements before it sends them down. If a lower level
> device tries to clone the bio, and the original bio had more than
> BIO_MAX_PAGES, the clone will fail unecessarily.
> 
> We can fix this by only cloning the bio vecs that are actually in use.
> 
> Signed-off-by: Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
> ---
>  drivers/block/rbd.c |    2 +-
>  drivers/md/dm.c     |    5 ++---
>  fs/bio.c            |   13 +++++++------
>  3 files changed, 10 insertions(+), 10 deletions(-)
> 
> diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
> index 692cf05..21edfe5 100644
> --- a/drivers/block/rbd.c
> +++ b/drivers/block/rbd.c
> @@ -714,7 +714,7 @@ static struct bio *bio_chain_clone(struct bio **old, struct bio **next,
>  	}
>  
>  	while (old_chain && (total < len)) {
> -		tmp = bio_kmalloc(gfpmask, old_chain->bi_max_vecs);
> +		tmp = bio_kmalloc(gfpmask, bio_segments(old_chain));
>  		if (!tmp)
>  			goto err_out;
>  
> diff --git a/drivers/md/dm.c b/drivers/md/dm.c
> index 3f3c26e..193fb19 100644
> --- a/drivers/md/dm.c
> +++ b/drivers/md/dm.c
> @@ -1057,11 +1057,10 @@ static struct bio *clone_bio(struct bio *bio, sector_t sector,
>  {
>  	struct bio *clone;
>  
> -	clone = bio_alloc_bioset(GFP_NOIO, bio->bi_max_vecs, bs);
> +	clone = bio_alloc_bioset(GFP_NOIO, bv_count, bs);
>  	__bio_clone(clone, bio);
>  	clone->bi_sector = sector;
> -	clone->bi_idx = idx;
> -	clone->bi_vcnt = idx + bv_count;
> +	clone->bi_vcnt = bv_count;
>  	clone->bi_size = to_bytes(len);
>  	clone->bi_flags &= ~(1 << BIO_SEG_VALID);
>  
> diff --git a/fs/bio.c b/fs/bio.c
> index 38ad026..631c67e 100644
> --- a/fs/bio.c
> +++ b/fs/bio.c
> @@ -449,8 +449,9 @@ EXPORT_SYMBOL(bio_phys_segments);
>   */
>  void __bio_clone(struct bio *bio, struct bio *bio_src)
>  {
> -	memcpy(bio->bi_io_vec, bio_src->bi_io_vec,
> -		bio_src->bi_max_vecs * sizeof(struct bio_vec));
> +	memcpy(bio->bi_io_vec,
> +	       bio_iovec(bio_src),
> +	       bio_segments(bio_src) * sizeof(struct bio_vec));
>  
>  	/*
>  	 * most users will be overriding ->bi_bdev with a new target,
> @@ -459,10 +460,10 @@ void __bio_clone(struct bio *bio, struct bio *bio_src)
>  	bio->bi_sector = bio_src->bi_sector;
>  	bio->bi_bdev = bio_src->bi_bdev;
>  	bio->bi_flags |= 1 << BIO_CLONED;
> +	bio->bi_flags &= ~(1 << BIO_SEG_VALID);
>  	bio->bi_rw = bio_src->bi_rw;
> -	bio->bi_vcnt = bio_src->bi_vcnt;
> +	bio->bi_vcnt = bio_segments(bio_src);
>  	bio->bi_size = bio_src->bi_size;
> -	bio->bi_idx = bio_src->bi_idx;
>  }
>  EXPORT_SYMBOL(__bio_clone);
>  
> @@ -477,7 +478,7 @@ EXPORT_SYMBOL(__bio_clone);
>  struct bio *bio_clone_bioset(struct bio *bio, gfp_t gfp_mask,
>  			     struct bio_set *bs)
>  {
> -	struct bio *b = bio_alloc_bioset(gfp_mask, bio->bi_max_vecs, bs);
> +	struct bio *b = bio_alloc_bioset(gfp_mask, bio_segments(bio), bs);
>  
>  	if (!b)
>  		return NULL;
> @@ -507,7 +508,7 @@ EXPORT_SYMBOL(bio_clone);
>  
>  struct bio *bio_clone_kmalloc(struct bio *bio, gfp_t gfp_mask)
>  {
> -	struct bio *b = bio_kmalloc(gfp_mask, bio->bi_max_vecs);
> +	struct bio *b = bio_kmalloc(gfp_mask, bio_segments(bio));
>  
>  	if (!b)
>  		return NULL;
> -- 
> 1.7.7.3
> 
> --
> dm-devel mailing list
> dm-devel-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org
> https://www.redhat.com/mailman/listinfo/dm-devel
> 
