Path: news.gmane.org!not-for-mail
From: Herton Ronaldo Krzesinski <herton.krzesinski@canonical.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 2/2] floppy: error handling fixes on do_floppy_init
Date: Thu, 9 Aug 2012 14:32:51 -0300
Lines: 70
Approved: news@gmane.org
Message-ID: <20120809173250.GC3104@herton-Z68MA-D2H-B3>
References: <1344450293-5557-1-git-send-email-herton.krzesinski@canonical.com>
 <1344450293-5557-3-git-send-email-herton.krzesinski@canonical.com>
 <20120808195730.GG15623@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1344533591 13994 80.91.229.3 (9 Aug 2012 17:33:11 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 9 Aug 2012 17:33:11 +0000 (UTC)
Cc: Jiri Kosina <jkosina@suse.cz>,
	Andrew Morton <akpm@linux-foundation.org>,
	Jens Axboe <axboe@kernel.dk>, Tejun Heo <tj@kernel.org>,
	linux-kernel@vger.kernel.org, Ben Hutchings <ben@decadent.org.uk>
To: Vivek Goyal <vgoyal@redhat.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 09 19:33:10 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzWbd-0008Vz-Ey
	for glk-linux-kernel-3@plane.gmane.org; Thu, 09 Aug 2012 19:33:09 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757317Ab2HIRdD (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 9 Aug 2012 13:33:03 -0400
Original-Received: from youngberry.canonical.com ([91.189.89.112]:39897 "EHLO
	youngberry.canonical.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752657Ab2HIRdA (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 9 Aug 2012 13:33:00 -0400
Original-Received: from [186.212.214.34] (helo=canonical.com)
	by youngberry.canonical.com with esmtpsa (TLS1.0:DHE_RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71)
	(envelope-from <herton.krzesinski@canonical.com>)
	id 1SzWbO-0001Q5-FK; Thu, 09 Aug 2012 17:32:55 +0000
Content-Disposition: inline
In-Reply-To: <20120808195730.GG15623@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340892
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340892>

On Wed, Aug 08, 2012 at 03:57:30PM -0400, Vivek Goyal wrote:
> On Wed, Aug 08, 2012 at 03:24:53PM -0300, Herton Ronaldo Krzesinski wrote:
> > While looking at commit 3f9a5aa ("floppy: Cleanup disk->queue before
> > caling put_disk() if add_disk() was never called") I noticed some
> > problems with the error handling and cleanup:
> > 
> > * missing cleanup (put_disk) if blk_init_queue fails, dr is decremented
> >   first in the error handling loop
> > * if something fails in the add_disk loop, there is no cleanup of
> >   previous iterations in the error handling.
> > * "if (disks[dr]->queue)" check is bogus, when reaching there for each
> >   dr should exist an queue allocated, and it doesn't take into account
> >   iterations where add_disk wasn't done, if failure happens in add_disk
> >   loop.
> > * floppy_module_exit doesn't reset queue pointer if add_disk wasn't
> >   done.
> 
> Hey, these seem to be multiple cleanups. Can you break these down into
> individual patches. Review becomes easy.

I'll resend with the fixes broken up.

> 
> [..]
> > +		blk_cleanup_queue(disks[dr]->queue);
> > +		/*
> > +		 * put_disk() may not be paired with add_disk() and
> > +		 * will put queue reference one extra time. fix it.
> > +		 */
> > +		if (dr > registered || !(allowed_drive_mask & (1 << dr)) ||
> > +		    fdc_state[FDC(dr)].version == FDC_NONE)
> >  			disks[dr]->queue = NULL;
> 
> I think checking for FDC_NONE and allowed_drive_mask() in multiple places
> is becoming unreadable now. Can we just maintain a separate array to keep
> track of disks on which we have called add_disk() and do the cleanup 
> accordingly.
> 
> static unsigned short disk_registered[N_DRIVE];
> 
> /* do add_disk */
> disk_registered[drive] = 1;
> 
> 
> out_put_disk:
> 	while(dr--) {
> 		if (disks[dr]->queue && !disk_registered[dr]) {
> 			blk_cleanup_queue()
> 			disks[dr]->queue = NULL;
> 		}
> 	}
> 
> Same disk_registered[] can be used for your other loop of remove drives.
> Also it can be used in cleaning up code in floppy_module_exit().
> 
> I think this will make code much more readable. Right now this error 
> handling loop is just getting too complicated.

Complicated as many other code in the kernel :), but yes, we can do
better here, your proposed solution looks good, I'll redo the changes
with it, thanks for the review.

> 
> Thanks
> Vivek
> 

-- 
[]'s
Herton
