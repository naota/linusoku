Path: news.gmane.org!not-for-mail
From: Paul Moore <paul@paul-moore.com>
Newsgroups: gmane.linux.kernel,gmane.comp.security.selinux
Subject: Re: NULL pointer dereference in selinux_ip_postroute_compat
Date: Wed, 08 Aug 2012 17:03:17 -0400
Lines: 67
Approved: news@gmane.org
Message-ID: <1463614.KLCBsoWyCC@sifl>
References: <50215A7E.8000701@linaro.org> <2294220.dmCbVvF3Tg@sifl> <CACLa4pu4SFHp9nxp4RJ1L4a-cz+qPaYrGCULLGXDOGCYAMdqzQ@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7Bit
X-Trace: dough.gmane.org 1344459825 7167 80.91.229.3 (8 Aug 2012 21:03:45 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 21:03:45 +0000 (UTC)
Cc: Eric Dumazet <eric.dumazet@gmail.com>,
	John Stultz <johnstul@us.ibm.com>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	lkml <linux-kernel@vger.kernel.org>,
	James Morris <james.l.morris@oracle.com>,
	selinux@tycho.nsa.gov, Eric Dumazet <edumazet@google.com>,
	john.johansen@canonical.com
To: Eric Paris <eparis@parisplace.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 23:03:43 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzDPn-00073Z-Sw
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 23:03:40 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759317Ab2HHVDY (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 17:03:24 -0400
Original-Received: from mail-yx0-f174.google.com ([209.85.213.174]:48322 "EHLO
	mail-yx0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1759277Ab2HHVDV (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 17:03:21 -0400
Original-Received: by yenl2 with SMTP id l2so1298141yen.19
        for <linux-kernel@vger.kernel.org>; Wed, 08 Aug 2012 14:03:21 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:user-agent:in-reply-to
         :references:mime-version:content-transfer-encoding:content-type
         :x-gm-message-state;
        bh=BzjxZPHeSTp6GNJRRJZIY/iXKLFkHHsZXx71pkT9QU8=;
        b=OcLBxzJd3iOC01AXBmvxfxhNMKZtCSML3CP4SNVcLkZtQ/GL+bI1NCLu2LMrfnvYgs
         8RcDjPhJRsYSo0MG4zRK1997qmBmhLqFkQaZfiIYmwSbGdaY01Mc2TQcwFP7YXAcFv/a
         HU6OLhYC1mTSoZQtNcd0EGkDoswAd0lEJHhI55ZKvJLgy2E3PcMBeWZfwJ+O0zjClTc7
         Bt2YAz8ARH6NUik+rxfLES0Fj3HvAb+bQatzauWsqRaGVdxUNBeU7rLkmFJWwsqXO/AU
         4OaCWc4fIyGeHS8KsFI7hL3GjW28u3pAJN19q9mkwfM9TpSYiVta0QPqwSga7vF8RoDv
         Eoaw==
Original-Received: by 10.50.207.65 with SMTP id lu1mr237048igc.33.1344459800796;
        Wed, 08 Aug 2012 14:03:20 -0700 (PDT)
Original-Received: from sifl.localnet (c-76-119-162-148.hsd1.nh.comcast.net. [76.119.162.148])
        by mx.google.com with ESMTPS id aj1sm3462943igc.1.2012.08.08.14.03.19
        (version=TLSv1/SSLv3 cipher=OTHER);
        Wed, 08 Aug 2012 14:03:20 -0700 (PDT)
User-Agent: KMail/4.9 (Linux/3.4.7-gentoo; KDE/4.9.0; x86_64; ; )
In-Reply-To: <CACLa4pu4SFHp9nxp4RJ1L4a-cz+qPaYrGCULLGXDOGCYAMdqzQ@mail.gmail.com>
X-Gm-Message-State: ALoCoQmd2TjOmlI45Aau6UB+tE1X7A1vNDrUrnY+fcNswFfSMSTY7xnPUkcCxp+SFUYoOgbAzW5k
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340307 gmane.comp.security.selinux:17718
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340307>

On Wednesday, August 08, 2012 04:51:56 PM Eric Paris wrote:
> On Wed, Aug 8, 2012 at 4:35 PM, Paul Moore <paul@paul-moore.com> wrote:
> > On Wednesday, August 08, 2012 10:09:38 PM Eric Dumazet wrote:
> > 
> > Actually, the issue is that the shared socket doesn't have an init/alloc
> > function to do the LSM allocation like we do with other sockets so Eric's
> > patch does it as part of ip_send_unicast_reply().
> > 
> > If we look at the relevant part of Eric's patch:
> >  +#ifdef CONFIG_SECURITY
> >  +       if (!sk->sk_security && security_sk_alloc(sk, PF_INET,
> >  GFP_ATOMIC))
> >  +                       goto out;
> >  +#endif
> > 
> > ... if we were to remove the CONFIG_SECURITY conditional we would end up
> > calling security_sk_alloc() each time through in the CONFIG_SECURITY=n
> > case as sk->sk_security would never be initialized to a non-NULL value. 
> > In the CONFIG_SECURITY=y case it should only be called once as
> > security_sk_alloc() should set sk->sk_security to a LSM blob.
> 
> Ifndef SECURITY this turns into (because security_sk_alloc is a static
> inline in that case)
> 
> if (!sk->sk_security && 0)
>         goto out;
> 
> Which I'd hope the compiler would optimize.  So that only leaves us
> caring about the case there CONFIG_SECURITY is true.  In that case if
> we need code which does if !alloc'd then alloc it seems we broke the
> model of everything else in the code and added a branch needlessly.
> 
> Could we add a __init function which does the security_sk_alloc() in
> the same file where we declared them?

Is it safe to call security_sk_alloc() from inside another __init function?  I 
think in both the case of SELinux and Smack it shouldn't be a problem, but I'm 
concerned about the more general case of calling a LSM hook potentially before 
the LSM has been initialized.

If that isn't an issue we could probably do something in ip_init().

> > The issue I'm struggling with at present is how should we handle this
> > traffic from a LSM perspective.  The label based LSMs, e.g. SELinux and
> > Smack, use the LSM blob assigned to locally generated outbound traffic to
> > identify the traffic and apply the security policy, so not only do we
> > have to resolve the issue of ensuring the traffic is labeled correctly,
> > we have to do it with a shared socket (although the patch didn't change
> > the shared nature of the socket).
> > 
> > For those who are interested, I think the reasonable labeling solution
> > here is to go with SECINITSID_KERNEL/kernel_t for SELinux and likely the
> > ambient label for Smack as in both the TCP reset and timewait ACK there
> > shouldn't be any actual user data present.
> 
> I'm willing to accept that argument from an SELinux perspective.  I'd
> also accept the argument that it is private and do something similar
> to what we do with IS_PRIVATE on inodes.  Although sockets probably
> don't have a good field to use...

I'm not aware of one.  See my comments on Eric's last patch posting (the other 
Eric, not you).

-- 
paul moore
www.paul-moore.com

