Path: news.gmane.org!not-for-mail
From: Namhyung Kim <namhyung@kernel.org>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH 11/16] perf symbol: introduce symsrc structure.
Date: Sat, 11 Aug 2012 22:28:09 +0900
Lines: 115
Approved: news@gmane.org
Message-ID: <1344691689.2003.11.camel@leonhard>
References: <1344637382-22789-1-git-send-email-cody@linux.vnet.ibm.com>
	 <1344637382-22789-12-git-send-email-cody@linux.vnet.ibm.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1344691756 1644 80.91.229.3 (11 Aug 2012 13:29:16 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 11 Aug 2012 13:29:16 +0000 (UTC)
Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>,
	LKML <linux-kernel@vger.kernel.org>,
	Ingo Molnar <mingo@redhat.com>,
	Paul Mackerras <paulus@samba.org>,
	Peter Zijlstra <a.p.zijlstra@chello.nl>,
	Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>,
	Matt Hellsley <matthltc@us.ibm.com>,
	David Hansen <dave@linux.vnet.ibm.com>
To: Cody P Schafer <cody@linux.vnet.ibm.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Aug 11 15:29:12 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1T0Bkc-0001lb-EK
	for glk-linux-kernel-3@plane.gmane.org; Sat, 11 Aug 2012 15:29:10 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754845Ab2HKN2V convert rfc822-to-quoted-printable (ORCPT
	<rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sat, 11 Aug 2012 09:28:21 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:64932 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754651Ab2HKN2Q (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sat, 11 Aug 2012 09:28:16 -0400
Original-Received: by pbbrr13 with SMTP id rr13so4398916pbb.19
        for <linux-kernel@vger.kernel.org>; Sat, 11 Aug 2012 06:28:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:subject:from:to:cc:in-reply-to:references:content-type:date
         :message-id:mime-version:x-mailer:content-transfer-encoding;
        bh=ve97d60jDw4YUW8OMTYaOu3p7tzvnHJ9n4Pv3pSO5Gs=;
        b=v9yWmsjwEsLqzlTA0nPOCedfSZaWRCoBeZd8EW2oKqJwk6QDtVSkLFiUDjsOFaiJME
         N7f3dGWMuXUaVhi0eCEMSzZiA2uFt6QmcktwVTWgV0CAqs4DC53Lz5ZqQsbFNMfgEb5u
         N6MFm8/apozYGBunck1/707gCG2Ubf0isxGTPfMYddLJrILH2HYOUIqENJublbEZA01B
         IesQfUujLtpG3xKCd+fBI8VJIkWkiC3CphLTSbJCrJhNHpl6FjNE8VF2IeF+4NPJrxBH
         IrbVO4LdvVWqGAoSGMZp79C8SQlZyn8rHr3+n4i4VFLu9wBGur8eTnb88f17zwxPJ50r
         2XBQ==
Original-Received: by 10.68.193.137 with SMTP id ho9mr5882310pbc.93.1344691695839;
        Sat, 11 Aug 2012 06:28:15 -0700 (PDT)
Original-Received: from [192.168.219.170] ([180.230.0.35])
        by mx.google.com with ESMTPS id ru4sm1392874pbc.66.2012.08.11.06.28.12
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sat, 11 Aug 2012 06:28:15 -0700 (PDT)
In-Reply-To: <1344637382-22789-12-git-send-email-cody@linux.vnet.ibm.com>
X-Mailer: Evolution 2.28.3
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1341599
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1341599>

2012-08-10 (=EA=B8=88), 15:22 -0700, Cody P Schafer:
> Factors opening of certain sections & tracking certain elf info into =
an
> external structure.
>=20
> The goal here is to keep multiple elfs (and their looked up
> sections/indexes) around during the symbol generation process (in
> dso__load()).
>=20
> We need this to properly resolve symbols on PPC due to the
> use of function descriptors & the .opd section (ie: symbols which are
> functions don't point to their actual location, they point to their
> function descriptor in .opd which contains their actual location.
>=20
> It would be possible to just keep the (Elf *) around, but then we'd e=
nd
> up with duplicate code for looking up the same sections and checking =
for
> the existence of an important section wouldn't be as clean (and we ne=
ed
> to keep the Elf stuff confined to symtab-elf.c).
>=20
> Utilized by the later patch
> "perf symbol: use both runtime and debug images"
>=20
> Signed-off-by: Cody P Schafer <cody@linux.vnet.ibm.com>
> ---
>  tools/perf/util/symbol-elf.c     | 119 +++++++++++++++++++++++++++++=
----------
>  tools/perf/util/symbol-minimal.c |  30 +++++++++-
>  tools/perf/util/symbol.c         |  22 ++++----
>  tools/perf/util/symbol.h         |  36 +++++++++++-
>  4 files changed, 163 insertions(+), 44 deletions(-)
>=20
[SNIP]
> diff --git a/tools/perf/util/symbol.h b/tools/perf/util/symbol.h
> index 37f1ea1..5e55f98 100644
> --- a/tools/perf/util/symbol.h
> +++ b/tools/perf/util/symbol.h
> @@ -11,6 +11,12 @@
>  #include <stdio.h>
>  #include <byteswap.h>
> =20
> +#ifndef NO_LIBELF

Should be NO_LIBELF_SUPPORT.


> +#include <libelf.h>
> +#include <gelf.h>
> +#include <elf.h>
> +#endif
> +
>  #ifdef HAVE_CPLUS_DEMANGLE
>  extern char *cplus_demangle(const char *, int);
> =20
> @@ -219,6 +225,34 @@ struct dso {
>  	char		 name[0];
>  };
> =20
> +struct symsrc {
> +	char *name;
> +	int fd;
> +	enum dso_binary_type type;
> +
> +#ifndef NO_LIBELF

Ditto.

Thanks,
Namhyung


> +	Elf *elf;
> +	GElf_Ehdr ehdr;
> +
> +	Elf_Scn *opdsec;
> +	size_t opdidx;
> +	GElf_Shdr opdshdr;
> +
> +	Elf_Scn *symtab;
> +	GElf_Shdr symshdr;
> +
> +	Elf_Scn *dynsym;
> +	size_t dynsym_idx;
> +	GElf_Shdr dynshdr;
> +
> +	bool adjust_symbols;
> +#endif
> +};
> +
> +void symsrc__destroy(struct symsrc *ss);
> +int symsrc__init(struct symsrc *ss, struct dso *dso, const char *nam=
e,
> +		 enum dso_binary_type type);
> +
>  #define DSO__SWAP(dso, type, val)			\
>  ({							\
>  	type ____r =3D val;				\
> @@ -334,7 +368,7 @@ ssize_t dso__data_read_addr(struct dso *dso, stru=
ct map *map,
>  			    struct machine *machine, u64 addr,
>  			    u8 *data, ssize_t size);
>  int dso__test_data(void);
> -int dso__load_sym(struct dso *dso, struct map *map, const char *name=
, int fd,
> +int dso__load_sym(struct dso *dso, struct map *map, struct symsrc *s=
s,
>  		  symbol_filter_t filter, int kmodule, int want_symtab);
>  int dso__synthesize_plt_symbols(struct dso *dso, char *name, struct =
map *map,
>  				symbol_filter_t filter);



