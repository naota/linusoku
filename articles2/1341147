Path: news.gmane.org!not-for-mail
From: "devendra.aaru" <devendra.aaru@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: (unknown)
Date: Fri, 10 Aug 2012 11:02:43 +0530
Lines: 30
Approved: news@gmane.org
Message-ID: <CAHdPZaM=Pytu3a1cm+FK=bGARZ8iZz3vaVZmtiBU6SFc5VfL3Q@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344576770 26769 80.91.229.3 (10 Aug 2012 05:32:50 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 10 Aug 2012 05:32:50 +0000 (UTC)
Cc: Linus Walleij <linus.walleij@linaro.org>
To: linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Aug 10 07:32:50 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Szhq5-0001Ia-W3
	for glk-linux-kernel-3@plane.gmane.org; Fri, 10 Aug 2012 07:32:50 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753784Ab2HJFco (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 10 Aug 2012 01:32:44 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:44119 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752760Ab2HJFcn (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 10 Aug 2012 01:32:43 -0400
Original-Received: by pbbrr13 with SMTP id rr13so2132959pbb.19
        for <linux-kernel@vger.kernel.org>; Thu, 09 Aug 2012 22:32:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:cc:content-type;
        bh=R15+BKa+EmxUI2C1+S+lwRhaAPpws+S11RvUIyPQUa4=;
        b=A6bpb3TxteyYxzdCcIwFxkl/kJWw3grKBlk33YWM5Y9/bq36QrO5JOCdkPr4LCSIpf
         zeB+OWlamXkIqL48CWHOwMq4tp65r/dKmTt9TDOlqKNaONwc9QL7838s5xOXKzPnAKnV
         kL5gkc1CAu47v9VBHu1IDH+g0HnkN2VKIW7rlSIq+vy4KlQB0bv2u7gkBEXL3fSl3WeC
         xaBzsSM41yicPnusBj/kFVndZgMPhm91KsqtEF2CEFX8Hm24nRoRMEr+wQHs1p7WeUHM
         k46QXDHwy/ihau3I1NbCIIl+waIZFCGZQOpqGcTL+PVKYUUgvfISocaOZN1cqclJo+zt
         7YFQ==
Original-Received: by 10.68.136.138 with SMTP id qa10mr3274369pbb.103.1344576763047;
 Thu, 09 Aug 2012 22:32:43 -0700 (PDT)
Original-Received: by 10.68.1.167 with HTTP; Thu, 9 Aug 2012 22:32:43 -0700 (PDT)
Original-Subject: 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1341147
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1341147>

Hi,

In function tegra_pinctrl_dt_node_to_map the num_maps the num_maps
counter must be incremented for each child node?


Actually we are doing free until num_maps if tegra_pinctrl_dt_subnode_to_map,

not only that if num_maps == 0, we wont free up the maps, and also i
think the for_each_of_node checks whether we have a next child node,
so its safe to do num_maps++ as it wont get incremented endlessly,

Please correct me if i am wrong.

Thanks,


diff --git a/drivers/pinctrl/pinctrl-tegra.c b/drivers/pinctrl/pinctrl-tegra.c
index ae52e4e..33ae918 100644
--- a/drivers/pinctrl/pinctrl-tegra.c
+++ b/drivers/pinctrl/pinctrl-tegra.c
@@ -303,6 +303,7 @@ int tegra_pinctrl_dt_node_to_map(struct
pinctrl_dev *pctldev,
        *num_maps = 0;

        for_each_child_of_node(np_config, np) {
+               num_maps++;
                ret = tegra_pinctrl_dt_subnode_to_map(pctldev->dev, np, map,
                                                      &reserved_maps, num_maps);
                if (ret < 0) {
