Path: news.gmane.org!not-for-mail
From: Silas Boyd-Wickizer <sbw@mit.edu>
Newsgroups: gmane.linux.kernel
Subject: [PATCH 4/4 V2] Use get_online_cpus to avoid races involving CPU
 hotplug
Date: Fri, 3 Aug 2012 12:36:39 -0700
Lines: 68
Approved: news@gmane.org
Message-ID: <20120803193638.GE4227@mit.edu>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1344022865 12149 80.91.229.3 (3 Aug 2012 19:41:05 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 3 Aug 2012 19:41:05 +0000 (UTC)
Cc: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
	Jean Delvare <khali@linux-fr.org>,
	Guenter Roeck <linux@roeck-us.net>,
	Thomas Gleixner <tglx@linutronix.de>,
	Harald Welte <laforge@openezx.org>, x86@kernel.org
To: linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Aug 03 21:41:00 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SxNjz-0006zS-7M
	for glk-linux-kernel-3@plane.gmane.org; Fri, 03 Aug 2012 21:40:55 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753750Ab2HCTkr (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 3 Aug 2012 15:40:47 -0400
Original-Received: from mail-vc0-f174.google.com ([209.85.220.174]:36891 "EHLO
	mail-vc0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753238Ab2HCTko (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 3 Aug 2012 15:40:44 -0400
Original-Received: by vcbfk26 with SMTP id fk26so1066801vcb.19
        for <linux-kernel@vger.kernel.org>; Fri, 03 Aug 2012 12:40:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:date:from:to:cc:subject:message-id:mime-version:content-type
         :content-disposition:user-agent;
        bh=VsZHL8Vvi14X4zIrVWrA4XScec9EfMegyWYbrjYnV9Y=;
        b=Y0qlvIWINCbKpALViood22c5Y4dYxgbQXYU7xWARV1p8NseTv3wfWXAkuembZkZeaT
         3aP3KwftBATj72RNC4AVSWRJIOHX1pfZqA+6ajJbgId926HeMJSnh2CmXa1eMDluJ4w6
         AmRGHTq/wjQ1FlwCj0Rt5dIeMkZTaTVpxeQU2wUs9mij+UxL2kWfIKr4fv7XMkSAUEYm
         GQEczIdFSGyqs7gGjd0xye6rtVkuGPWyNeF4FYwd5WjV3aR3UsqsxRxUa8DqRRhAc8qN
         V0xlsZTs+4thK57Ubht12CLB1YhRKGUQliHkiEaXLPL8PiSqjcxBPOwPF8TdwoCudZwd
         qDcQ==
Original-Received: by 10.52.174.52 with SMTP id bp20mr1977896vdc.29.1344022843485;
        Fri, 03 Aug 2012 12:40:43 -0700 (PDT)
Original-Received: from mit.edu ([129.33.193.86])
        by mx.google.com with ESMTPS id k4sm9550600vdi.6.2012.08.03.12.40.41
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 03 Aug 2012 12:40:42 -0700 (PDT)
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337492
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337492>

coretemp_init in drivers/hwmon/coretemp.c loops with
for_each_online_cpu, adding platform_devices and sysfs interfaces,
then calls register_hotcpu_notifier.  There is a race if a CPU is
offlined or onlined after the loop, but before
register_hotcpu_notifier.  The race might result in the absence of a
platform_device+sysfs interface for an online CPU, or the presence of
a platform_device+sysfs interface for an offline CPU.  A similar race
occurs during coretemp_exit, after the module calls
unregister_hotcpu_notifier, but before it unregisters all devices, a
CPU might offline and a device for an offline CPU will exist for a
short while.

This fix surrounds for_each_online_cpu and register_hotcpu_notifier
with get_online_cpus+put_online_cpus; and surrounds
unregister_hotcpu_notifier and device unregistering with
get_online_cpus+put_online_cpus.

Build tested.

Signed-off-by: Silas Boyd-Wickizer <sbw@mit.edu>
---
 drivers/hwmon/coretemp.c |    5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/hwmon/coretemp.c b/drivers/hwmon/coretemp.c
index 637c51c..9483e90 100644
--- a/drivers/hwmon/coretemp.c
+++ b/drivers/hwmon/coretemp.c
@@ -815,17 +815,20 @@ static int __init coretemp_init(void)
 	if (err)
 		goto exit;
 
+	get_online_cpus();
 	for_each_online_cpu(i)
 		get_core_online(i);
 
 #ifndef CONFIG_HOTPLUG_CPU
 	if (list_empty(&pdev_list)) {
+		put_online_cpus();
 		err = -ENODEV;
 		goto exit_driver_unreg;
 	}
 #endif
 
 	register_hotcpu_notifier(&coretemp_cpu_notifier);
+	put_online_cpus();
 	return 0;
 
 #ifndef CONFIG_HOTPLUG_CPU
@@ -840,6 +843,7 @@ static void __exit coretemp_exit(void)
 {
 	struct pdev_entry *p, *n;
 
+	get_online_cpus();
 	unregister_hotcpu_notifier(&coretemp_cpu_notifier);
 	mutex_lock(&pdev_list_mutex);
 	list_for_each_entry_safe(p, n, &pdev_list, list) {
@@ -848,6 +852,7 @@ static void __exit coretemp_exit(void)
 		kfree(p);
 	}
 	mutex_unlock(&pdev_list_mutex);
+	put_online_cpus();
 	platform_driver_unregister(&coretemp_driver);
 }
 
-- 
1.7.10.4

