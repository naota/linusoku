Path: news.gmane.org!not-for-mail
From: Eric Paris <eparis@parisplace.org>
Newsgroups: gmane.linux.kernel,gmane.comp.security.selinux
Subject: Re: NULL pointer dereference in selinux_ip_postroute_compat
Date: Wed, 8 Aug 2012 17:09:20 -0400
Lines: 16
Approved: news@gmane.org
Message-ID: <CACLa4pvO4C9wUFXMp66CKw0gjXPyyVyik6gGtuAdDY-P5syYNA@mail.gmail.com>
References: <50215A7E.8000701@linaro.org>
	<2294220.dmCbVvF3Tg@sifl>
	<CACLa4pu4SFHp9nxp4RJ1L4a-cz+qPaYrGCULLGXDOGCYAMdqzQ@mail.gmail.com>
	<1463614.KLCBsoWyCC@sifl>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344460179 9931 80.91.229.3 (8 Aug 2012 21:09:39 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 21:09:39 +0000 (UTC)
Cc: Eric Dumazet <eric.dumazet@gmail.com>,
	John Stultz <johnstul@us.ibm.com>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	lkml <linux-kernel@vger.kernel.org>,
	James Morris <james.l.morris@oracle.com>,
	selinux@tycho.nsa.gov, Eric Dumazet <edumazet@google.com>,
	john.johansen@canonical.com
To: Paul Moore <paul@paul-moore.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 23:09:36 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzDVX-0007ex-HH
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 23:09:35 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1030865Ab2HHVJW (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 17:09:22 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:39117 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753001Ab2HHVJV (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 17:09:21 -0400
Original-Received: by ghrr11 with SMTP id r11so1306615ghr.19
        for <linux-kernel@vger.kernel.org>; Wed, 08 Aug 2012 14:09:20 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-gm-message-state;
        bh=NkgIWSVdyh491yjt9QtNmbkwQCXuQZwpu+AfALyY8P0=;
        b=XvL79mJ78XME1iqHGw9sqFZyKq+/4A6SLQVH35BtICsVxCq0DvONxIJzuMRhxb8xUl
         SyWpNhD9yEOAXvNRtbGSajWrfcCJmYf7TyzSL4Ched/krEWG3d7dI+Rh0dCi0D06nTLM
         QUplJWfZlHhm3r51LqAB5myv4ZzyKtI/PiZ7JXHZbFH12/KMHSRlgMHTFRJZq1yIBr+i
         DdnIUUWiK0xJ9mPzn/kvV2dVRnoSrhRvbZors8c0wkYrLc3t6xQCTbs4lnBb4pkuJ2XZ
         qomS6jtxp3nduoZBA36ZxkHdvCIDvIGCFwc8mrAs++aNgBVzgzSjPFhYuEeedEtD41It
         B0ig==
Original-Received: by 10.66.88.233 with SMTP id bj9mr2709171pab.72.1344460160482; Wed,
 08 Aug 2012 14:09:20 -0700 (PDT)
Original-Received: by 10.68.54.199 with HTTP; Wed, 8 Aug 2012 14:09:20 -0700 (PDT)
In-Reply-To: <1463614.KLCBsoWyCC@sifl>
X-Gm-Message-State: ALoCoQmDpKUUH9VMGCxBLFuvRxLocWx92xF2d3mB5cgdio8t7YKS/kcuIzQcpXxbQixF2gC6WNYy
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340308 gmane.comp.security.selinux:17719
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340308>

On Wed, Aug 8, 2012 at 5:03 PM, Paul Moore <paul@paul-moore.com> wrote:
> On Wednesday, August 08, 2012 04:51:56 PM Eric Paris wrote:

>> Could we add a __init function which does the security_sk_alloc() in
>> the same file where we declared them?
>
> Is it safe to call security_sk_alloc() from inside another __init function?  I
> think in both the case of SELinux and Smack it shouldn't be a problem, but I'm
> concerned about the more general case of calling a LSM hook potentially before
> the LSM has been initialized.
>
> If that isn't an issue we could probably do something in ip_init().

The security_initcall() functions should happen way before __init
functions.  If an LSM busts, it's the LSM initializing itself too late
not the code here being wrong...
