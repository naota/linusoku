Path: news.gmane.org!not-for-mail
From: Colin Cross <ccross@android.com>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: Re: [RFC v2] ARM: sched_clock: update epoch_cyc on resume
Date: Thu, 2 Aug 2012 18:28:47 -0700
Lines: 33
Approved: news@gmane.org
Message-ID: <CAMbhsRSboLABOD8eX4czk8FsG3QmT60RTr+znVCqwWR6ZGhgaw@mail.gmail.com>
References: <1343184588-20239-1-git-send-email-ccross@android.com>
	<CACRpkdZv4p+QT3Y+=-xh5iJ=sr1_aahroxQ535QpzVD9e_ESJA@mail.gmail.com>
	<20120727233829.GB14835@n2100.arm.linux.org.uk>
	<CAMbhsRSGYmu=eyqik23cECsJPfpo6rUqZUa853nkY35XRo4Q_w@mail.gmail.com>
	<CAMbhsRQg4pETrM7cx+aSBzGn3S1LV_x7vo8X3A300vCWTjkFng@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343957344 3938 80.91.229.3 (3 Aug 2012 01:29:04 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 3 Aug 2012 01:29:04 +0000 (UTC)
Cc: Linus Walleij <linus.walleij@linaro.org>,
	linux-arm-kernel@lists.infradead.org,
	Barry Song <21cnbao@gmail.com>,
	Vaibhav Bedia <vaibhav.bedia@ti.com>,
	Krzysztof Halasa <khc@pm.waw.pl>,
	Nicolas Pitre <nico@linaro.org>,
	Marc Zyngier <marc.zyngier@arm.com>,
	linux-kernel@vger.kernel.org
To: Russell King - ARM Linux <linux@arm.linux.org.uk>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Aug 03 03:29:03 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sx6hI-000391-JJ
	for glk-linux-kernel-3@plane.gmane.org; Fri, 03 Aug 2012 03:29:00 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752727Ab2HCB2v (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 2 Aug 2012 21:28:51 -0400
Original-Received: from mail-gg0-f174.google.com ([209.85.161.174]:34534 "EHLO
	mail-gg0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751312Ab2HCB2s (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 2 Aug 2012 21:28:48 -0400
Original-Received: by ggnl2 with SMTP id l2so217574ggn.19
        for <linux-kernel@vger.kernel.org>; Thu, 02 Aug 2012 18:28:48 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record;
        bh=OQuxgBLPudMvu8TYfsXoqdsMSc/WE3zw1ZnQQLZqtOo=;
        b=YRZWlkm/BtnrhIE0ioqihcMjpG4EZwdBr25Sg0OajtzM3UDGZs1SOgq2WiKovX7L06
         klQhKb/El+AiZb0OjQjLkRKT7KWHwDMjBEeX01ZHCsvzHQvt6dItWCPbwz2z9qEukCY0
         p01hy1wIfu3B+2nIiBKNUkY2r7pHK9PwVKtuLJS5EcjNVM5fXmbdbTaTEWNS38vQhjlm
         HXQ/YlApoA6TcJkIddEbSPR7wCKOtXOqC7ORHmFQEzQ/2Vab7b+rmeeLaTiCvkR8avOB
         FZeeSCVrZkau4wEvLJxHFLg+GKXCvvhc/YXCnsFu/YwomR+1IppiuW9ofsEZXRPLoXlk
         2UUw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record:x-gm-message-state;
        bh=OQuxgBLPudMvu8TYfsXoqdsMSc/WE3zw1ZnQQLZqtOo=;
        b=nsUNK3wNn7ZpXT6GAI/OHIFs/EHhzqQ8HhaRdIpf6tVREJpH/oMv8mTZoOzkFDI2oH
         +m+90mB4pTkMR+pZqWH6YTaXYVmdweGHJfKwcHuyngV++dPTnS66oO+k0Eh8FXUjQrg6
         oZqyL1ui0wxyeeiWeHdh208pztnRVkEYZCFrL9idA/tWiVZUu/nHBhx0LYfrehiX61T8
         YNrDqjuZlaGWFLxgODwd7FzGIl5KM5fOX4PDQM9p+YEcy3yen6UnCUecX7/H4Nx3YXAv
         +FNlEtj9VXEw9ZhINQqG2T/VSOM4ZzBrQoPn377in78TliRwD2s81MKoX2MXVh7fUP40
         DVyA==
Original-Received: by 10.50.208.100 with SMTP id md4mr7144592igc.65.1343957327798;
        Thu, 02 Aug 2012 18:28:47 -0700 (PDT)
Original-Received: by 10.50.208.100 with SMTP id md4mr7144566igc.65.1343957327606; Thu,
 02 Aug 2012 18:28:47 -0700 (PDT)
Original-Received: by 10.231.184.211 with HTTP; Thu, 2 Aug 2012 18:28:47 -0700 (PDT)
In-Reply-To: <CAMbhsRQg4pETrM7cx+aSBzGn3S1LV_x7vo8X3A300vCWTjkFng@mail.gmail.com>
X-Google-Sender-Auth: BLzjf1cEVtuZ_qCNB5F0l7PC9aM
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQlLo993MWT0wIEFGdw88uCQ+u/2uHFmIky9PVWU2Ruh6DdwWTd82C7lrE4G6Oh8AtqOw18VnBJ1TUl7DYIcHM0jZm1jYK3hTsEN2QeD4lsUU3SLPoTer2Zn3Kas9vf4KMWo5csXjlkFixYASnMBEmm5GjlgTc/9f8e8sas+DqFwvs8hHenkoG+TGPlGmBQ1J2C2wYQY
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337056 gmane.linux.ports.arm.kernel:179992
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337056>

On Fri, Jul 27, 2012 at 8:30 PM, Colin Cross <ccross@android.com> wrote:
> On Fri, Jul 27, 2012 at 6:15 PM, Colin Cross <ccross@android.com> wrote:
>> That patch was merged in 3.4, and my patch is on top of it.  Your
>> patch updates epoch_cyc and epoch_ns in suspend, but if the first call
>> to cyc_to_sched_clock after resume gets cyc = 0, cyc - epoch_cyc can
>> be negative, although it will be cast back to a large positive number.
>>
>> With my patch, epoch_cyc is updated in resume to whatever
>> read_sched_clock() returns, and epoch_ns is still set to the suspend
>> value, so it appears that sched_clock has not changed between
>> sched_clock_suspend and sched_clock_resume.  It will work with any
>> timer behavior (reset to 0, reset to random value, or continuing
>> counting).  The old setup_sched_clock function maintains the old
>> behavior to appease those who like their 32kHz sched clock to continue
>> ticking in suspend, although I think it is more correct for all sched
>> clocks to be faster than 32 kHz (when possible) and stop in suspend.
>
> I think the existing code can cause sched_clock to go backwards if the
> register read by the read function resets to 0 in suspend:
>
> In sched_clock_suspend epoch_cyc is updated to 0x00002000.
>
> The first sched_clock call after resume gets cyc = 0, returning
> epoch_ns + cyc_to_ns(0xffffe000)
>
> Later, sched_clock gets cyc = 0x5000, returning epoch_ns +
> cyc_to_ns(0x3000), which will be much smaller than the previous
> sched_clock value.

Russell, any update on this?  Should sched_clock.c handle read
functions that go backwards in suspend, or should I modify the read
function to track an offset in suspend and always return a
monotonically increasing value across suspend?
