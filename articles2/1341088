Path: news.gmane.org!not-for-mail
From: Kees Cook <keescook@chromium.org>
Newsgroups: gmane.linux.kernel
Subject: Re: yama_ptrace_access_check(): possible recursive locking detected
Date: Thu, 9 Aug 2012 18:39:34 -0700
Lines: 88
Approved: news@gmane.org
Message-ID: <CAGXu5j+xjud3w4cYXADM-KvFPvnkaKp49j5x-wdZ66wUJjkX0g@mail.gmail.com>
References: <20120726134748.GA20605@localhost>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344562784 5723 80.91.229.3 (10 Aug 2012 01:39:44 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 10 Aug 2012 01:39:44 +0000 (UTC)
Cc: LKML <linux-kernel@vger.kernel.org>,
	Oleg Nesterov <oleg@redhat.com>
To: Fengguang Wu <fengguang.wu@intel.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Aug 10 03:39:44 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzeCV-00007W-7I
	for glk-linux-kernel-3@plane.gmane.org; Fri, 10 Aug 2012 03:39:43 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758934Ab2HJBjh (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 9 Aug 2012 21:39:37 -0400
Original-Received: from mail-gg0-f174.google.com ([209.85.161.174]:42186 "EHLO
	mail-gg0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757017Ab2HJBjf (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 9 Aug 2012 21:39:35 -0400
Original-Received: by ggdk6 with SMTP id k6so1161323ggd.19
        for <linux-kernel@vger.kernel.org>; Thu, 09 Aug 2012 18:39:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record;
        bh=RpBTRRNeigM0b6EwceStow+y/lxboqp5haZd5RTUJAE=;
        b=dnRRcvLxs9ceKKY4OpZKy6H8CJmCLjJkObwH25RzENrSiLn3jHQxgCAG3bz8hbGqmc
         +kxbnYjbdeXqp0gqXbN+/clgkhrElSkHO7hkFYKUCRBEI3R2DYHxi11m2fNa4fyMMpxk
         arKRSj8cJLhTDmxJIPouyPurBTZG+ki3R6WDZoOSxk4Her2hBomSZ9S2Lwce2wJJOZak
         FZ/1sPeAIaaePyZTffEbLGoQlTUgXoNNOiYfG2VM31T/2FIG0pM9PbBE33ySh5ZN07dg
         YysJ0Q/kaCubEzaQl4Bl/dZcxNVFN8GQg2WdYF65pkrKKiDNe1sUmQ78K45LHWLk/mi3
         dsJg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type
         :x-system-of-record:x-gm-message-state;
        bh=RpBTRRNeigM0b6EwceStow+y/lxboqp5haZd5RTUJAE=;
        b=PBrnoccI+FtNiZlL2NmADdhKsQKdTSnwxIn2IQCNbSlrBLqtmZyK+dDteuzfwHDyRV
         iXfwP+qWNUPKj4+Jus7aooxEYz9aO/LFyqei7DZ9OxlRRr866TGGJlPeLZz1byMlUzus
         +W0XtGOK0zpkphJ2emdgMPTQFVC2klwachMPdz1AJEFBRlmMHQSQ8hq79m3mzqtISnUe
         hZiiz1OZiVsDb12wJglhwUcaV8mgMd0kgknmQOfDPvBEgiZ4bWGm4MT1LPHur3ezsdNK
         lCsD0C2y3Q8tqbydK8HJDn30f2fqkP6JkNkeTgh5CD8y7O3lwMMKZneXP2FQR3Qnil3Y
         NRhQ==
Original-Received: by 10.50.213.39 with SMTP id np7mr316999igc.51.1344562774674;
        Thu, 09 Aug 2012 18:39:34 -0700 (PDT)
Original-Received: by 10.50.213.39 with SMTP id np7mr316994igc.51.1344562774469; Thu,
 09 Aug 2012 18:39:34 -0700 (PDT)
Original-Received: by 10.50.188.137 with HTTP; Thu, 9 Aug 2012 18:39:34 -0700 (PDT)
In-Reply-To: <20120726134748.GA20605@localhost>
X-Google-Sender-Auth: qCcYuTCx1EdYfcMwLSec07sPsXs
X-System-Of-Record: true
X-Gm-Message-State: ALoCoQlCUi2+XB9lGnTkwtuAFiGSI9xgbW+RDIeY3Wq0VX2wHxoCjN0MotpGuQAw6IXKctZ04VHPw9Q9hLDrN/uewa5sHWCxG97gMu6FH82W5/BuA+7xVH1O+35L65WP/veSTxDEUjWFxUG+FGxa83jESxytQ+gLl8jTcvOpwzxrWASUDp5Id0rVPrY4Ts+4ACndidMwwCgTBgMv9iQzmH6POQt3IqqbpQ==
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1341088
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1341088>

Hi,

So, after taking a closer look at this, I cannot understand how it's
possible. Yama's task_lock call is against "current", not "child",
which is what ptrace_may_access() is locking. And the same code makes
sure that current != child. Yama would never get called if current ==
child.

How did you reproduce this situation?

Thanks,

-Kees

On Thu, Jul 26, 2012 at 6:47 AM, Fengguang Wu <fengguang.wu@intel.com> wrote:
> Hi Kees,
>
> Here is a recursive lock possibility:
>
>         ptrace_may_access()
> =>        task_lock(task);
>             yama_ptrace_access_check()
>               get_task_comm()
> =>              task_lock(task);
>
> [   60.230444] =============================================
> [   60.232078] [ INFO: possible recursive locking detected ]
> [   60.232078] 3.5.0+ #281 Not tainted
> [   60.232078] ---------------------------------------------
> [   60.232078] trinity-child0/17019 is trying to acquire lock:
> [   60.232078]  (&(&p->alloc_lock)->rlock){+.+...}, at: [<c1176ffa>] get_task_comm+0x4a/0xf0
> [   60.232078]
> [   60.232078] but task is already holding lock:
> [   60.232078]  (&(&p->alloc_lock)->rlock){+.+...}, at: [<c10653fa>] ptrace_may_access+0x4a/0xf0
> [   60.232078]
> [   60.232078] other info that might help us debug this:
> [   60.232078]  Possible unsafe locking scenario:
> [   60.232078]
> [   60.232078]        CPU0
> [   60.232078]        ----
> [   60.232078]   lock(&(&p->alloc_lock)->rlock);
> [   60.232078]   lock(&(&p->alloc_lock)->rlock);
> [   60.232078]
> [   60.232078]  *** DEADLOCK ***
> [   60.232078]
> [   60.232078]  May be due to missing lock nesting notation
> [   60.232078]
> [   60.232078] 3 locks held by trinity-child0/17019:
> [   60.232078]  #0:  (&p->lock){+.+.+.}, at: [<c11a9683>] seq_read+0x33/0x6b0
> [   60.232078]  #1:  (&sig->cred_guard_mutex){+.+.+.}, at: [<c11ff8ae>] lock_trace+0x2e/0xb0
> [   60.232078]  #2:  (&(&p->alloc_lock)->rlock){+.+...}, at: [<c10653fa>] ptrace_may_access+0x4a/0xf0
> [   60.232078]
> [   60.232078] stack backtrace:
> [   60.232078] Pid: 17019, comm: trinity-child0 Not tainted 3.5.0+ #281
> [   60.232078] Call Trace:
> [   60.232078]  [<c10c6238>] __lock_acquire+0x1498/0x14f0
> [   60.232078]  [<c10be7e7>] ? trace_hardirqs_off+0x27/0x40
> [   60.232078]  [<c10c6360>] lock_acquire+0xd0/0x110
> [   60.232078]  [<c1176ffa>] ? get_task_comm+0x4a/0xf0
> [   60.232078]  [<c1422290>] _raw_spin_lock+0x60/0x110
> [   60.232078]  [<c1176ffa>] ? get_task_comm+0x4a/0xf0
> [   60.232078]  [<c1176ffa>] get_task_comm+0x4a/0xf0
> [   60.232078]  [<c1246798>] yama_ptrace_access_check+0x468/0x4a0
> [   60.232078]  [<c124648f>] ? yama_ptrace_access_check+0x15f/0x4a0
> [   60.232078]  [<c124209a>] security_ptrace_access_check+0x1a/0x30
> [   60.232078]  [<c1065229>] __ptrace_may_access+0x189/0x310
> [   60.232078]  [<c10650cc>] ? __ptrace_may_access+0x2c/0x310
> [   60.232078]  [<c106542d>] ptrace_may_access+0x7d/0xf0
> [   60.232078]  [<c11ff8ea>] lock_trace+0x6a/0xb0
> [   60.232078]  [<c11ffa46>] proc_pid_stack+0x76/0x170
> [   60.232078]  [<c1201064>] proc_single_show+0x74/0x100
> [   60.232078]  [<c11a97b3>] seq_read+0x163/0x6b0
> [   60.232078]  [<c105bf70>] ? do_setitimer+0x220/0x330
> [   60.232078]  [<c11a9650>] ? seq_lseek+0x1f0/0x1f0
> [   60.232078]  [<c116b55a>] vfs_read+0xca/0x280
> [   60.232078]  [<c11a9650>] ? seq_lseek+0x1f0/0x1f0
> [   60.232078]  [<c116b776>] sys_read+0x66/0xe0
> [   60.232078]  [<c1423d9d>] syscall_call+0x7/0xb
> [   60.232078]  [<c1420000>] ? __schedule+0x2a0/0xc80
>
> Thanks,
> Fengguang



-- 
Kees Cook
Chrome OS Security
