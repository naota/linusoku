Path: news.gmane.org!not-for-mail
From: Ohad Ben-Cohen <ohad@wizery.com>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: Re: [PATCH 1/1] remoteproc: extend customized fw loader to cover
 request and release
Date: Mon, 6 Aug 2012 17:16:18 +0300
Lines: 57
Approved: news@gmane.org
Message-ID: <CAK=WgbbBHspN_LTUXH1kUugH8-Nr-G=p-G3Wj60tAmrqqfakmg@mail.gmail.com>
References: <1344237865-32491-1-git-send-email-roylee17@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344262612 1980 80.91.229.3 (6 Aug 2012 14:16:52 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 6 Aug 2012 14:16:52 +0000 (UTC)
Cc: "linux-kernel@vger.kernel.org" <linux-arm-kernel@lists.infradead.org>,
	=?ISO-8859-1?Q?Sjur_Br=E6ndeland?= <sjur.brandeland@stericsson.com>,
	Stephen Boyd <sboyd@codeaurora.org>,
	Fernando Guzman Lugo <fernando.lugo@ti.com>,
	linux-kernel@vger.kernel.org
To: Tzu-Jung Lee <roylee17@gmail.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Mon Aug 06 16:16:49 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SyO6y-0001l0-M3
	for glk-linux-kernel-3@plane.gmane.org; Mon, 06 Aug 2012 16:16:49 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756474Ab2HFOQk (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 6 Aug 2012 10:16:40 -0400
Original-Received: from mail-vc0-f174.google.com ([209.85.220.174]:39754 "EHLO
	mail-vc0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756375Ab2HFOQj (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 6 Aug 2012 10:16:39 -0400
Original-Received: by vcbfk26 with SMTP id fk26so2655238vcb.19
        for <linux-kernel@vger.kernel.org>; Mon, 06 Aug 2012 07:16:38 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:x-originating-ip:in-reply-to:references:from:date
         :message-id:subject:to:cc:content-type:x-gm-message-state;
        bh=nE31r+jorO5hqdUYhUDIWvRG3oS6KN4kFw79K62n6Mw=;
        b=jxRu9O9EDe+VVmansdl6VK84W+lnbJDE+3rj5vFU5zG/mvcT+3/tTIaBOZy5IGnpK+
         cDD41g31bZSRxWWRXZJE7RqPBCVtN8Xoq40A3sm9O56j59Ow39E0r2T07hhTu5umdAhh
         flnTIyFC72z/isPGHktlkiAvGXuMdIW7qAIbI3uWfbzgLq5ayJE+VRlpoLeJWzMe8hNm
         MbvD6a3whNCjAXg9IKaL+2WOUtwak0CMLanxl7jvOG+a2gfcVMgqWuQcCkFBnanWh2VC
         qraDMHSInUtvkI/4wWZDgAcrobEtilyOZHtJVx+U1A7O3q0xWOG9YPHhbLnThDPPviho
         P2DA==
Original-Received: by 10.221.0.78 with SMTP id nl14mr8167073vcb.21.1344262598346; Mon,
 06 Aug 2012 07:16:38 -0700 (PDT)
Original-Received: by 10.52.0.101 with HTTP; Mon, 6 Aug 2012 07:16:18 -0700 (PDT)
X-Originating-IP: [46.116.151.238]
In-Reply-To: <1344237865-32491-1-git-send-email-roylee17@gmail.com>
X-Gm-Message-State: ALoCoQn4AHRmWypoeK0j48VrFo9y+Shk8E3R+y5oVqceXIhXj+X2hud7JMBm7nXXee/OrnR6N/X7
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1338311 gmane.linux.ports.arm.kernel:180447
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338311>

Hi Tzu-Jung Lee,

On Mon, Aug 6, 2012 at 10:24 AM, Tzu-Jung Lee <roylee17@gmail.com> wrote:
> Previously, the remoteproc mandates an actual ELF firmware in order to
> parse the resource table and boot the remoteproc.
>
> An fw loader abstraction was added in v3.61-rc1 to make the ELF as a
> "default" handler, and allows firmwares in other formats to be loaded.
>
> However, in our use cases, we don't actually have a firmware for linux
> to load. The remote processor always boots first, and then boots the
> rest of processors that running linux.

Can you describe your use case some more ?

What parts in remoteproc are actually helpful for you (not much I
guess if Linux doesn't control the life cycle of the remote processor
in your case) ?

Do you use rpmsg ?

> In this case, forging an binary firmware just for the resource table
> creates a burden for maintenence.
> Allowing the firmware request/release function to be customized gives
> developers to construct the reqource table in memory, instead of loading
> one from filesystem.

I'm not sure this is an ideal abstraction though.

The problem you describe is architectural and not necessarily related
with a specific binary format, which this patch ties it up with (by
abstracting it away in rproc_fw_ops). It seems that a
binary-format-agnostic solution is preferable, because it could then
be utilized by any platform, regardless of the binary format it uses.

In general we prefer not to adopt a solution that puts the resource
table in the kernel, because that means redundant churn and
compatibility issues, as the resource table is inherently coupled with
the software running on the remote processor, and not with the Linux
kernel.

An easy solution is to allow loading an external stand-alone resource
table from the filesystem. We've discussed this in the past and
several parties showed interest. Will it help you ?

Another possible solution is to allow the low level rproc driver to
provide the remoteproc framework a pointer to an in-memory resource
table. This may prove useful in case the remote processor is already
up when Linux boots, and the resource table is already loaded to
memory.

> Change-Id: I0aa071dc1bd775eed6ea0822cff0fe2fc1b12b45

PS - no need to provide these tags when sending patches upstream.

Thanks,
Ohad.
