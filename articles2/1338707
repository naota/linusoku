Path: news.gmane.org!not-for-mail
From: Muthu Kumar <muthu.lkml-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
Newsgroups: gmane.linux.kernel.bcache.devel,gmane.linux.kernel,gmane.linux.kernel.device-mapper.devel,gmane.linux.kernel.drbd.devel
Subject: Re: [PATCH v4 12/12] block: Only clone bio vecs that are in use
Date: Mon, 6 Aug 2012 20:17:58 -0700
Lines: 109
Approved: news@gmane.org
Message-ID: <CAFR8ued4XmZUAL9RVnmdSspRom14u6rCZmhohJGChPqwfPOdfQ@mail.gmail.com>
References: <1343160689-12378-1-git-send-email-koverstreet@google.com>
	<1343160689-12378-13-git-send-email-koverstreet@google.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344309488 11336 80.91.229.3 (7 Aug 2012 03:18:08 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 03:18:08 +0000 (UTC)
Cc: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org, linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org,
	dm-devel-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, tj-DgEjT+Ai2ygdnm+yROfE0A@public.gmane.org, axboe-tSWWG44O7X1aa/9Udqfwiw@public.gmane.org,
	agk-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, neilb-l3A5Bk7waGM@public.gmane.org, drbd-dev-cunTk1MwBs8qoQakbn7OcQ@public.gmane.org,
	bharrosh-C4P08NqkoRlBDgjK7y7TUQ@public.gmane.org, vgoyal-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, mpatocka-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org,
	sage-BnTBU8nroG7k1uMJSBkQmQ@public.gmane.org, yehuda-L5o5AL9CYN0tUFlbccrkMA@public.gmane.org
To: Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
Original-X-From: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org Tue Aug 07 05:18:05 2012
Return-path: <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>
Envelope-to: glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>)
	id 1SyaJ1-0004Ia-Ai
	for glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org; Tue, 07 Aug 2012 05:18:03 +0200
Original-Received: (majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org) by vger.kernel.org via listexpand
	id S1757185Ab2HGDSB (ORCPT <rfc822;glbd-linux-bcache@m.gmane.org>);
	Mon, 6 Aug 2012 23:18:01 -0400
Original-Received: from mail-wi0-f178.google.com ([209.85.212.178]:64022 "EHLO
	mail-wi0-f178.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757182Ab2HGDSA (ORCPT
	<rfc822;linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>);
	Mon, 6 Aug 2012 23:18:00 -0400
Original-Received: by wibhr14 with SMTP id hr14so2345656wib.1
        for <multiple recipients>; Mon, 06 Aug 2012 20:17:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=qoH83YdrVS8QNjU6NTFa58hzQNUr+ufU8slm3a8vD+o=;
        b=OxjjAUlE0R3ctMYMXoRR3YrPL8U2UMU2Hm7nI/yKAakbku+Xx0KHYLHNrp9n2/vFf0
         FrGXrjkOoO1Yt2PzTTXyoTox1EpaSfL24m6wXW1PjPGWhrrq3qGa9CX9FmGfPAqu6YBV
         9p9KRnGnUnLIMNcV1eFvHuJESjoaIIiCILWpXsOmnGcB3qEn0QCHcQ3aHZG6Rpbnlvdw
         LE4XeUMigNjIWxJb6HpvzVocHrOa15wXLqOUvpjfLnyqE9bLu4HXDWy6+oqtf/sTpP/c
         Da8L8os73GlgSZojFCtZvqHAMdWBVUgjaFv6lXUIt6l+4o7ROP2Cv/lDBJ4nINb8VXK/
         mzEw==
Original-Received: by 10.216.243.74 with SMTP id j52mr6247296wer.108.1344309478321;
 Mon, 06 Aug 2012 20:17:58 -0700 (PDT)
Original-Received: by 10.216.245.203 with HTTP; Mon, 6 Aug 2012 20:17:58 -0700 (PDT)
In-Reply-To: <1343160689-12378-13-git-send-email-koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
Original-Sender: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Precedence: bulk
List-ID: <linux-bcache.vger.kernel.org>
X-Mailing-List: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Xref: news.gmane.org gmane.linux.kernel.bcache.devel:674 gmane.linux.kernel:1338707 gmane.linux.kernel.device-mapper.devel:16482 gmane.linux.kernel.drbd.devel:2067
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338707>

Hi,

On Tue, Jul 24, 2012 at 1:11 PM, Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org> wrote:
> bcache creates large bios internally, and then splits them according to
> the device requirements before it sends them down. If a lower level
> device tries to clone the bio, and the original bio had more than
> BIO_MAX_PAGES, the clone will fail unecessarily.
>
> We can fix this by only cloning the bio vecs that are actually in use.
>
> Signed-off-by: Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>

<snip>

>
> diff --git a/drivers/md/dm.c b/drivers/md/dm.c
> index 3f3c26e..193fb19 100644
> --- a/drivers/md/dm.c
> +++ b/drivers/md/dm.c
> @@ -1057,11 +1057,10 @@ static struct bio *clone_bio(struct bio *bio, sector_t sector,
>  {
>         struct bio *clone;
>
> -       clone = bio_alloc_bioset(GFP_NOIO, bio->bi_max_vecs, bs);
> +       clone = bio_alloc_bioset(GFP_NOIO, bv_count, bs);

Number of io_vecs allocated in clone is different. Please see my comment below.

>         __bio_clone(clone, bio);
>         clone->bi_sector = sector;
> -       clone->bi_idx = idx;
> -       clone->bi_vcnt = idx + bv_count;
> +       clone->bi_vcnt = bv_count;
>         clone->bi_size = to_bytes(len);
>         clone->bi_flags &= ~(1 << BIO_SEG_VALID);
>
> diff --git a/fs/bio.c b/fs/bio.c
> index 7a0801d..ec6a357 100644
> --- a/fs/bio.c
> +++ b/fs/bio.c
> @@ -451,8 +451,9 @@ EXPORT_SYMBOL(bio_phys_segments);
>   */
>  void __bio_clone(struct bio *bio, struct bio *bio_src)
>  {
> -       memcpy(bio->bi_io_vec, bio_src->bi_io_vec,
> -               bio_src->bi_max_vecs * sizeof(struct bio_vec));
> +       memcpy(bio->bi_io_vec,
> +              bio_iovec(bio_src),
> +              bio_segments(bio_src) * sizeof(struct bio_vec));
>


You are changing the meaning of __bio_clone() here. In old code, the
number of io_vecs, bi_idx, bi_vcnt are preserved. But in this modified
code, you are mapping bio_src's bi_iovec[bi_idx] to bio_dests
bi_iovec[0] and also restricting the number of allocated io_vecs of
the clone. It may be useful for cases were we would like a identical
copy of the original bio (may not be in current code base, but this
implementation is definitely not what one would expect from the name
"clone").

May be, call this new implementation some thing else (and use it for bcache)?

Regards,
Muthu



>         /*
>          * most users will be overriding ->bi_bdev with a new target,
> @@ -461,10 +462,10 @@ void __bio_clone(struct bio *bio, struct bio *bio_src)
>         bio->bi_sector = bio_src->bi_sector;
>         bio->bi_bdev = bio_src->bi_bdev;
>         bio->bi_flags |= 1 << BIO_CLONED;
> +       bio->bi_flags &= ~(1 << BIO_SEG_VALID);
>         bio->bi_rw = bio_src->bi_rw;
> -       bio->bi_vcnt = bio_src->bi_vcnt;
> +       bio->bi_vcnt = bio_segments(bio_src);
>         bio->bi_size = bio_src->bi_size;
> -       bio->bi_idx = bio_src->bi_idx;
>  }
>  EXPORT_SYMBOL(__bio_clone);
>
> @@ -479,7 +480,7 @@ EXPORT_SYMBOL(__bio_clone);
>  struct bio *bio_clone_bioset(struct bio *bio, gfp_t gfp_mask,
>                              struct bio_set *bs)
>  {
> -       struct bio *b = bio_alloc_bioset(gfp_mask, bio->bi_max_vecs, bs);
> +       struct bio *b = bio_alloc_bioset(gfp_mask, bio_segments(bio), bs);
>
>         if (!b)
>                 return NULL;
> @@ -509,7 +510,7 @@ EXPORT_SYMBOL(bio_clone);
>
>  struct bio *bio_clone_kmalloc(struct bio *bio, gfp_t gfp_mask)
>  {
> -       struct bio *b = bio_kmalloc(gfp_mask, bio->bi_max_vecs);
> +       struct bio *b = bio_kmalloc(gfp_mask, bio_segments(bio));
>
>         if (!b)
>                 return NULL;
> --
> 1.7.7.3
>
> --
> To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
> the body of a message to majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> Please read the FAQ at  http://www.tux.org/lkml/
