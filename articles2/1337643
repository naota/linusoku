Path: news.gmane.org!not-for-mail
From: Sasha Levin <levinsasha928@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: mq: INFO: possible circular locking dependency detected
Date: Sat, 04 Aug 2012 12:59:31 +0200
Lines: 78
Approved: news@gmane.org
Message-ID: <501D0093.2090108@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344078020 30911 80.91.229.3 (4 Aug 2012 11:00:20 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 4 Aug 2012 11:00:20 +0000 (UTC)
Cc: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
	Dave Jones <davej@redhat.com>
To: viro@zeniv.linux.org.uk
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Aug 04 13:00:15 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sxc5Y-0000Nq-Ie
	for glk-linux-kernel-3@plane.gmane.org; Sat, 04 Aug 2012 13:00:08 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751833Ab2HDK7J (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sat, 4 Aug 2012 06:59:09 -0400
Original-Received: from mail-bk0-f46.google.com ([209.85.214.46]:49155 "EHLO
	mail-bk0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751389Ab2HDK7G (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sat, 4 Aug 2012 06:59:06 -0400
Original-Received: by bkwj10 with SMTP id j10so534111bkw.19
        for <linux-kernel@vger.kernel.org>; Sat, 04 Aug 2012 03:59:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :content-type:content-transfer-encoding;
        bh=qkuvWuxKOhBAKbXdSpIWPIf7RlzcUY8svmIs00KcY0A=;
        b=RXWI0qrdfayThZnu+d041o44cQ4R2Z6GzLDjYTJzWg/tyDNEv/Ubi4B34e9rWzYpST
         c25o2ZCyBIMFphCDCnhOqdfGcr7hjqICEgsmbOhzHLNjGt9TcdJzbbqC2epwcAxY8MY3
         ZvMfIQa6m/Qus+wSrSoFY0aJF55uOdP3Nh+PdSLWLDQS7UB+daRDz8Ybcvw3q+T6hRyS
         mhbAXfHeqNt2knz1Qqh4TouVBArI6qkeIZRB69oORbLTJaP+/phjNVCBXwJu+PRGayyU
         qRF0kwq4gcTt7Eb7t2qx8WKekzB547Qy8+cUlsF54RDl5CCTixv93ZDM8bmXzzAe7w+W
         4/kw==
Original-Received: by 10.204.129.14 with SMTP id m14mr1814279bks.7.1344077944748;
        Sat, 04 Aug 2012 03:59:04 -0700 (PDT)
Original-Received: from [192.168.42.103] (95-89-78-76-dynip.superkabel.de. [95.89.78.76])
        by mx.google.com with ESMTPS id 14sm5562300bkq.12.2012.08.04.03.59.02
        (version=SSLv3 cipher=OTHER);
        Sat, 04 Aug 2012 03:59:03 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120730 Thunderbird/14.0
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337643
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337643>

Hi all,

While fuzzing with trinity inside a KVM tools guest, using latest -next kernel, I've stumbled on the dump below.

I think this is the result of commit 765927b2 ("switch dentry_open() to struct path, make it grab references itself").

[   62.090519] ======================================================
[   62.091016] [ INFO: possible circular locking dependency detected ]
[   62.091016] 3.6.0-rc1-next-20120803-sasha #544 Tainted: G        W
[   62.091016] -------------------------------------------------------
[   62.091016] trinity-child0/6077 is trying to acquire lock:
[   62.091016]  (&sb->s_type->i_mutex_key#14){+.+.+.}, at: [<ffffffff8127c074>] vfs_unlink+0x54/0x100
[   62.091016]
[   62.091016] but task is already holding lock:
sb_writers#8){.+.+.+}, at: [<ffffffff812900bf>] mnt_want_write+0x1f/0x50
[   62.097920]
[   62.097920] which lock already depends on the new lock.
[   62.097920]
[   62.097920]
[   62.097920] the existing dependency chain (in reverse order) is:
[   62.097920]
-> #1 (sb_writers#8){.+.+.+}:
[   62.097920]        [<ffffffff8117b58e>] validate_chain+0x69e/0x790
[   62.097920]        [<ffffffff8117baa3>] __lock_acquire+0x423/0x4c0
[   62.097920]        [<ffffffff8117bcca>] lock_acquire+0x18a/0x1e0
[   62.097920]        [<ffffffff81271282>] __sb_start_write+0x192/0x1f0
[   62.097920]        [<ffffffff812900bf>] mnt_want_write+0x1f/0x50
[   62.097920]        [<ffffffff818de4f8>] do_create+0xe8/0x160
[   62.097920]        [<ffffffff818de79b>] sys_mq_open+0x1ab/0x2a0
[   62.097920]        [<ffffffff83749379>] system_call_fastpath+0x16/0x1b
[   62.097920]
-> #0 (&sb->s_type->i_mutex_key#14){+.+.+.}:
[   62.097920]        [<ffffffff8117ab3f>] check_prev_add+0x11f/0x4d0
[   62.097920]        [<ffffffff8117b58e>] validate_chain+0x69e/0x790
[   62.097920]        [<ffffffff8117baa3>] __lock_acquire+0x423/0x4c0
[   62.097920]        [<ffffffff8117bcca>] lock_acquire+0x18a/0x1e0
[   62.097920]        [<ffffffff83744db0>] __mutex_lock_common+0x60/0x590
[   62.097920]        [<ffffffff83745410>] mutex_lock_nested+0x40/0x50
[   62.097920]        [<ffffffff8127c074>] vfs_unlink+0x54/0x100
[   62.097920]        [<ffffffff818de3ab>] sys_mq_unlink+0xfb/0x160
[   62.097920]        [<ffffffff83749379>] system_call_fastpath+0x16/0x1b
[   62.097920]
[   62.097920] other info that might help us debug this:
[   62.097920]
[   62.097920]  Possible unsafe locking scenario:
[   62.097920]
[   62.097920]        CPU0                    CPU1
[   62.097920]        ----                    ----
[   62.097920]   lock(sb_writers#8);
[   62.097920]                                lock(&sb->s_type->i_mutex_key#14);
[   62.097920]                                lock(sb_writers#8);
[   62.097920]   lock(&sb->s_type->i_mutex_key#14);
[   62.097920]
[   62.097920]  *** DEADLOCK ***
[   62.097920]
[   62.097920] 2 locks held by trinity-child0/6077:
[   62.097920]  #0:  (&sb->s_type->i_mutex_key#13/1){+.+.+.}, at: [<ffffffff818de31f>] sys_mq_unlink+0x6f/0x160
[   62.097920]  #1:  (sb_writers#8){.+.+.+}, at: [<ffffffff812900bf>] mnt_want_write+0x1f/0x50
[   62.097920]
[   62.097920] stack backtrace:
[   62.097920] Pid: 6077, comm: trinity-child0 Tainted: G        W    3.6.0-rc1-next-20120803-sasha #544
[   62.097920] Call Trace:
[   62.097920]  [<ffffffff81178b25>] print_circular_bug+0x105/0x120
[   62.097920]  [<ffffffff8117ab3f>] check_prev_add+0x11f/0x4d0
[   62.097920]  [<ffffffff8117b58e>] validate_chain+0x69e/0x790
[   62.097920]  [<ffffffff8114ed58>] ? sched_clock_cpu+0x108/0x120
[   62.097920]  [<ffffffff8117baa3>] __lock_acquire+0x423/0x4c0
[   62.097920]  [<ffffffff8117bcca>] lock_acquire+0x18a/0x1e0
[   62.097920]  [<ffffffff8127c074>] ? vfs_unlink+0x54/0x100
[   62.097920]  [<ffffffff83744db0>] __mutex_lock_common+0x60/0x590
[   62.097920]  [<ffffffff8127c074>] ? vfs_unlink+0x54/0x100
[   62.097920]  [<ffffffff81271296>] ? __sb_start_write+0x1a6/0x1f0
[   62.097920]  [<ffffffff8127b2ad>] ? generic_permission+0x2d/0x140
[   62.097920]  [<ffffffff8127c074>] ? vfs_unlink+0x54/0x100
[   62.097920]  [<ffffffff83745410>] mutex_lock_nested+0x40/0x50
[   62.097920]  [<ffffffff8127c074>] vfs_unlink+0x54/0x100
[   62.097920]  [<ffffffff818de3ab>] sys_mq_unlink+0xfb/0x160
[   62.097920]  [<ffffffff83749379>] system_call_fastpath+0x16/0x1b
