Path: news.gmane.org!not-for-mail
From: Peter Ujfalusi <peter.ujfalusi@ti.com>
Newsgroups: gmane.linux.alsa.devel,gmane.linux.drivers.devicetree,gmane.linux.kernel,gmane.linux.kernel.input,gmane.linux.ports.arm.omap,gmane.linux.ports.arm.kernel
Subject: [PATCH 06/11] ASoC: twl4030: Move hs_extmute GPIO
	handling to driver
Date: Wed,  8 Aug 2012 12:41:22 +0300
Lines: 118
Approved: news@gmane.org
Message-ID: <1344418887-5262-7-git-send-email-peter.ujfalusi@ti.com>
References: <1344418887-5262-1-git-send-email-peter.ujfalusi@ti.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344418951 22208 80.91.229.3 (8 Aug 2012 09:42:31 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 09:42:31 +0000 (UTC)
Cc: alsa-devel@alsa-project.org, Benoit Cousson <b-cousson@ti.com>,
 devicetree-discuss@lists.ozlabs.org, linux-kernel@vger.kernel.org,
 linux-input@vger.kernel.org, linux-omap@vger.kernel.org,
 linux-arm-kernel@lists.infradead.org
To: Samuel Ortiz <sameo@linux.intel.com>,
 Mark Brown <broonie@opensource.wolfsonmicro.com>,
 Liam Girdwood <lrg@ti.com>, Tony Lindgren <tony@atomide.com>,
 Dmitry Torokhov <dtor@mail.ru>
Original-X-From: alsa-devel-bounces@alsa-project.org Wed Aug 08 11:42:26 2012
Return-path: <alsa-devel-bounces@alsa-project.org>
Envelope-to: glad-alsa-devel-2@m.gmane.org
Original-Received: from alsa0.perex.cz ([77.48.224.243])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <alsa-devel-bounces@alsa-project.org>)
	id 1Sz2mP-0002jY-F7
	for glad-alsa-devel-2@m.gmane.org; Wed, 08 Aug 2012 11:42:17 +0200
Original-Received: by alsa0.perex.cz (Postfix, from userid 1000)
	id B98DE26614B; Wed,  8 Aug 2012 11:12:27 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on mail1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.0 required=5.0 tests=RCVD_IN_DNSWL_MED,SPF_FAIL
	autolearn=disabled version=3.2.4
Original-Received: from alsa0.perex.cz (localhost [IPv6:::1])
	by alsa0.perex.cz (Postfix) with ESMTP id 22D8226610C;
	Wed,  8 Aug 2012 11:12:18 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Original-Received: by alsa0.perex.cz (Postfix, from userid 1000)
 id 4905E26610C; Wed,  8 Aug 2012 11:12:16 +0200 (CEST)
Original-Received: from na3sys009aog119.obsmtp.com (na3sys009aog119.obsmtp.com
 [74.125.149.246])
 by alsa0.perex.cz (Postfix) with ESMTP id 2A72026609F
 for <alsa-devel@alsa-project.org>; Wed,  8 Aug 2012 11:12:13 +0200 (CEST)
Original-Received: from mail-ob0-f181.google.com ([209.85.214.181]) (using TLSv1) by
 na3sys009aob119.postini.com ([74.125.148.12]) with SMTP
 ID DSNKUCI0Z1U6K5CUsohOU2yYZcwIDwHY7xk5@postini.com;
 Wed, 08 Aug 2012 02:42:00 PDT
Original-Received: by obbup19 with SMTP id up19so979394obb.12
 for <alsa-devel@alsa-project.org>; Wed, 08 Aug 2012 02:41:58 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
 :x-gm-message-state;
 bh=hLp6842xehS+aq/vItTLcSG6QKuHVwN4Zwi1uXtWOS4=;
 b=VmecGb2yJoKX9FrC5YhwrUeUnsz09qcZMdcdFdO83CHVsPoi04yOh7pKIK76zkIcKo
 ox8GV6WQI0GtDh6y+NQp9j+d91Z6yuPXhVASpu3TQwdfvh1sRqcBn0tNLNl/CD6sPeMe
 EbDIm6HJo/tsvtS94Ilw65K+3tOZSlya5cKlOZQYvXZVW4g0vAWeVqjP5u83isojSpLq
 toNsZi/CEq/zixIRsKJorzuEwpIZe1xa7UmlCVSOgD7EfwNPAJTiaVJQtibY2kKL7884
 7PH3GweK2HCsWnKtg2tpRNUxYINZWkbH99ZqkfxnOiHt+/rKAQE3AK15I0/wCYGKUHkl
 y+VA==
Original-Received: by 10.182.78.228 with SMTP id e4mr28813228obx.77.1344418918862;
 Wed, 08 Aug 2012 02:41:58 -0700 (PDT)
Original-Received: from barack.emea.dhcp.ti.com (dragon.ti.com. [192.94.94.33])
 by mx.google.com with ESMTPS id c6sm22141308obn.13.2012.08.08.02.41.55
 (version=SSLv3 cipher=OTHER); Wed, 08 Aug 2012 02:41:58 -0700 (PDT)
X-Mailer: git-send-email 1.7.8.6
In-Reply-To: <1344418887-5262-1-git-send-email-peter.ujfalusi@ti.com>
X-Gm-Message-State: ALoCoQmuzFURsbq3fIRl5juzqLR/70Yv1szAUyLzyUx9G8cBXOpVwG/3pALCg1rrk1ybCh20aAsn
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <http://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <http://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Original-Sender: alsa-devel-bounces@alsa-project.org
Xref: news.gmane.org gmane.linux.alsa.devel:99792 gmane.linux.drivers.devicetree:19202 gmane.linux.kernel:1339931 gmane.linux.kernel.input:26212 gmane.linux.ports.arm.omap:82000 gmane.linux.ports.arm.kernel:180861
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1339931>

The external mute (if it is in use) is handled by a GPIO line. Prepare to
remove the set_hs_extmute callback and replace it with two sets of platform
data:
hs_extmute_gpio: the GPIO number to use for external mute
hs_extmute_disable_level: the GPIO level to use when the external mute is
not enabled.

The codec driver can handle the external mute functionality based on these
parameters and when the users of set_hs_extmute has been converted the
callback can be removed.

Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
---
 include/linux/i2c/twl.h    |    6 +++++-
 sound/soc/codecs/twl4030.c |   36 ++++++++++++++++++++++++++++++++++--
 2 files changed, 39 insertions(+), 3 deletions(-)

diff --git a/include/linux/i2c/twl.h b/include/linux/i2c/twl.h
index 7ea898c..75ce6d1 100644
--- a/include/linux/i2c/twl.h
+++ b/include/linux/i2c/twl.h
@@ -666,7 +666,11 @@ struct twl4030_codec_data {
 	unsigned int check_defaults:1;
 	unsigned int reset_registers:1;
 	unsigned int hs_extmute:1;
-	void (*set_hs_extmute)(int mute);
+	void (*set_hs_extmute)(int mute); /* Deprecated, use hs_extmute_gpio and
+					     hs_extmute_disable_level */
+	int hs_extmute_gpio;
+	unsigned int hs_extmute_disable_level:1; /* the GPIO state to disable
+						    the extmute */
 };
 
 struct twl4030_vibra_data {
diff --git a/sound/soc/codecs/twl4030.c b/sound/soc/codecs/twl4030.c
index 391fcfc..0630040 100644
--- a/sound/soc/codecs/twl4030.c
+++ b/sound/soc/codecs/twl4030.c
@@ -28,6 +28,7 @@
 #include <linux/platform_device.h>
 #include <linux/i2c/twl.h>
 #include <linux/slab.h>
+#include <linux/gpio.h>
 #include <sound/core.h>
 #include <sound/pcm.h>
 #include <sound/pcm_params.h>
@@ -302,6 +303,24 @@ static void twl4030_init_chip(struct snd_soc_codec *codec)
 	u8 reg, byte;
 	int i = 0;
 
+	if (pdata && pdata->hs_extmute &&
+	    gpio_is_valid(pdata->hs_extmute_gpio)) {
+		int ret, level;
+
+		if (!pdata->hs_extmute_gpio)
+			dev_warn(codec->dev,
+				 "Extmute GPIO is 0 is this correct?\n");
+
+		level = pdata->hs_extmute_disable_level;
+		ret = gpio_request_one(pdata->hs_extmute_gpio, level ?
+				       GPIOF_OUT_INIT_HIGH : GPIOF_OUT_INIT_LOW,
+				       "hs_extmute");
+		if (ret) {
+			dev_err(codec->dev, "Failed to get hs_extmute GPIO\n");
+			pdata->hs_extmute_gpio = -1;
+		}
+	}
+
 	/* Check defaults, if instructed before anything else */
 	if (pdata && pdata->check_defaults)
 		twl4030_check_defaults(codec);
@@ -748,7 +767,11 @@ static void headset_ramp(struct snd_soc_codec *codec, int ramp)
 	/* Enable external mute control, this dramatically reduces
 	 * the pop-noise */
 	if (pdata && pdata->hs_extmute) {
-		if (pdata->set_hs_extmute) {
+		if (gpio_is_valid(pdata->hs_extmute_gpio)) {
+			gpio_set_value(pdata->hs_extmute_gpio,
+				       !pdata->hs_extmute_disable_level);
+		} else if (pdata->set_hs_extmute) {
+			dev_warn(codec->dev, "set_hs_extmute is deprecated\n");
 			pdata->set_hs_extmute(1);
 		} else {
 			hs_pop |= TWL4030_EXTMUTE;
@@ -786,7 +809,11 @@ static void headset_ramp(struct snd_soc_codec *codec, int ramp)
 
 	/* Disable external mute */
 	if (pdata && pdata->hs_extmute) {
-		if (pdata->set_hs_extmute) {
+		if (gpio_is_valid(pdata->hs_extmute_gpio)) {
+			gpio_set_value(pdata->hs_extmute_gpio,
+				       pdata->hs_extmute_disable_level);
+		} else if (pdata->set_hs_extmute) {
+			dev_warn(codec->dev, "set_hs_extmute is deprecated\n");
 			pdata->set_hs_extmute(0);
 		} else {
 			hs_pop &= ~TWL4030_EXTMUTE;
@@ -2230,12 +2257,17 @@ static int twl4030_soc_probe(struct snd_soc_codec *codec)
 
 static int twl4030_soc_remove(struct snd_soc_codec *codec)
 {
+	struct twl4030_codec_data *pdata = dev_get_platdata(codec->dev);
 	struct twl4030_priv *twl4030 = snd_soc_codec_get_drvdata(codec);
 
 	/* Reset registers to their chip default before leaving */
 	twl4030_reset_registers(codec);
 	twl4030_set_bias_level(codec, SND_SOC_BIAS_OFF);
 	kfree(twl4030);
+
+	if (pdata && pdata->hs_extmute && gpio_is_valid(pdata->hs_extmute_gpio))
+		gpio_free(pdata->hs_extmute_gpio);
+
 	return 0;
 }
 
-- 
1.7.8.6

