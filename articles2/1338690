Path: news.gmane.org!not-for-mail
From: Palmer Cox <p@lmercox.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH 5/6] cpupower tools: Fix malloc of cpu_info structure
Date: Mon,  6 Aug 2012 22:24:47 -0400
Lines: 91
Approved: news@gmane.org
Message-ID: <1344306288-12369-6-git-send-email-p@lmercox.com>
References: <1344306288-12369-1-git-send-email-p@lmercox.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344306461 20202 80.91.229.3 (7 Aug 2012 02:27:41 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 02:27:41 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, Palmer Cox <p@lmercox.com>
To: Dominik Brodowski <linux@dominikbrodowski.net>,
	Thomas Renninger <trenn@suse.de>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Aug 07 04:27:32 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SyZW7-0007oQ-3y
	for glk-linux-kernel-3@plane.gmane.org; Tue, 07 Aug 2012 04:27:31 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932568Ab2HGC1V (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Mon, 6 Aug 2012 22:27:21 -0400
Original-Received: from mail-qc0-f174.google.com ([209.85.216.174]:55164 "EHLO
	mail-qc0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932243Ab2HGCZ1 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 6 Aug 2012 22:25:27 -0400
Original-Received: by qcro28 with SMTP id o28so2174731qcr.19
        for <linux-kernel@vger.kernel.org>; Mon, 06 Aug 2012 19:25:27 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :x-gm-message-state;
        bh=Pe4zvgNY/zFJoZb5l63/ghA1mkc2oiOR9QG7vdtSV2I=;
        b=T9lyNSO6wQnXmpVCn3Dsbcg5Yy+r7TdS/8QCvWdTpOP0sgv4JrfdOKxVXtZFU7AC3M
         4IMEWGXiH1u+6gdMgJkDyMA3mlYiXrhutEjL1OAy57YkkeDL7NZka7k0khQ4RTE9TAtZ
         cmII9tqwSfKjwsh5QqYOtWsppaQnDtxSDWRMRtt9w8u1GjCKLwTDkpLf848F2roulYe4
         fM83sO6TrLjM5gbdBKU/CJYIea8dD7gljp3PjfHj6EOKaylHOkNcdKEtjlZ4mOAKr6kO
         I7dIYUfz/r+lCTlRbgRFEG+gFkzd6EVBJ+mqTOLUD4ozfRT8ONt9820xe7RmFAopa5Dg
         7JMw==
Original-Received: by 10.229.136.208 with SMTP id s16mr6407462qct.112.1344306327213;
        Mon, 06 Aug 2012 19:25:27 -0700 (PDT)
Original-Received: from enix-thinkpad-t400.cable.rcn.com (216-164-56-124.c3-0.slvr-ubr1.lnh-slvr.md.cable.rcn.com. [216.164.56.124])
        by mx.google.com with ESMTPS id gq10sm15431365qab.18.2012.08.06.19.25.26
        (version=TLSv1/SSLv3 cipher=OTHER);
        Mon, 06 Aug 2012 19:25:26 -0700 (PDT)
X-Mailer: git-send-email 1.7.9.5
In-Reply-To: <1344306288-12369-1-git-send-email-p@lmercox.com>
X-Gm-Message-State: ALoCoQmJahhPQHNkAFQXiYOHqkb1GgcLNAKKiNE0tMm4ujOVFh/BbsRlWUtwQNbbElddMHcfhv8X
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1338690
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338690>

The cpu_info member of cpupower_topology was being declared as an unnamed
structure. This member was then being malloced using the size of the
parent cpupower_topology * the number of cpus. This works
because cpu_info is smaller than cpupower_topology. However, there is
no guarantee that will always be the case. Making cpu_info its own
top level structure (named cpuid_core_info) allows for mallocing the actual
size of this structure. This also lets us get rid of a redefinition of
the structure in topology.c with slightly different field names.
---
 tools/power/cpupower/utils/helpers/helpers.h  |   17 +++++++++--------
 tools/power/cpupower/utils/helpers/topology.c |   14 +++-----------
 2 files changed, 12 insertions(+), 19 deletions(-)

diff --git a/tools/power/cpupower/utils/helpers/helpers.h b/tools/power/cpupower/utils/helpers/helpers.h
index 2eb584c..f84985f 100644
--- a/tools/power/cpupower/utils/helpers/helpers.h
+++ b/tools/power/cpupower/utils/helpers/helpers.h
@@ -92,6 +92,14 @@ extern int get_cpu_info(unsigned int cpu, struct cpupower_cpu_info *cpu_info);
 extern struct cpupower_cpu_info cpupower_cpu_info;
 /* cpuid and cpuinfo helpers  **************************/
 
+struct cpuid_core_info {
+	int pkg;
+	int core;
+	int cpu;
+
+	/* flags */
+	unsigned int is_online:1;
+};
 
 /* CPU topology/hierarchy parsing ******************/
 struct cpupower_topology {
@@ -101,14 +109,7 @@ struct cpupower_topology {
 	unsigned int threads; /* per core */
 
 	/* Array gets mallocated with cores entries, holding per core info */
-	struct {
-		int pkg;
-		int core;
-		int cpu;
-
-		/* flags */
-		unsigned int is_online:1;
-	} *core_info;
+	struct cpuid_core_info *core_info;
 };
 
 extern int get_cpu_topology(struct cpupower_topology *cpu_top);
diff --git a/tools/power/cpupower/utils/helpers/topology.c b/tools/power/cpupower/utils/helpers/topology.c
index 216f3e3..4e2b583 100644
--- a/tools/power/cpupower/utils/helpers/topology.c
+++ b/tools/power/cpupower/utils/helpers/topology.c
@@ -36,14 +36,6 @@ static int sysfs_topology_read_file(unsigned int cpu, const char *fname, int *re
 	return 0;
 }
 
-struct cpuid_core_info {
-	unsigned int pkg;
-	unsigned int thread;
-	unsigned int cpu;
-	/* flags */
-	unsigned int is_online:1;
-};
-
 static int __compare(const void *t1, const void *t2)
 {
 	struct cpuid_core_info *top1 = (struct cpuid_core_info *)t1;
@@ -52,9 +44,9 @@ static int __compare(const void *t1, const void *t2)
 		return -1;
 	else if (top1->pkg > top2->pkg)
 		return 1;
-	else if (top1->thread < top2->thread)
+	else if (top1->core < top2->core)
 		return -1;
-	else if (top1->thread > top2->thread)
+	else if (top1->core > top2->core)
 		return 1;
 	else if (top1->cpu < top2->cpu)
 		return -1;
@@ -74,7 +66,7 @@ int get_cpu_topology(struct cpupower_topology *cpu_top)
 {
 	int cpu, cpus = sysconf(_SC_NPROCESSORS_CONF);
 
-	cpu_top->core_info = malloc(sizeof(struct cpupower_topology) * cpus);
+	cpu_top->core_info = malloc(sizeof(struct cpuid_core_info) * cpus);
 	if (cpu_top->core_info == NULL)
 		return -ENOMEM;
 	cpu_top->pkgs = cpu_top->cores = 0;
-- 
1.7.9.5

