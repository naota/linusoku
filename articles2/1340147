Path: news.gmane.org!not-for-mail
From: Jiang Liu <liuj97@gmail.com>
Newsgroups: gmane.linux.kernel.pci,gmane.linux.kernel
Subject: Re: [RFC PATCH v1 00/22] introduce PCI bus lock to serialize PCI
 hotplug operations
Date: Wed, 08 Aug 2012 23:49:54 +0800
Lines: 75
Approved: news@gmane.org
Message-ID: <50228AA2.1090004@gmail.com>
References: <1344355862-2726-1-git-send-email-jiang.liu@huawei.com> <50215A5B.2020508@redhat.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344441025 14475 80.91.229.3 (8 Aug 2012 15:50:25 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 15:50:25 +0000 (UTC)
Cc: Bjorn Helgaas <bhelgaas@google.com>,
	Yinghai Lu <yinghai@kernel.org>,
	Greg KH <gregkh@linuxfoundation.org>,
	Kenji Kaneshige <kaneshige.kenji@jp.fujitsu.com>,
	Taku Izumi <izumi.taku@jp.fujitsu.com>,
	"Rafael J . Wysocki" <rjw@sisk.pl>,
	Yijing Wang <wangyijing@huawei.com>,
	Xinwei Hu <huxinwei@huawei.com>, linux-kernel@vger.kernel.org,
	linux-pci@vger.kernel.org
To: Don Dutile <ddutile@redhat.com>
Original-X-From: linux-pci-owner@vger.kernel.org Wed Aug 08 17:50:23 2012
Return-path: <linux-pci-owner@vger.kernel.org>
Envelope-to: glp-linux-pci@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-pci-owner@vger.kernel.org>)
	id 1Sz8Wb-0006vg-Mi
	for glp-linux-pci@plane.gmane.org; Wed, 08 Aug 2012 17:50:22 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932345Ab2HHPuU (ORCPT <rfc822;glp-linux-pci@m.gmane.org>);
	Wed, 8 Aug 2012 11:50:20 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:49293 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932217Ab2HHPuT (ORCPT
	<rfc822;linux-pci@vger.kernel.org>); Wed, 8 Aug 2012 11:50:19 -0400
Original-Received: by pbbrr13 with SMTP id rr13so1644174pbb.19
        for <multiple recipients>; Wed, 08 Aug 2012 08:50:18 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type:content-transfer-encoding;
        bh=nZBhJWocjvfbitQ4XUpGUmO4cjNQFrZVaV7Smx5/PFA=;
        b=xhr7cz8bdeFzGdMkJybqw47zf0Iklv+hRzgIyZv3msDPqN4FQJSpyg68shehBteFQ7
         uIZoCVlIEBX7V8+ShP7G8vjpnrpF2wqjhA+v9yHC43I0AwG0j97hnEGyRIuofJsgbOUn
         +K0L8ukUtsI8MMmQMAKSEFynl9I79t+uNpwp5Njdh5EZpcmbHrmpjaE68dmyewK8q/JI
         joeUIIHV0psR9Z7Z0nBeIvoh0VW/bIAq8iD+fsEexL5YWuGk9D6w6q7Lj3g1iWjGiphR
         GaD3VJuZDmqJE/plxvs4F/DYy1BehjRGASuSfBr/7TcgBE4ColIeleg6655JgqRBIRcA
         buYA==
Original-Received: by 10.68.232.232 with SMTP id tr8mr123485pbc.73.1344441018686;
        Wed, 08 Aug 2012 08:50:18 -0700 (PDT)
Original-Received: from [172.30.25.2] ([58.250.81.2])
        by mx.google.com with ESMTPS id oo6sm10188561pbc.22.2012.08.08.08.50.14
        (version=SSLv3 cipher=OTHER);
        Wed, 08 Aug 2012 08:50:17 -0700 (PDT)
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:14.0) Gecko/20120714 Thunderbird/14.0
In-Reply-To: <50215A5B.2020508@redhat.com>
Original-Sender: linux-pci-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-pci.vger.kernel.org>
X-Mailing-List: linux-pci@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel.pci:16992 gmane.linux.kernel:1340147
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340147>

On 08/08/2012 02:11 AM, Don Dutile wrote:
> On 08/07/2012 12:10 PM, Jiang Liu wrote:
>> From: Jiang Liu<liuj97@gmail.com>
>>
>> This is the second take to resolve race conditions when hot-plugging PCI
>> devices/host bridges. Instead of using a globla lock to serialize all hotplug
>> operations as in previous version, now we introduce a state machine and bit
>> lock mechanism for PCI buses to serialize hotplug operations. For discussions
>> related to previous version, please refer to:
>> http://comments.gmane.org/gmane.linux.kernel.pci/15007
>>
>> This patch-set is still in early stages, so sending it out just requesting
>> for comments. Any comments are welcomed, especially about whether it's the
>> right/suitable way to solve these race condition issues.
>>
>> patch 1-5:
>>     Preparing for coming PCI bus lock
>> patch 6-7:
>>     Core of the new PCI bus lock mechanism.
>> patch 8-13:
>>     Enhance PCI core to support PCI bus lock mechanism.
>> patch 14-18:
>>     Enhance several PCI hotplug drivers to use PCI bus lock to serialize
>>     hotplug operations.
>> patch 19-20:
>>     Enable PCI bus lock mechanism for x86 and IA64, still need to enable
>>     PCI bus lock for other archs.
>> patch 21-22:
>>     Cleanups for unsed code.
>>
>> There are multiple methods to trigger PCI hotplug requests/operations
>> concurrently, such as:
>> 1. Sysfs interfaces exported by the PCI core subsystem
>>     /sys/devices/pcissss:bb/ssss:bb:dd.f/.../remove
>>     /sys/devices/pcissss:bb/ssss:bb:dd.f/.../rescan
>>     /sys/devices/pcissss:bb/ssss:bb:dd.f/.../pci_bus/ssss:bb/rescan
>>     /sys/bus/pci/rescan
>> 2. Sysfs interfaces exported by the PCI hotplug subsystem
>>     /sys/bus/pci/slots/xx/power
>> 3. PCI hotplug events triggered by PCI Hotplug Controllers
>> 4. ACPI hotplug events for PCI host bridges
>> 5. Driver binding/unbinding events
>>     binding/unbinding pci drivers with SR-IOV support
>>
> 6. PCI reset
>    --> a PCIe device-level reset is done by KVM when it assigns a device
>        to a guest.  a PCI config-save before reset, and PCI config-restore after reset
>        is done in this case.
>    --> VF devices are interesting, since they are reset, then bound to
>        pci-stub driver.  when more than 1 VF is enabled in a PF,
>        and several device-assignments are done simultaneously, you
>        get a storm of reset (save/restore pci cfg space), and pci-stub binding
>        (pci cfg read for resource allocation/deallocation), and depending on
>        the hw design: an AER caused by the FLR reset -- not suppose to, but
>        hw has bugs too! ;-)
>    PCI locking is 'challenged' in the above scenario.
> 
>   So, I ask: have you tried your patch set doing something like:
>     a) modprobe an SRIOV device with > 1 vf enabled
>   you may also have to do:
>     b) while assigning another SRIOV device's VF to another KVM guest
> 
> Unfortunately, the PCI cfg-space locking, esp. on x86 (ok, I'll say it:
> damn, mutually exclusive, IO-port-based cfg registers), doesn't lend itself
> to this multi-task, dynamic PCI scenario.
> Much less complicated on linearly-mapped, PCI-mmconf-only accesses.
> 
> - Don
Hi Don,
	Thanks for your comments. Haven't done such tests for SR-IOV yet. We will
try to find some NICs with SR-IOV capability for testing and will send the result
to you once done.
	Regards!
	Gerry

