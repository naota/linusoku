Path: news.gmane.org!not-for-mail
From: Nicolas Pitre <nicolas.pitre@linaro.org>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: Re: [PATCH 01/22] ARM: add mechanism for late code patching
Date: Wed, 8 Aug 2012 01:56:41 -0400 (EDT)
Lines: 67
Approved: news@gmane.org
Message-ID: <alpine.LFD.2.02.1208080106500.5231@xanadu.home>
References: <1343775898-28345-1-git-send-email-cyril@ti.com> <1343775898-28345-2-git-send-email-cyril@ti.com> <alpine.LFD.2.02.1208040045360.5231@xanadu.home> <50219C45.7030601@ti.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: dough.gmane.org 1344405415 19288 80.91.229.3 (8 Aug 2012 05:56:55 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 05:56:55 +0000 (UTC)
Cc: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
	Arnd Bergmann <arnd@arndb.de>,
	Catalin Marinas <catalin.marinas@arm.com>,
	Russell King - ARM Linux <linux@arm.linux.org.uk>,
	Will Deacon <will.deacon@arm.com>
To: Cyril Chemparathy <cyril@ti.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 07:56:55 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SyzGI-0008V2-Cn
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 07:56:54 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932105Ab2HHF4q (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 01:56:46 -0400
Original-Received: from mail-qa0-f46.google.com ([209.85.216.46]:49021 "EHLO
	mail-qa0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755455Ab2HHF4p (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 01:56:45 -0400
Original-Received: by qadb17 with SMTP id b17so2245241qad.19
        for <linux-kernel@vger.kernel.org>; Tue, 07 Aug 2012 22:56:44 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:in-reply-to:message-id:references
         :user-agent:mime-version:content-type:x-gm-message-state;
        bh=z8JLkisJG1kklXmQcu3+UjGoeauP7FoCguBK5QTd5Zc=;
        b=d6jOlXmOjUcd/CnbjWLsPiyVLt2Mo+6Fd3HCJyiWVbx6+0yzlH3LcnYwyc3FBtZqaq
         mdHJ3iiBMvcpafnxrbP+H4vXmRr9z6t/ipz3tT3vdWXEUATwBzY4z9LGnIyIdAu+cUQL
         8dqak1fTmAdmH9YUSszHd/DCQ7GAlq+LKMw/xpW9J75ME7abf6P80VZ4eIdQ+0wf1kgK
         ISo8nq6Qh4fY/mQNx6REqeDVDo6YeqDyYbVavlma0M1VVxc/GhKHQCcivDq65yjFuZg7
         a93WFTR6fBEAj3vrkGpGTC7p8Qi8YlLYlp5XxFH/XF5gNLO1d5H6zXs1l1SqyE/PsDkK
         PjGQ==
Original-Received: by 10.229.136.201 with SMTP id s9mr8487383qct.61.1344405404212;
        Tue, 07 Aug 2012 22:56:44 -0700 (PDT)
Original-Received: from xanadu.home (modemcable149.196-201-24.mc.videotron.ca. [24.201.196.149])
        by mx.google.com with ESMTPS id co12sm18074501qab.20.2012.08.07.22.56.42
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 07 Aug 2012 22:56:43 -0700 (PDT)
In-Reply-To: <50219C45.7030601@ti.com>
User-Agent: Alpine 2.02 (LFD 1266 2009-07-14)
X-Gm-Message-State: ALoCoQmRQwbiOGIFc4GqlGf5dHXh0WoI5mgec8dMlZGJb6G4P3qwNSuItUBInI6CFd9bSkcF6kEi
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1339815 gmane.linux.ports.arm.kernel:180817
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1339815>

On Tue, 7 Aug 2012, Cyril Chemparathy wrote:

> Hi Nicolas,
> 
> On 8/4/2012 1:38 AM, Nicolas Pitre wrote:
> [...]
> > > extern unsigned __patch_table_begin, __patch_table_end;
> > 
> > You could use "exttern void __patch_table_begin" so those symbols don't
> > get any type that could be misused by mistake, while you still can take
> > their addresses.
> > 
> 
> Looks like we'll have to stick with a non-void type here.  The compiler throws
> a warning when we try to take the address of a void.

Ah, I see. Bummer.  This used not to be the case with older gcc 
versions.

> [...]
> > Did you verify with some test program that your patching routines do
> > produce the same opcodes as the assembled equivalent for all possible
> > shift values?  Especially for Thumb2 code which isn't as trivial to get
> > right as the ARM one.
> > 
> 
> We've refactored the patching code into separate functions as:
> 
> static int do_patch_imm8_arm(u32 insn, u32 imm, u32 *ninsn);
> static int do_patch_imm8_thumb(u32 insn, u32 imm, u32 *ninsn);
> 
> 
> With this, the following test code has been used to verify the generated
> instruction encoding:
> 
> u32 arm_check[] = {
> 	0xe2810041, 0xe2810082, 0xe2810f41, 0xe2810f82, 0xe2810e41,
> 	0xe2810e82, 0xe2810d41, 0xe2810d82, 0xe2810c41, 0xe2810c82,
> 	0xe2810b41, 0xe2810b82, 0xe2810a41, 0xe2810a82, 0xe2810941,
> 	0xe2810982, 0xe2810841, 0xe2810882, 0xe2810741, 0xe2810782,
> 	0xe2810641, 0xe2810682, 0xe2810541, 0xe2810582, 0xe2810441,
> };

Instead of using this array you could let the assembler do it for you 
like this:

asm (" \n\
	.arm \n\
arm_check: \n\
        .set shft, 0 \n\
        .rep 12 \n\
        add     r1, r2, #0x81 << \shft \n\
        .set shft, \shft + 2 \n\
        .endr \n\
");

> u32 thumb_check[] = {
> 	0xf1010081, 0xf5017081, 0xf5017001, 0xf5016081, 0xf5016001,
> 	0xf5015081, 0xf5015001, 0xf5014081, 0xf5014001, 0xf5013081,
> 	0xf5013001, 0xf5012081, 0xf5012001, 0xf5011081, 0xf5011001,
> 	0xf5010081, 0xf5010001, 0xf1017081, 0xf1017001, 0xf1016081,
> 	0xf1016001, 0xf1015081, 0xf1015001, 0xf1014081, 0xf1014001,

Same idea here.


Nicolas
