Path: news.gmane.org!not-for-mail
From: Hanjun Guo <guohanjun@huawei.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [RFC PATCH] mm: introduce N_LRU_MEMORY to distinguish between
 normal and movable memory
Date: Fri, 10 Aug 2012 16:48:28 +0800
Lines: 86
Approved: news@gmane.org
Message-ID: <5024CADC.1010202@huawei.com>
References: <1344482788-4984-1-git-send-email-guohanjun@huawei.com> <50233EF5.3050605@huawei.com> <alpine.DEB.2.02.1208090900450.15909@greybox.home>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-Trace: dough.gmane.org 1344588630 15345 80.91.229.3 (10 Aug 2012 08:50:30 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 10 Aug 2012 08:50:30 +0000 (UTC)
Cc: Wu Jianguo <wujianguo@huawei.com>, Jiang Liu <jiang.liu@huawei.com>,
        Tony
 Luck <tony.luck@intel.com>, Pekka Enberg <penberg@kernel.org>,
        Matt Mackall
	<mpm@selenic.com>, Mel Gorman <mgorman@suse.de>,
        Yinghai Lu
	<yinghai@kernel.org>,
        KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>,
        KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>,
        David Rientjes
	<rientjes@google.com>,
        Minchan Kim <minchan@kernel.org>, Keping Chen
	<chenkeping@huawei.com>,
        <linux-mm@kvack.org>, <linux-kernel@vger.kernel.org>,
        Jiang Liu <liuj97@gmail.com>
To: "Christoph Lameter (Open Source)" <cl@linux.com>
Original-X-From: owner-linux-mm@kvack.org Fri Aug 10 10:50:27 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SzkvK-0000mA-H8
	for glkm-linux-mm-2@m.gmane.org; Fri, 10 Aug 2012 10:50:27 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 0A3866B0044; Fri, 10 Aug 2012 04:50:25 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id DB5D96B0062; Fri, 10 Aug 2012 04:50:24 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 8A26C6B0068; Fri, 10 Aug 2012 04:50:24 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx150.postini.com [74.125.245.150])
	by kanga.kvack.org (Postfix) with SMTP id 270506B0044
	for <linux-mm@kvack.org>; Fri, 10 Aug 2012 04:50:23 -0400 (EDT)
Original-Received: from szxga01-in.huawei.com ([119.145.14.64]) by na3sys010amx150.postini.com ([74.125.244.10]) with SMTP;
	Fri, 10 Aug 2012 08:50:23 GMT
Original-Received: from 172.24.2.119 (EHLO szxeml211-edg.china.huawei.com) ([172.24.2.119])
	by szxrg01-dlp.huawei.com (MOS 4.3.4-GA FastPath queued)
	with ESMTP id AMZ46147;
	Fri, 10 Aug 2012 16:49:53 +0800 (CST)
Original-Received: from SZXEML415-HUB.china.huawei.com (10.82.67.154) by
 szxeml211-edg.china.huawei.com (172.24.2.182) with Microsoft SMTP Server
 (TLS) id 14.1.323.3; Fri, 10 Aug 2012 16:48:52 +0800
Original-Received: from [127.0.0.1] (10.135.69.25) by szxeml415-hub.china.huawei.com
 (10.82.67.154) with Microsoft SMTP Server id 14.1.323.3; Fri, 10 Aug 2012
 16:48:33 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20120713 Thunderbird/14.0
In-Reply-To: <alpine.DEB.2.02.1208090900450.15909@greybox.home>
X-Originating-IP: [10.135.69.25]
X-CFilter-Loop: Reflected
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:13.77588/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 0 skipped:not-enabled
X-pstn-settings: 3 (1.0000:1.0000) s cv gt3 gt2 gt1 r p m c 
X-pstn-addresses: from <guohanjun@huawei.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83987 gmane.linux.kernel:1341196
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1341196>

On 2012/8/9 22:06, Christoph Lameter (Open Source) wrote:
> On Thu, 9 Aug 2012, Hanjun Guo wrote:
>=20
>> Now, We have node masks for both N_NORMAL_MEMORY and
>> N_HIGH_MEMORY to distinguish between normal and highmem on platforms s=
uch as x86.
>> But we still don't have such a mechanism to distinguish between "norma=
l" and "movable"
>> memory.
>=20
> What is the exact difference that you want to establish?

Hi Christoph,
    Thanks for your comments very much!

We want to identify the node only has ZONE_MOVABLE memory.
for example:
	node 0: ZONE_DMA, ZONE_DMA32, ZONE_NORMAL--> N_LRU_MEMORY, N_NORMAL_MEMO=
RY
	node 1: ZONE_MOVABLE			 --> N_LRU_MEMORY
thus, in SLUB allocator, will not allocate memory control structures for =
node1.

static int init_kmem_cache_nodes(struct kmem_cache *s)
{
	int node;

	for_each_node_state(node, N_NORMAL_MEMORY) { /* <-- skip nodes only has =
ZONE_MOVABLE memory */
		struct kmem_cache_node *n;

		if (slab_state =3D=3D DOWN) {
			early_kmem_cache_node_alloc(node);
			continue;
		}
		n =3D kmem_cache_alloc_node(kmem_cache_node,
						GFP_KERNEL, node);

		...
	}
	...
}

>=20
>> As suggested by Christoph Lameter in threads
>> http://marc.info/?l=3Dlinux-mm&m=3D134323057602484&w=3D2, we introduce=
 N_LRU_MEMORY to
>> distinguish between "normal" and "movable" memory.
>=20
> Well seems that I am having second thoughts about this. While is it tru=
e
> that current page migration can only move pages on the LRU there are
> already various mechanisms proposed and implemented that can move pages
> not on the LRU (like page table pages). Not sure if this is still a use=
ful
> distinction to make. There is also the issue that segments from
> "N_LRU_MEMORY" may be allocated and then become not movable anymore.

Some kernel pages=EF=BC=8Clike memmap pages=EF=BC=8Cusemap pages are stil=
l can not be
migrated.

>=20
> For the slab case that you want to solve here you will need to know if =
the
> node has *only* movable memory and will never have any ZONE_NORMAL memo=
ry.
> If so then memory control structures for allocators that do not allow
> movable memory will not need to be allocated for these node. The node c=
an
> be excluded from handling.

I think this is what we are trying to do in this patch.
did I miss something?

>=20
> .
>=20


--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=3Dmailto:"dont@kvack.org"> email@kvack.org </a>

