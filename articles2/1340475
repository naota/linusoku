Path: news.gmane.org!not-for-mail
From: Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
Newsgroups: gmane.linux.kernel.bcache.devel,gmane.linux.kernel,gmane.linux.kernel.device-mapper.devel,gmane.linux.kernel.drbd.devel
Subject: Re: [PATCH v5 05/12] block: Kill bi_destructor
Date: Thu, 9 Aug 2012 02:12:14 -0400
Lines: 28
Approved: news@gmane.org
Message-ID: <20120809061214.GA9128@dhcp-172-18-216-138.mtv.corp.google.com>
References: <1344290921-25154-1-git-send-email-koverstreet@google.com>
 <1344290921-25154-6-git-send-email-koverstreet@google.com>
 <20120808222223.GD6983@dhcp-172-17-108-109.mtv.corp.google.com>
 <20120809002154.GE7262@moria.home.lan>
 <20120809060517.GB2845@dhcp-172-17-108-109.mtv.corp.google.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1344492739 30158 80.91.229.3 (9 Aug 2012 06:12:19 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 9 Aug 2012 06:12:19 +0000 (UTC)
Cc: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org, linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org,
	dm-devel-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, axboe-tSWWG44O7X1aa/9Udqfwiw@public.gmane.org, agk-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org,
	neilb-l3A5Bk7waGM@public.gmane.org, drbd-dev-cunTk1MwBs8qoQakbn7OcQ@public.gmane.org, vgoyal-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org,
	mpatocka-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, sage-BnTBU8nroG7k1uMJSBkQmQ@public.gmane.org, yehuda-L5o5AL9CYN0tUFlbccrkMA@public.gmane.org
To: Tejun Heo <tj-DgEjT+Ai2ygdnm+yROfE0A@public.gmane.org>
Original-X-From: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org Thu Aug 09 08:12:18 2012
Return-path: <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>
Envelope-to: glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>)
	id 1SzLyh-00027d-3M
	for glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org; Thu, 09 Aug 2012 08:12:15 +0200
Original-Received: (majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org) by vger.kernel.org via listexpand
	id S1754482Ab2HIGMO (ORCPT <rfc822;glbd-linux-bcache@m.gmane.org>);
	Thu, 9 Aug 2012 02:12:14 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:34124 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754407Ab2HIGMM (ORCPT
	<rfc822;linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>);
	Thu, 9 Aug 2012 02:12:12 -0400
Original-Received: by pbbrr13 with SMTP id rr13so368680pbb.19
        for <linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>; Wed, 08 Aug 2012 23:12:12 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent;
        bh=Caur3JntGy1u4ED2o7NJQDo1bbeFjfbbgdhd5nJT+8U=;
        b=Kns04nuMVTW1YqwuXe49CW99GaSdUDSocDfTzD13aKQKTpSYFHxqjO6yPXMz67QlCi
         UU1h70L2k7kvknGmc2UPhDCVEac78Mn4onASUEVOxyt4l0F732xTMFjAgpAGQ+r3QsH4
         j2oCXc8peqb8QlvhsXXPdsGzyMMtkhrx3JPnqDNQ6ljAoJC2ZJrNpXLynZDyUf2Y91zj
         J+sTjbvfnQV6UoENQflL3pseHSbKAF+2ujXsz5CCbhEImP267Bwwp0FtTy/Q6H7A0UHK
         2HzPPvEDxvjeGNSBJnEzF8n8ABKF3AiiIn38l28Ev0aOiqN/Y4Cq4v7uayGhQVXJjQ97
         D1iw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-type:content-disposition:in-reply-to:user-agent
         :x-gm-message-state;
        bh=Caur3JntGy1u4ED2o7NJQDo1bbeFjfbbgdhd5nJT+8U=;
        b=JikZH1fcy4D2wK81TudsrNDj5BgnXN197bp/j7q7aNCd5y+BlrnboOp8+UYGL3y1kg
         MwwFdEqoohB4983Ss9YHDlaOjWpwYNjpPnuW/fHH/93186cIWn6FSd0Y2TUCJT8ZSOcE
         NSjjLQw6owosmVc1qyPrbCKqs1b2yHQ6MuW9dDBNOIoxVTtARV9r+uAEiMfAjOcY52YU
         71N96+SUl1iLTesvvcy9bF6ewfHQIHY8IsfduwblGDz9q+08/u58mSFlhdrDMX462xcf
         4aSVEJ1elJGURtzCOHDPDs+gu76XfDJ6mK2TbycDEwX14L73XjWgGyfbfX1AiQeaxo5g
         JzOQ==
Original-Received: by 10.68.221.10 with SMTP id qa10mr1332882pbc.154.1344492732430;
        Wed, 08 Aug 2012 23:12:12 -0700 (PDT)
Original-Received: by 10.68.221.10 with SMTP id qa10mr1332849pbc.154.1344492732212;
        Wed, 08 Aug 2012 23:12:12 -0700 (PDT)
Original-Received: from dhcp-172-18-216-138.mtv.corp.google.com (c-67-188-232-164.hsd1.ca.comcast.net. [67.188.232.164])
        by mx.google.com with ESMTPS id oj8sm478369pbb.54.2012.08.08.23.12.10
        (version=SSLv3 cipher=OTHER);
        Wed, 08 Aug 2012 23:12:11 -0700 (PDT)
Content-Disposition: inline
In-Reply-To: <20120809060517.GB2845-RcKxWJ4Cfj1J2suj2OqeGauc2jM2gXBXkQQo+JxHRPFibQn6LdNjmg@public.gmane.org>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Gm-Message-State: ALoCoQlL7pwPW5cPU2qXPVes+2qduxSuE/cMf7/BKkjCLev+pA77CqccrVvWi5SvbUX1lphv8/sRAS+qo2QTFraMElilm2iJnSqidcNCeN+d3a/tVHq55gad9PjRfOVAzY5s4ZhJ1/Iod55DjVJVH39SnsTV7SVWN+3Z139xuDa9P+lJRGII1CAb+YJ8WOwMT3qxo5gPqSeveanouoTs7Md7on7kBV/YOA==
Original-Sender: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Precedence: bulk
List-ID: <linux-bcache.vger.kernel.org>
X-Mailing-List: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Xref: news.gmane.org gmane.linux.kernel.bcache.devel:719 gmane.linux.kernel:1340475 gmane.linux.kernel.device-mapper.devel:16535 gmane.linux.kernel.drbd.devel:2100
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340475>

On Wed, Aug 08, 2012 at 11:05:17PM -0700, Tejun Heo wrote:
> Hello,
> 
> On Wed, Aug 08, 2012 at 05:21:54PM -0700, Kent Overstreet wrote:
> > > What's wrong with good ol' NULL?
> > 
> > If it's NULL, we can't distinguish between bios where that field wasn't
> > set (i.e. bios that were statically allocated somewhere) from bios that
> > were allocated by bio_kmalloc().
> > 
> > It's just there to make debugging easier - if bi_cnt goes to 0 on a bio
> > where it shouldn't we'll catch it at the BUG_ON() in bio_free() instead
> > of kfreeing a bad pointer.
> 
> I fail to see how that improves anything.  slab will complain clearly
> if it gets passed in a pointer to static area.  The benefit is
> imaginery.  If there's no bioset, it's NULL.  Let's please keep things
> usual.

But if it's a pointer to heap allocated memory, but the bio was embedded
in another struct? I've seen a fair number of instances of that (md, off
the top of my head).

If you're sure that in a normal config the slab allocator is going to
complain right away and not corrupt itself, fine. But I've been bitten
way too hard by bugs that could've been caught right away by a simple
assert and instead I had to spend hours backtracking, and the block
layer is _rife_ with that kind of thing.
