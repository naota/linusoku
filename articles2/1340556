Path: news.gmane.org!not-for-mail
From: Shaohua Li <shli@kernel.org>
Newsgroups: gmane.linux.kernel
Subject: Re: Re: [RFC PATCH] block:Fix some problems about handling plug in blk_queue_bio().
Date: Thu, 9 Aug 2012 16:50:10 +0800
Lines: 41
Approved: news@gmane.org
Message-ID: <CANejiEWk-TA_vdEwL2CEW5wgjz-dJAkQTxQ0OuUwto1MsdEQVQ@mail.gmail.com>
References: <201208081005308597351@gmail.com>
	<CANejiEXdHaqtXuR47QRimRNcvjxtUn8__7MK5XwW2t658hz=3g@mail.gmail.com>
	<201208081335333287528@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344502269 5770 80.91.229.3 (9 Aug 2012 08:51:09 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 9 Aug 2012 08:51:09 +0000 (UTC)
Cc: axboe <axboe@kernel.dk>,
	linux-kernel <linux-kernel@vger.kernel.org>
To: Jianpeng Ma <majianpeng@gmail.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 09 10:51:08 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzOSP-00043P-EY
	for glk-linux-kernel-3@plane.gmane.org; Thu, 09 Aug 2012 10:51:05 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757017Ab2HIIu5 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 9 Aug 2012 04:50:57 -0400
Original-Received: from mail-ee0-f46.google.com ([74.125.83.46]:33201 "EHLO
	mail-ee0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756111Ab2HIIuM (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 9 Aug 2012 04:50:12 -0400
Original-Received: by eeil10 with SMTP id l10so61118eei.19
        for <linux-kernel@vger.kernel.org>; Thu, 09 Aug 2012 01:50:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type;
        bh=zS6vKJvUfI83/ifaJD39HUT/npPlzEWf3l5sLwybuuA=;
        b=Wg4JZ4wGBUz7hRMdApXsMzPESz811EdMeqkHan3qTt96kHZYPiMot62qUYSKT2OBku
         uFgZ/9eWG0WlcUlnA/jYVTOmEaEJdItX0nFlbVLEyhgVkwsqq3UVsVSMtCB2vSJhPBm7
         +spVTCXnVN3YmT1oCCR3luz4+3L9uefxgShRCN37ImPlVaT9R6Ki245ye5Owpce/Qcqr
         xB/WpItqI6+IuSioZ3LjHUB6lpXWugMbjxuhtYS7277txe6vGjWwIxWGv/WV1RrL3N5L
         JyFP7XVJOXcJJUpH65CnkIFpXp1plEbWpIbhKgR61jZSRylbsjP7hoL7d7Kqh1MSE8S6
         GIxQ==
Original-Received: by 10.14.198.200 with SMTP id v48mr26721196een.3.1344502210503; Thu,
 09 Aug 2012 01:50:10 -0700 (PDT)
Original-Received: by 10.14.209.137 with HTTP; Thu, 9 Aug 2012 01:50:10 -0700 (PDT)
In-Reply-To: <201208081335333287528@gmail.com>
X-Google-Sender-Auth: REvW0PvslTtd3_KdZ1fZg0_en3M
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340556
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340556>

2012/8/8 Jianpeng Ma <majianpeng@gmail.com>:
> On 2012-08-08 11:06 Shaohua Li <shli@kernel.org> Wrote:
>>2012/8/8 Jianpeng Ma <majianpeng@gmail.com>:
>>> I think there are three problems about handling plug in blk_queue_bio():
>>> 1:if request_count >= BLK_MAX_REQUEST_COUNT, avoid unnecessary plug->should_sort judge.
>>this makes sense, though not a big deal, nice to fix it.
> Thanks
>>
>>> 2:Only two device can trace plug.
>>I didn't get the point, can you have more details?
>
>>>if (plug) {
>>>              /*
>>>               * If this is the first request added after a plug, fire
>>>               * of a plug trace. If others have been added before, check
>>>               * if we have multiple devices in this plug. If so, make a
>>>               * note to sort the list before dispatch.
>>>               */
>>>              if (list_empty(&plug->list))
>>>                      trace_block_plug(q);
>>>              else {
>>>                      if (!plug->should_sort) {
>>>                              struct request *__rq;
>
>>>                              __rq = list_entry_rq(plug->list.prev);
>>>                              if (__rq->q != q)
>>>                                      plug->should_sort = 1;
>>>                      }
>>>                      if (request_count >= BLK_MAX_REQUEST_COUNT) {
>>>                              blk_flush_plug_list(plug, false);
>>>                              trace_block_plug(q);
> The code only trace two point;
> A:      list_empty(&plug->list)
> B:      request_count >= BLK_MAX_REQUEST_COUNT). it's the same like A which plug->list is empty.
> Suppose:
> 1;reqA-deviceA firstly come, it will call trace_block_plug because the list_empty(plug->list) is true.
> 2:reqB-deviceB comed, attempt_plug_merge will failed because not deviceB-request-queue.But it'll not to call trace_block_plug.
>
> But call blk_flush_plug_list,it will trace_block_unplug all request_queue.

ok, this is true. please send a new patch for the item 1&2 then.
