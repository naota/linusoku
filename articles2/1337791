Path: news.gmane.org!not-for-mail
From: eshink@gmail.com
Newsgroups: gmane.linux.kernel,gmane.linux.file-systems
Subject: [PATCH 2/4] fs: Make core dump functionality optional
Date: Sun,  5 Aug 2012 01:28:18 -0700
Lines: 121
Approved: news@gmane.org
Message-ID: <1344155300-10432-2-git-send-email-eshink@gmail.com>
References: <1344027800-8270-1-git-send-email-eshink@gmail.com>
 <1344155300-10432-1-git-send-email-eshink@gmail.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344155525 22801 80.91.229.3 (5 Aug 2012 08:32:05 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 5 Aug 2012 08:32:05 +0000 (UTC)
Cc: Alex <eshink@gmail.com>
To: Ingo Molnar <mingo@kernel.org>,
	Andrew Morton <akpm@linux-foundation.org>,
	Alexander Viro <viro@zeniv.linux.org.uk>,
	Josh Triplett <josh@joshtriplett.org>,
	Alex Kelly <alex.page.kelly@gmail.com>,
	Heiko Carstens <heiko.carstens@de.ibm.com>,
	"Eric W. Biederman" <ebiederm@xmission.com>,
	Serge Hallyn <serge.hallyn@canonical.com>,
	"Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
	Kees Cook <keescook@chromium.org>,
	linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Sun Aug 05 10:32:03 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SxwFm-0006jJ-4Z
	for glk-linux-kernel-3@plane.gmane.org; Sun, 05 Aug 2012 10:32:02 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754197Ab2HEIbs (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sun, 5 Aug 2012 04:31:48 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:33326 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752817Ab2HEIbm (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 5 Aug 2012 04:31:42 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rr13so840672pbb.19
        for <multiple recipients>; Sun, 05 Aug 2012 01:31:42 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references;
        bh=AMQlrLFuOPxEfot9IGrPKpBlL7fD2VSI/0tYK1lbIEQ=;
        b=fUwkKp7JiYxEv7ttGQ3MU6dyUiiEHvA8HM+lqn/NZr/7hcafwi3yIR49NMeqloRCm8
         C/OeEWp2bDuSWrjThPbiLnYfT6bLW4t0G0VZ13rneWw11oPd5C/hdUrR7kJBve2jPe0W
         prP8epVkRgf9WAl6JdYyDvlJOCn/dZ45mu3U4XoMNv/iW3ocUaJT0KIaMe9F0P5diGRD
         rYtLrE0S90HiPIHtm1Q57jetHbve87pMD2DxUQ0JZ9iHhfyAqcoI4dutxX0IMGfOcThT
         FeuZIDf0ImfcGUcaCn4X18MtvACvEDrLTkJKBkcCWazm5HhuuueV77kv/5xNH2rGaBxf
         gEFg==
Original-Received: by 10.66.76.231 with SMTP id n7mr10156219paw.68.1344155502086;
        Sun, 05 Aug 2012 01:31:42 -0700 (PDT)
Original-Received: from localhost.localdomain (c-67-170-143-84.hsd1.or.comcast.net. [67.170.143.84])
        by mx.google.com with ESMTPS id pq1sm6508881pbb.3.2012.08.05.01.31.40
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 05 Aug 2012 01:31:41 -0700 (PDT)
X-Mailer: git-send-email 1.7.11.2
In-Reply-To: <1344155300-10432-1-git-send-email-eshink@gmail.com>
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337791 gmane.linux.file-systems:66420
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337791>

From: Alex <eshink@gmail.com>

Adds an expert Kconfig option, CONFIG_COREDUMP, which allows disabling of core dump.
This saves approximately 2.6k in the compiled kernel, and complements CONFIG_ELF_CORE,
which now depends on it.

CONFIG_COREDUMP also disables coredump-related sysctls, except for suid_dumpable and
related functions, which are necessary for ptrace.

Signed-off-by: Alex Kelly <alex.page.kelly@gmail.com>
Reviewed-by: Josh Triplett <josh@joshtriplett.org>
---
 fs/Kconfig.binfmt       | 8 ++++++++
 fs/Makefile             | 3 ++-
 include/linux/binfmts.h | 4 ++++
 init/Kconfig            | 1 +
 kernel/sysctl.c         | 6 +++++-
 5 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/fs/Kconfig.binfmt b/fs/Kconfig.binfmt
index 0225742..0efd152 100644
--- a/fs/Kconfig.binfmt
+++ b/fs/Kconfig.binfmt
@@ -164,3 +164,11 @@ config BINFMT_MISC
 	  You may say M here for module support and later load the module when
 	  you have use for it; the module is called binfmt_misc. If you
 	  don't know what to answer at this point, say Y.
+
+config COREDUMP
+	bool "Enable core dump support" if EXPERT
+	default y
+	help
+	  This option enables support for performing core dumps. You almost
+	  certainly want to say Y here. Not necessary on systems that never
+	  need debugging or only ever run flawless code.
diff --git a/fs/Makefile b/fs/Makefile
index 8938f82..1d7af79 100644
--- a/fs/Makefile
+++ b/fs/Makefile
@@ -11,7 +11,7 @@ obj-y :=	open.o read_write.o file_table.o super.o \
 		attr.o bad_inode.o file.o filesystems.o namespace.o \
 		seq_file.o xattr.o libfs.o fs-writeback.o \
 		pnode.o drop_caches.o splice.o sync.o utimes.o \
-		stack.o fs_struct.o statfs.o coredump.o
+		stack.o fs_struct.o statfs.o
 
 ifeq ($(CONFIG_BLOCK),y)
 obj-y +=	buffer.o bio.o block_dev.o direct-io.o mpage.o ioprio.o
@@ -48,6 +48,7 @@ obj-$(CONFIG_FS_MBCACHE)	+= mbcache.o
 obj-$(CONFIG_FS_POSIX_ACL)	+= posix_acl.o xattr_acl.o
 obj-$(CONFIG_NFS_COMMON)	+= nfs_common/
 obj-$(CONFIG_GENERIC_ACL)	+= generic_acl.o
+obj-$(CONFIG_COREDUMP)		+= coredump.o
 
 obj-$(CONFIG_FHANDLE)		+= fhandle.o
 
diff --git a/include/linux/binfmts.h b/include/linux/binfmts.h
index 366422b..00e2e89 100644
--- a/include/linux/binfmts.h
+++ b/include/linux/binfmts.h
@@ -132,7 +132,11 @@ extern int copy_strings_kernel(int argc, const char *const *argv,
 			       struct linux_binprm *bprm);
 extern int prepare_bprm_creds(struct linux_binprm *bprm);
 extern void install_exec_creds(struct linux_binprm *bprm);
+#ifdef CONFIG_COREDUMP
 extern void do_coredump(long signr, int exit_code, struct pt_regs *regs);
+#else
+static inline void do_coredump(long signr, int exit_code, struct pt_regs *regs) {}
+#endif
 extern void set_binfmt(struct linux_binfmt *new);
 extern void free_bprm(struct linux_binprm *);
 
diff --git a/init/Kconfig b/init/Kconfig
index af6c7f8..0e75056 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1230,6 +1230,7 @@ config BUG
           Just say Y.
 
 config ELF_CORE
+	depends on COREDUMP
 	default y
 	bool "Enable ELF core dumps" if EXPERT
 	help
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index 87174ef..af57e84 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -97,10 +97,12 @@
 extern int sysctl_overcommit_memory;
 extern int sysctl_overcommit_ratio;
 extern int max_threads;
-extern int core_uses_pid;
 extern int suid_dumpable;
+#ifdef CONFIG_COREDUMP
+extern int core_uses_pid;
 extern char core_pattern[];
 extern unsigned int core_pipe_limit;
+#endif
 extern int pid_max;
 extern int min_free_kbytes;
 extern int pid_max_min, pid_max_max;
@@ -404,6 +406,7 @@ static struct ctl_table kern_table[] = {
 		.mode		= 0644,
 		.proc_handler	= proc_dointvec,
 	},
+#ifdef CONFIG_COREDUMP
 	{
 		.procname	= "core_uses_pid",
 		.data		= &core_uses_pid,
@@ -425,6 +428,7 @@ static struct ctl_table kern_table[] = {
 		.mode		= 0644,
 		.proc_handler	= proc_dointvec,
 	},
+#endif
 #ifdef CONFIG_PROC_SYSCTL
 	{
 		.procname	= "tainted",
-- 
1.7.11.2

