Path: news.gmane.org!not-for-mail
From: Oleg Nesterov <oleg@redhat.com>
Newsgroups: gmane.comp.gdb.patches,gmane.linux.kernel
Subject: Re: [RFC 5/5] uprobes: add global breakpoints
Date: Wed, 8 Aug 2012 15:14:57 +0200
Lines: 93
Approved: news@gmane.org
Message-ID: <20120808131457.GA5309@redhat.com>
References: <1344355952-2382-1-git-send-email-bigeasy@linutronix.de> <1344355952-2382-6-git-send-email-bigeasy@linutronix.de>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit
X-Trace: dough.gmane.org 1344431964 29124 80.91.229.3 (8 Aug 2012 13:19:24 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 13:19:24 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, x86@kernel.org,        Peter Zijlstra <a.p.zijlstra@chello.nl>,        Arnaldo Carvalho de Melo <acme@ghostprotocols.net>,        Roland McGrath <roland@redhat.com>,        Srikar Dronamraju <srikar@linux.vnet.ibm.com>,        Ananth N Mavinakaynahalli <ananth@in.ibm.com>, stan_shebs@mentor.com,        gdb-patches@sourceware.org
To: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Original-X-From: gdb-patches-return-93624-gdb-gdb-patches=m.gmane.org@sourceware.org Wed Aug 08 15:19:22 2012
Return-path: <gdb-patches-return-93624-gdb-gdb-patches=m.gmane.org@sourceware.org>
Envelope-to: gdb-gdb-patches@plane.gmane.org
Original-Received: from server1.sourceware.org ([209.132.180.131] helo=sourceware.org)
	by plane.gmane.org with smtp (Exim 4.69)
	(envelope-from <gdb-patches-return-93624-gdb-gdb-patches=m.gmane.org@sourceware.org>)
	id 1Sz6AQ-0000Yd-3j
	for gdb-gdb-patches@plane.gmane.org; Wed, 08 Aug 2012 15:19:18 +0200
Comment: DKIM? See http://www.dkim.org
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed;
	d=sourceware.org; s=default; x=1345036757; h=Comment:
	DomainKey-Signature:Received:Received:Received:Received:Received:
	Received:Date:From:To:Cc:Subject:Message-ID:References:
	MIME-Version:Content-Type:Content-Disposition:
	Content-Transfer-Encoding:In-Reply-To:User-Agent:Mailing-List:
	Precedence:List-Id:List-Unsubscribe:List-Subscribe:List-Archive:
	List-Post:List-Help:Sender:Delivered-To; bh=94O3Gfjk8i3MePKVH1Vh
	tTS2r98=; b=RhlNWx1kQ5GB7pvZG4CQEMq5N/Viq05uNrcuNBqxWYp72n59d7xV
	1Oi1c/G80ScQyC/Mt7EvEwv0R46foNrIQwGBEKpDPrH9E6/WheTAkjO1iNOuSZc9
	Y4J2H73AvkeZpZlFaGIqv9rPt9QPX59hAi/L5TLst0fGuJ2ppygIbN4=
Comment: DomainKeys? See http://antispam.yahoo.com/domainkeys
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
	s=default; d=sourceware.org;
	h=Received:Received:X-SWARE-Spam-Status:X-Spam-Check-By:Received:Received:Received:Received:Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:Content-Type:Content-Disposition:Content-Transfer-Encoding:In-Reply-To:User-Agent:Mailing-List:Precedence:List-Id:List-Unsubscribe:List-Subscribe:List-Archive:List-Post:List-Help:Sender:Delivered-To;
	b=t0XqaGT2BDR6Yas7elzE/CUns/63ObOCV8DysOttDXl8tISBQS2+eiTvBG17Jn
	OCavwdTA1SC4QaCGxOf35+MzTx5fyRaTKVfJzPTEY2r8yt12Gscws3WSQ+17Y9A3
	Dz7XioJpd69QPPhwfe1G5COins9tuxpiL56TSgeJ2Wgzk=;
Original-Received: (qmail 6090 invoked by alias); 8 Aug 2012 13:19:13 -0000
Original-Received: (qmail 6072 invoked by uid 22791); 8 Aug 2012 13:19:11 -0000
X-SWARE-Spam-Status: No, hits=-6.1 required=5.0	tests=AWL,BAYES_00,KHOP_RCVD_UNTRUST,RCVD_IN_DNSWL_HI,RCVD_IN_HOSTKARMA_W,SPF_HELO_PASS,T_RP_MATCHES_RCVD
X-Spam-Check-By: sourceware.org
Original-Received: from mx1.redhat.com (HELO mx1.redhat.com) (209.132.183.28)    by sourceware.org (qpsmtpd/0.43rc1) with ESMTP; Wed, 08 Aug 2012 13:18:54 +0000
Original-Received: from int-mx12.intmail.prod.int.phx2.redhat.com (int-mx12.intmail.prod.int.phx2.redhat.com [10.5.11.25])	by mx1.redhat.com (8.14.4/8.14.4) with ESMTP id q78DI6OC019457	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);	Wed, 8 Aug 2012 09:18:06 -0400
Original-Received: from tranklukator.brq.redhat.com (dhcp-1-232.brq.redhat.com [10.34.1.232])	by int-mx12.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with SMTP id q78DI3as022379;	Wed, 8 Aug 2012 09:18:04 -0400
Original-Received: by tranklukator.brq.redhat.com (nbSMTP-1.00) for uid 500	oleg@redhat.com; Wed,  8 Aug 2012 15:15:00 +0200 (CEST)
Content-Disposition: inline
In-Reply-To: <1344355952-2382-6-git-send-email-bigeasy@linutronix.de>
User-Agent: Mutt/1.5.18 (2008-05-17)
Mailing-List: contact gdb-patches-help@sourceware.org; run by ezmlm
Precedence: bulk
List-Id: <gdb-patches.sourceware.org>
List-Unsubscribe: <mailto:gdb-patches-unsubscribe-gdb-gdb-patches=m.gmane.org@sourceware.org>
List-Subscribe: <mailto:gdb-patches-subscribe@sourceware.org>
List-Archive: <http://sourceware.org/ml/gdb-patches/>
List-Post: <mailto:gdb-patches@sourceware.org>
List-Help: <mailto:gdb-patches-help@sourceware.org>, <http://sourceware.org/ml/#faqs>
Original-Sender: gdb-patches-owner@sourceware.org
Delivered-To: mailing list gdb-patches@sourceware.org
Xref: news.gmane.org gmane.comp.gdb.patches:78658 gmane.linux.kernel:1340031
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340031>

On 08/07, Sebastian Andrzej Siewior wrote:
>
> By setting an uprobe tracepoint, one learns whenever a certain point
> within a program is reached / passed. This is recorded and the
> application continues.
> This patch adds the ability to hold the program once this point has been
> passed and the user may attach to the program via ptrace.
> First, setup a global breakpoint which is very similar to a uprobe trace
> point:
>
> |echo 'g /home/bigeasy/sample:0x0000044d %ip %ax' > uprobe_events
>
> This is exactly what uprobe does except that it starts with the letter
> 'g' instead of 'p'.
>
> Step two is to enable it:
> |echo 1 > events/uprobes/enable
>
> Lets assume you execute ./sample and the breakpoint is hit. In ps you will
> see:
> |1938 pts/1    t+     0:00 ./sample
>
> Now you can attach gdb via 'gdb -p 1938'. The gdb can now interact with
> the tracee and inspect its registers, its stack, single step, let it
> runâ€¦
> In case the process is not of great interest, the user may continue
> without gdb by writting its pid into the uprobe_gp_wakeup file
>
> |echo 1938 > uprobe_gp_wakeup
>
> What I miss right now is an interface to tell the user/gdb that there is a
> program that hit a global breakpoint and is waiting for further instructions.
> A "tail -f trace" does not work and may contain also a lot of other
> informations. I've been thinking about a poll()able file which returns pids of
> tasks which are put on hold. Other suggestions?

Honestly, I am not sure this is that useful...

OK, I'll try to read this patch later. But, at first glance,

> +int uprobe_wakeup_task(struct task_struct *t, int traced)
> +{
> +	struct uprobe_task *utask;
> +
> +	utask = t->utask;
> +	if (!utask)
> +		return -EINVAL;
> +	if (utask->state != UTASK_TRACE_SLEEP)
> +		return -EINVAL;
> +
> +	utask->state = traced ?
> +		UTASK_TRACE_WOKEUP_TRACED : UTASK_TRACE_WOKEUP_NORMAL;
> +	wake_up_state(t, __TASK_TRACED);
> +	return 0;
> +}

This can obviously race with uprobe_wait_traced(), see below

> @@ -286,8 +286,10 @@ static int ptrace_attach(struct task_struct *task, long request,
>  	__ptrace_link(task, current);
>
>  	/* SEIZE doesn't trap tracee on attach */
> -	if (!seize)
> +	if (!seize) {
>  		send_sig_info(SIGSTOP, SEND_SIG_FORCED, task);
> +		uprobe_wakeup_task(task, 1);
> +	}

Can't understand why uprobe_wakeup_task() depends on !PTRACE_SEIZE

> +static void uprobe_wait_traced(struct trace_uprobe *tu)
> +{
> +	struct uprobe_task *utask;
> +
> +	utask = current->utask;
> +	utask->state = UTASK_TRACE_SLEEP;

WINDOW

> +
> +	set_current_state(TASK_TRACED);
> +	schedule();
> +}

Suppose that uprobe_wakeup_task() is called in the WINDOW above.

OTOH, uprobe_wakeup_task() can race with itself if it is called
twice at the same time, say from uprobes_gp_wakeup_write() and
ptrace_attach().

Oleg.


