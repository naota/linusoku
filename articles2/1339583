Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 10/49] ARM: OMAP2+: OPP: Fix to ensure check of right oppdef after bad one
Date: Tue,  7 Aug 2012 15:44:28 -0700
Lines: 60
Approved: news@gmane.org
Message-ID: <20120807222027.791813362@linuxfoundation.org>
References: <20120807222026.848194739@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344380259 26014 80.91.229.3 (7 Aug 2012 22:57:39 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 22:57:39 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk, Steve Sakoman <steve@sakoman.com>,
	Tony Lindgren <tony@atomide.com>, Nishanth Menon <nm@ti.com>,
	Kevin Hilman <khilman@ti.com>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 00:57:37 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SysiW-0008RU-JY
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 00:57:36 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1031152Ab2HGW50 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 7 Aug 2012 18:57:26 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:53839 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1031081Ab2HGWpv (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 7 Aug 2012 18:45:51 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rr13so368883pbb.19
        for <linux-kernel@vger.kernel.org>; Tue, 07 Aug 2012 15:45:51 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=s3JrurbzM8K6eY1ApeoDDHmj6uhf5+Fdm2R/ja0cpBY=;
        b=GREEnhdEPdoatzmEJRVdXtWcI/i1hgMOrp+WT/RF3rFBmxpHggWVGd9638siNM9Sjq
         l7G+DkJOdZzcanDTlbGy12do84Wc8ZaR7n4hotpJTOuHeQRqgLhWU4xPzsHrC7LHSBZd
         ZYCGwChmMvB4GhBm6sShudHydr0UsyDQIIecrArRZe/HebWAPI1dmMocDVwmAy65ZIGX
         OfVGMUwmsh9nEWwQsEXVg4cSamXIBa86aYCL10nqxPilMTLgFFt/4QzeCjRVKbN8O7zQ
         Xeg7xDOgJc1fio5T5fI6Fr41L1N/IYKJrNPrp02fhryAyfnJFF3k1LulwpXnk3cncxdz
         o7OA==
Original-Received: by 10.68.191.226 with SMTP id hb2mr10611301pbc.129.1344379551393;
        Tue, 07 Aug 2012 15:45:51 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id nv6sm11981446pbc.42.2012.08.07.15.45.49
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 07 Aug 2012 15:45:50 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120807222026.848194739@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQlXqMATVVfJqceXk5+We9bGuT6NpPJcEeXmI2Z+/vIu/x3auMqZeP0Q4D+qxHKerTQYVWHP
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1339583 gmane.linux.kernel.stable:29416
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1339583>

From: Greg KH <gregkh@linuxfoundation.org>

3.0-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Nishanth Menon <nm@ti.com>

commit b110547e586eb5825bc1d04aa9147bff83b57672 upstream.

Commit 9fa2df6b90786301b175e264f5fa9846aba81a65
(ARM: OMAP2+: OPP: allow OPP enumeration to continue if device is not present)
makes the logic:
for (i = 0; i < opp_def_size; i++) {
	<snip>
	if (!oh || !oh->od) {
		<snip>
		continue;
	}
<snip>
opp_def++;
}

In short, the moment we hit a "Bad OPP", we end up looping the list
comparing against the bad opp definition pointer for the rest of the
iteration count. Instead, increment opp_def in the for loop itself
and allow continue to be used in code without much thought so that
we check the next set of OPP definition pointers :)

Signed-off-by: Nishanth Menon <nm@ti.com>
Cc: Steve Sakoman <steve@sakoman.com>
Cc: Tony Lindgren <tony@atomide.com>
Signed-off-by: Kevin Hilman <khilman@ti.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 arch/arm/mach-omap2/opp.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

--- a/arch/arm/mach-omap2/opp.c
+++ b/arch/arm/mach-omap2/opp.c
@@ -53,7 +53,7 @@ int __init omap_init_opp_table(struct om
 	omap_table_init = 1;
 
 	/* Lets now register with OPP library */
-	for (i = 0; i < opp_def_size; i++) {
+	for (i = 0; i < opp_def_size; i++, opp_def++) {
 		struct omap_hwmod *oh;
 		struct device *dev;
 
@@ -86,7 +86,6 @@ int __init omap_init_opp_table(struct om
 					__func__, opp_def->freq,
 					opp_def->hwmod_name, i, r);
 		}
-		opp_def++;
 	}
 
 	return 0;


