Path: news.gmane.org!not-for-mail
From: Namjae Jeon <linkinjeon@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH 2/3] Documentation: update tunable options in block/cfq-iosched.txt
Date: Sat,  4 Aug 2012 08:07:44 -0400
Lines: 102
Approved: news@gmane.org
Message-ID: <1344082064-2621-1-git-send-email-linkinjeon@gmail.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344082116 25509 80.91.229.3 (4 Aug 2012 12:08:36 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 4 Aug 2012 12:08:36 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org, Namjae Jeon <linkinjeon@gmail.com>
To: axboe@kernel.dk, tj@kernel.org, akpm@linux-foundation.org
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Aug 04 14:08:36 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sxd9l-0000Df-6l
	for glk-linux-kernel-3@plane.gmane.org; Sat, 04 Aug 2012 14:08:33 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752886Ab2HDMI1 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sat, 4 Aug 2012 08:08:27 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:40886 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752601Ab2HDMHx (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sat, 4 Aug 2012 08:07:53 -0400
Original-Received: by mail-pb0-f46.google.com with SMTP id rp8so2827739pbb.19
        for <linux-kernel@vger.kernel.org>; Sat, 04 Aug 2012 05:07:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer;
        bh=Q7GyLFGdcmfA+ytbXo4ufs3/IUGwrJfMe4i+mJ8TIkg=;
        b=rjCRpN/r7vqip806hV6TY16wrteK1dnB2CwBLtq3knm27avoohssidORM46Ha5+CgJ
         fivnCHvyUd4k+TfuSFXPzrZvT3/maUM0l5jy60KpSXmA/pkrIsBcZ/PAiQVKZyms8Gxs
         p3o888nfY5qisBh+mjiJJSg2esRIjmgpf01HCVTu1+uSCda5825kGvkoQ/lyGgjL7tNo
         H7wNi6w5ZO4ywy+D+7eTMBWQ55BY31GeKNumgoAmsA4WJMKt45zLsqvqsAB99yCh3Q/I
         P1kuSlrIrYzKtEEv3rXb5sQgR9glkrg8zbPzdUF7uhqLujchgChir2TBrdJR9iOUS9wG
         57Ug==
Original-Received: by 10.68.190.168 with SMTP id gr8mr4597897pbc.157.1344082073134;
        Sat, 04 Aug 2012 05:07:53 -0700 (PDT)
Original-Received: from linkinjeon-HP-Compaq-nc6230-EA516PA-AB1.kornet ([121.143.184.115])
        by mx.google.com with ESMTPS id of1sm4906042pbb.15.2012.08.04.05.07.50
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sat, 04 Aug 2012 05:07:52 -0700 (PDT)
X-Mailer: git-send-email 1.7.9.5
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337649
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337649>

Update tunable options in block/cfq-iosched.txt.

Signed-off-by: Namjae Jeon <linkinjeon@gmail.com>
---
 Documentation/block/cfq-iosched.txt |   77 +++++++++++++++++++++++++++++++++++
 1 file changed, 77 insertions(+)

diff --git a/Documentation/block/cfq-iosched.txt b/Documentation/block/cfq-iosched.txt
index 6d670f5..d89b4fe 100644
--- a/Documentation/block/cfq-iosched.txt
+++ b/Documentation/block/cfq-iosched.txt
@@ -1,3 +1,14 @@
+CFQ (Complete Fairness Queueing)
+===============================
+
+The main aim of CFQ scheduler is to provide a fair allocation of the disk
+I/O bandwidth for all the processes which requests an I/O operation.
+
+CFQ maintains the per process queue for the processes which request I/O
+operation(syncronous requests). In case of asynchronous requests, all the
+requests from all the processes are batched together according to their
+process's I/O priority.
+
 CFQ ioscheduler tunables
 ========================
 
@@ -25,6 +36,72 @@ there are multiple spindles behind single LUN (Host based hardware RAID
 controller or for storage arrays), setting slice_idle=0 might end up in better
 throughput and acceptable latencies.
 
+back_seek_max
+-------------
+This specifies, given in Kbytes, the maximum "distance" for backward seeking.
+The distance is the amount of space from the current head location to the
+sectors that are backward in terms of distance.
+
+This parameter allows the scheduler to anticipate requests in the "backward"
+direction and consider them as being the "next" if they are within this
+distance from the current head location.
+
+back_seek_penalty
+-----------------
+This parameter is used to compute the cost of backward seeking. If the
+backward distance of request is just 1/back_seek_penalty from a "front"
+request, then the seeking cost of two requests is considered equivalent.
+
+So scheduler will not bias toward one or the other request (otherwise scheduler
+will bias toward front request). Default value of back_seek_penalty is 2.
+
+fifo_expire_async
+-----------------
+This parameter is used to set the timeout of asynchronous requests. Default
+value of this is 248ms.
+
+fifo_expire_sync
+----------------
+This parameter is used to set the timeout of synchronous requests. Default
+value of this is 124ms. In case to favor synchronous requests over asynchronous
+one, this value should be decreased relative to fifo_expire_async.
+
+slice_async
+-----------
+This parameter is same as of slice_sync but for asynchronous queue. The
+default value is 40ms.
+
+slice_async_rq
+--------------
+This parameter is used to limit the dispatching of asynchronous request to
+device request queue in queue's slice time. The maximum number of request that
+are allowed to be dispatched also depends upon the io priority. Default value
+for this is 2.
+
+slice_sync
+----------
+When a queue is selected for execution, the queues IO requests are only
+executed for a certain amount of time(time_slice) before switching to another
+queue. This parameter is used to calculate the time slice of synchronous
+queue.
+
+time_slice is computed using the below equation:-
+time_slice = slice_sync + (slice_sync/5 * (4 - prio)). To increase the
+time_slice of synchronous queue, increase the value of slice_sync. Default
+value is 100ms.
+
+quantum
+-------
+This specifies the number of request dispatched to the device queue. In a
+queue's time slice, a request will not be dispatched if the number of request
+in the device exceeds this parameter. This parameter is used for synchronous
+request.
+
+In case of storage with several disk, this setting can limit the parallel
+processing of request. Therefore, increasing the value can imporve the
+performace although this can cause the latency of some I/O to increase due
+to more number of requests.
+
 CFQ IOPS Mode for group scheduling
 ===================================
 Basic CFQ design is to provide priority based time slices. Higher priority
-- 
1.7.9.5

