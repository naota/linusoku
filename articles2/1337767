Path: news.gmane.org!not-for-mail
From: Barry Song <21cnbao@gmail.com>
Newsgroups: gmane.linux.ports.arm.kernel,gmane.linux.kernel.janitors,gmane.linux.kernel
Subject: Re: [PATCH] drivers/dma/sirf-dma.c: fix usage of devm functions
Date: Sun, 5 Aug 2012 07:53:26 +0800
Lines: 126
Approved: news@gmane.org
Message-ID: <CAGsJ_4zYt6fJg9iE65VO4kqc-bD+o8ZuHY=ESjuPwfh-1uAPUw@mail.gmail.com>
References: <1344069330-29569-1-git-send-email-Julia.Lawall@lip6.fr>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344124475 13131 80.91.229.3 (4 Aug 2012 23:54:35 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 4 Aug 2012 23:54:35 +0000 (UTC)
Cc: Vinod Koul <vinod.koul@intel.com>, kernel-janitors@vger.kernel.org,
 linux-kernel@vger.kernel.org, DL-SHA-WorkGroupLinux <workgroup.linux@csr.com>,
 Dan Williams <dan.j.williams@intel.com>, linux-arm-kernel@lists.infradead.org
To: Julia Lawall <Julia.Lawall@lip6.fr>
Original-X-From: linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org Sun Aug 05 01:54:34 2012
Return-path: <linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org>
Envelope-to: linux-arm-kernel@m.gmane.org
Original-Received: from merlin.infradead.org ([205.233.59.134])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org>)
	id 1SxoAy-0004SH-Q5
	for linux-arm-kernel@m.gmane.org; Sun, 05 Aug 2012 01:54:33 +0200
Original-Received: from localhost ([::1] helo=merlin.infradead.org)
	by merlin.infradead.org with esmtp (Exim 4.76 #1 (Red Hat Linux))
	id 1SxoAM-0006SK-Hy; Sat, 04 Aug 2012 23:53:54 +0000
Original-Received: from mail-lb0-f177.google.com ([209.85.217.177])
 by merlin.infradead.org with esmtps (Exim 4.76 #1 (Red Hat Linux))
 id 1SxoAJ-0006S6-Jh
 for linux-arm-kernel@lists.infradead.org; Sat, 04 Aug 2012 23:53:52 +0000
Original-Received: by lbbgf7 with SMTP id gf7so26478lbb.36
 for <linux-arm-kernel@lists.infradead.org>;
 Sat, 04 Aug 2012 16:53:47 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:from:date:message-id:subject:to
 :cc:content-type;
 bh=zgjjP1UdfXsDC/zgrfQVGTHmf2O49nJY/TboIONmgIE=;
 b=LLdGm5t3MdbRQxbU3dFsjI+cL6jsKi6pAC37Z3U8+zpWziwyQkwpN7UTZW9HByPI/G
 MO9DBMSVAXe1BGCCU6Xf5HTbnMmyTkWHmjZ7bObyWA3/qvhwxURFEaOxllWmbiEy+Jco
 znlif8RDlXOnhD/rRdEiDbfiWKK8xAjfqiTx+JnLT+9EtKiVHH3bZ8BDF5qgj03zmV+6
 ANmgtuq7Gx6RBINl9F4A75cXrZgj3bhym8cAYY3QMrJL/rU4gevHBHUdsnsoDZB3IHZq
 +Vr7IJBnERj1DlrqhmVCAT0q5aAttBvHDy4EbP3O+aZE/LEUeEEZv0ofISJNNV6uwYjt
 9KnQ==
Original-Received: by 10.152.124.180 with SMTP id mj20mr6023361lab.43.1344124427719;
 Sat, 04 Aug 2012 16:53:47 -0700 (PDT)
Original-Received: by 10.112.27.194 with HTTP; Sat, 4 Aug 2012 16:53:26 -0700 (PDT)
In-Reply-To: <1344069330-29569-1-git-send-email-Julia.Lawall@lip6.fr>
X-Spam-Note: CRM114 invocation failed
X-Spam-Score: -2.7 (--)
X-Spam-Report: SpamAssassin version 3.3.2 on merlin.infradead.org summary:
 Content analysis details:   (-2.7 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 (21cnbao[at]gmail.com)
 -0.7 RCVD_IN_DNSWL_LOW      RBL: Sender listed at http://www.dnswl.org/, low
 trust [209.85.217.177 listed in list.dnswl.org]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 -1.9 BAYES_00               BODY: Bayes spam probability is 0 to 1%
 [score: 0.0000]
 -0.1 DKIM_VALID_AU Message has a valid DKIM or DK signature from author's
 domain
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature,
 not necessarily valid
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Original-Sender: linux-arm-kernel-bounces@lists.infradead.org
Errors-To: linux-arm-kernel-bounces+linux-arm-kernel=m.gmane.org@lists.infradead.org
Xref: news.gmane.org gmane.linux.ports.arm.kernel:180212 gmane.linux.kernel.janitors:25338 gmane.linux.kernel:1337767
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337767>

2012/8/4 Julia Lawall <Julia.Lawall@lip6.fr>
>
> From: Julia Lawall <Julia.Lawall@lip6.fr>
>
> Fix some problems with the use of devm_ functions.
>
> devm_kzalloc: devm_kfree is not needed
>
> devm_ioremap: iounmap should not be used, no free is needed
>
> devm_request_irq: the devm_free_irq is followed by irq_dispose_mapping.  I
> don't know if it is safe to move the freeing of the irq in this case, so I
> have just un-devm'd this function, since the implicit freeing is never
> taken advantage of.
>
> In the original code failure of of_address_to_resource jumped to free_mem,
> but should have jumped to irq_dispose, since irq_of_parse_and_map has
> completed at this point.
>
> In the original code unmap_mem was after irq_dispose, but it should have
> been before, again since irq_of_parse_and_map has completed at this point.
>
> One of these problems was found using the following semantic match:
> (http://coccinelle.lip6.fr/)
>
> // <smpl>
> @@
> expression x;
> @@
>
> *x = devm_ioremap(...)
> ...
> iounmap(x);
> // </smpl>
>
> Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>

Acked-by: Barry Song <Baohua.Song@csr.com>

thanks!

>
> ---
> Not compiled.  Does free_irq actually have to be called before
> irq_dispose_mapping?
>
>  drivers/dma/sirf-dma.c |   23 +++++++----------------
>  1 file changed, 7 insertions(+), 16 deletions(-)
>
> diff --git a/drivers/dma/sirf-dma.c b/drivers/dma/sirf-dma.c
> index 434ad31..1af9e48 100644
> --- a/drivers/dma/sirf-dma.c
> +++ b/drivers/dma/sirf-dma.c
> @@ -570,21 +570,19 @@ static int __devinit sirfsoc_dma_probe(struct
> platform_device *op)
>
>         if (of_property_read_u32(dn, "cell-index", &id)) {
>                 dev_err(dev, "Fail to get DMAC index\n");
> -               ret = -ENODEV;
> -               goto free_mem;
> +               return -ENODEV;
>         }
>
>         sdma->irq = irq_of_parse_and_map(dn, 0);
>         if (sdma->irq == NO_IRQ) {
>                 dev_err(dev, "Error mapping IRQ!\n");
> -               ret = -EINVAL;
> -               goto free_mem;
> +               return -EINVAL;
>         }
>
>         ret = of_address_to_resource(dn, 0, &res);
>         if (ret) {
>                 dev_err(dev, "Error parsing memory region!\n");
> -               goto free_mem;
> +               goto irq_dispose;
>         }
>
>         regs_start = res.start;
> @@ -597,12 +595,11 @@ static int __devinit sirfsoc_dma_probe(struct
> platform_device *op)
>                 goto irq_dispose;
>         }
>
> -       ret = devm_request_irq(dev, sdma->irq, &sirfsoc_dma_irq, 0,
> DRV_NAME,
> -               sdma);
> +       ret = request_irq(sdma->irq, &sirfsoc_dma_irq, 0, DRV_NAME, sdma);
>         if (ret) {
>                 dev_err(dev, "Error requesting IRQ!\n");
>                 ret = -EINVAL;
> -               goto unmap_mem;
> +               goto irq_dispose;
>         }
>
>         dma = &sdma->dma;
> @@ -652,13 +649,9 @@ static int __devinit sirfsoc_dma_probe(struct
> platform_device *op)
>         return 0;
>
>  free_irq:
> -       devm_free_irq(dev, sdma->irq, sdma);
> +       free_irq(sdma->irq, sdma);
>  irq_dispose:
>         irq_dispose_mapping(sdma->irq);
> -unmap_mem:
> -       iounmap(sdma->base);
> -free_mem:
> -       devm_kfree(dev, sdma);
>         return ret;
>  }
>
> @@ -668,10 +661,8 @@ static int __devexit sirfsoc_dma_remove(struct
> platform_device *op)
>         struct sirfsoc_dma *sdma = dev_get_drvdata(dev);
>
>         dma_async_device_unregister(&sdma->dma);
> -       devm_free_irq(dev, sdma->irq, sdma);
> +       free_irq(sdma->irq, sdma);
>         irq_dispose_mapping(sdma->irq);
> -       iounmap(sdma->base);
> -       devm_kfree(dev, sdma);
>         return 0;
>  }

-barry
