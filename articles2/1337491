Path: news.gmane.org!not-for-mail
From: Silas Boyd-Wickizer <sbw@mit.edu>
Newsgroups: gmane.linux.kernel
Subject: [PATCH 3/4 V2] Use get_online_cpus to avoid races involving CPU
 hotplug
Date: Fri, 3 Aug 2012 12:35:28 -0700
Lines: 67
Approved: news@gmane.org
Message-ID: <20120803193528.GD4227@mit.edu>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1344022786 11531 80.91.229.3 (3 Aug 2012 19:39:46 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 3 Aug 2012 19:39:46 +0000 (UTC)
Cc: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
	Jean Delvare <khali@linux-fr.org>,
	Guenter Roeck <linux@roeck-us.net>,
	Thomas Gleixner <tglx@linutronix.de>,
	Harald Welte <laforge@openezx.org>, x86@kernel.org
To: linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Aug 03 21:39:45 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SxNio-0006Qo-Rm
	for glk-linux-kernel-3@plane.gmane.org; Fri, 03 Aug 2012 21:39:43 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753728Ab2HCTjf (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 3 Aug 2012 15:39:35 -0400
Original-Received: from mail-vb0-f46.google.com ([209.85.212.46]:46219 "EHLO
	mail-vb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753388Ab2HCTjd (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 3 Aug 2012 15:39:33 -0400
Original-Received: by vbbff1 with SMTP id ff1so1016663vbb.19
        for <linux-kernel@vger.kernel.org>; Fri, 03 Aug 2012 12:39:33 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:date:from:to:cc:subject:message-id:mime-version:content-type
         :content-disposition:user-agent;
        bh=I4Qy23sCjoEy1js9ARI4ubAAwZ5f+txbYkpt92C29Mk=;
        b=SQviLCD3qI26ssm+iu6zq5tjx1yPssKs1wJUHzuvW5/p/BetFz9soEU5Qz41UBQ/e1
         sTEaFtrqqH2BsBtf1vmE3wwDyHXA5RTWyahvrsSzD6Ymz6E7MAxyOqkxLtwNQWnc0Hjt
         +xixUFq2xYvoQkWNIIb4buZJ7mfu4QVPcmxMasJRgnYgWgK4uO1EEQCSNRQdPC5qXOki
         tx6OPa7XwB80pyFW/mga2e8BvNVl7/3c3ckZ1CuHO5Syg9I6XLuMtZIKT00dBY8sLmco
         TKF7zKEOREmN5Ocqxmt34cZf4SQ4Pl3r3qNzyZFJQVd80qJ/+bimDEjF/Z4aIKq24e4u
         mNog==
Original-Received: by 10.52.92.103 with SMTP id cl7mr1634931vdb.76.1344022772945;
        Fri, 03 Aug 2012 12:39:32 -0700 (PDT)
Original-Received: from mit.edu ([129.33.193.86])
        by mx.google.com with ESMTPS id i13sm9549506vdj.4.2012.08.03.12.39.31
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 03 Aug 2012 12:39:32 -0700 (PDT)
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337491
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337491>

via_cputemp_init in drivers/hwmon/via-cputemp.c loops with
for_each_online_cpu, adding platform_devices, then calls
register_hotcpu_notifier.  If a CPU is offlined between the loop and
register_hotcpu_notifier, then later onlined, via_cputemp_device_add
will attempt to add platform devices with the same ID.  A similar race
occurs during via_cputemp_exit, after the module calls
unregister_hotcpu_notifier, a CPU might offline and a device will
exist for a CPU that is offline.

This fix surrounds for_each_online_cpu and register_hotcpu_notifier
with get_online_cpus+put_online_cpus; and surrounds
unregister_hotcpu_notifier and device unregistering with
get_online_cpus+put_online_cpus.

Build tested.

Signed-off-by: Silas Boyd-Wickizer <sbw@mit.edu>
---
 drivers/hwmon/via-cputemp.c |    5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/hwmon/via-cputemp.c b/drivers/hwmon/via-cputemp.c
index 8689664..54b01ac 100644
--- a/drivers/hwmon/via-cputemp.c
+++ b/drivers/hwmon/via-cputemp.c
@@ -328,6 +328,7 @@ static int __init via_cputemp_init(void)
 	if (err)
 		goto exit;
 
+	get_online_cpus();
 	for_each_online_cpu(i) {
 		struct cpuinfo_x86 *c = &cpu_data(i);
 
@@ -347,12 +348,14 @@ static int __init via_cputemp_init(void)
 
 #ifndef CONFIG_HOTPLUG_CPU
 	if (list_empty(&pdev_list)) {
+		put_online_cpus();
 		err = -ENODEV;
 		goto exit_driver_unreg;
 	}
 #endif
 
 	register_hotcpu_notifier(&via_cputemp_cpu_notifier);
+	put_online_cpus();
 	return 0;
 
 #ifndef CONFIG_HOTPLUG_CPU
@@ -367,6 +370,7 @@ static void __exit via_cputemp_exit(void)
 {
 	struct pdev_entry *p, *n;
 
+	get_online_cpus();
 	unregister_hotcpu_notifier(&via_cputemp_cpu_notifier);
 	mutex_lock(&pdev_list_mutex);
 	list_for_each_entry_safe(p, n, &pdev_list, list) {
@@ -375,6 +379,7 @@ static void __exit via_cputemp_exit(void)
 		kfree(p);
 	}
 	mutex_unlock(&pdev_list_mutex);
+	put_online_cpus();
 	platform_driver_unregister(&via_cputemp_driver);
 }
 
-- 
1.7.10.4

