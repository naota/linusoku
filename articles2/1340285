Path: news.gmane.org!not-for-mail
From: Eric Paris <eparis@parisplace.org>
Newsgroups: gmane.linux.kernel,gmane.comp.security.selinux
Subject: Re: NULL pointer dereference in selinux_ip_postroute_compat
Date: Wed, 8 Aug 2012 15:59:31 -0400
Lines: 40
Approved: news@gmane.org
Message-ID: <CACLa4ptgoge0nnEuov5E9gc2bdR-wjCo+bpB6Auhwo8jSO99oA@mail.gmail.com>
References: <50215A7E.8000701@linaro.org>
	<502198B4.8040503@linaro.org>
	<5022BAA2.90606@us.ibm.com>
	<17464273.DGOeQvDGIE@sifl>
	<1344454701.28967.233.camel@edumazet-glaptop>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344455983 8980 80.91.229.3 (8 Aug 2012 19:59:43 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 19:59:43 +0000 (UTC)
Cc: Paul Moore <paul@paul-moore.com>,
	John Stultz <johnstul@us.ibm.com>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	lkml <linux-kernel@vger.kernel.org>,
	James Morris <james.l.morris@oracle.com>,
	selinux@tycho.nsa.gov, Eric Dumazet <edumazet@google.com>,
	john.johansen@canonical.com
To: Eric Dumazet <eric.dumazet@gmail.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 21:59:42 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzCPs-0002vO-Ke
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 21:59:40 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759203Ab2HHT7e (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 15:59:34 -0400
Original-Received: from mail-pb0-f46.google.com ([209.85.160.46]:51787 "EHLO
	mail-pb0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1759189Ab2HHT7c (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 15:59:32 -0400
Original-Received: by pbbrr13 with SMTP id rr13so1950472pbb.19
        for <linux-kernel@vger.kernel.org>; Wed, 08 Aug 2012 12:59:32 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:x-gm-message-state;
        bh=tpC5JNZLSafIsBvut11eS4ZlyUppjd6p83K34Ia1O7E=;
        b=FM7Ctu/bIOXEudN+IT25Vi8G0cFhtjjuLsxwnRecqPD+R+83lfJt7XujwfR8J9cpg2
         H4zh/I1mhAZaDO8KipYc80IqONwHppR5bsNKQ0/TgyCzGGFbDWiSSEJwV5xXHFkN4FJI
         EXHQ0md4HJCHltid1yvW7VKqLS1AYure+NClIF/sebXuuSEOGlnZPNoQQ6H3QGPaJerb
         iI3DThciE8Oe/F5eZaEuocRXXhK3+2ykY6+DjmMPh5wFrkU/5IJ0ZKaUyRcMvhRf60tF
         xuYmz+rPbS0po8c5X/8mUcOaQWwGJZLj8Gk6yTsQncjjJFZo7J46d3AHkb8OeWVFktqN
         Qi+g==
Original-Received: by 10.68.197.168 with SMTP id iv8mr1539757pbc.61.1344455972017; Wed,
 08 Aug 2012 12:59:32 -0700 (PDT)
Original-Received: by 10.68.54.199 with HTTP; Wed, 8 Aug 2012 12:59:31 -0700 (PDT)
In-Reply-To: <1344454701.28967.233.camel@edumazet-glaptop>
X-Gm-Message-State: ALoCoQlWF3mW0nlNcYgqO0ATwj0hIYiwTNz8TEMVbM+qSjwxb1pmAeBeiRrDgjQeTapeHykPX5rG
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340285 gmane.comp.security.selinux:17706
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340285>

On Wed, Aug 8, 2012 at 3:38 PM, Eric Dumazet <eric.dumazet@gmail.com> wrote:
> On Wed, 2012-08-08 at 15:26 -0400, Paul Moore wrote:

> diff --git a/net/ipv4/ip_output.c b/net/ipv4/ip_output.c
> index ba39a52..027a331 100644
> --- a/net/ipv4/ip_output.c
> +++ b/net/ipv4/ip_output.c
> @@ -1524,6 +1524,10 @@ void ip_send_unicast_reply(struct net *net, struct sk_buff *skb, __be32 daddr,
>         sk->sk_priority = skb->priority;
>         sk->sk_protocol = ip_hdr(skb)->protocol;
>         sk->sk_bound_dev_if = arg->bound_dev_if;
> +#ifdef CONFIG_SECURITY
> +       if (!sk->sk_security && security_sk_alloc(sk, PF_INET, GFP_ATOMIC))
> +                       goto out;
> +#endif
>         sock_net_set(sk, net);
>         __skb_queue_head_init(&sk->sk_write_queue);
>         sk->sk_sndbuf = sysctl_wmem_default;
> @@ -1539,7 +1543,7 @@ void ip_send_unicast_reply(struct net *net, struct sk_buff *skb, __be32 daddr,
>                 skb_set_queue_mapping(nskb, skb_get_queue_mapping(skb));
>                 ip_push_pending_frames(sk, &fl4);
>         }
> -
> +out:
>         put_cpu_var(unicast_sock);
>
>         ip_rt_put(rt);

Seems wrong.  We shouldn't ever need ifdef CONFIG_SECURITY in core
code.  Ifndef CONF_SECURITY then security_sk_alloc() is a static
inline return 0;   I guess the question is "Where did the sk come
from"?  Why wasn't security_sk_alloc() called when it was allocated?
Should it have been updated at some time and that wasn't done either?
Seems wrong to be putting packets on the queue for a socket where the
security data was never allocated and was never set to its proper
state.

there must be a bigger bug here...

-Eric
