Path: news.gmane.org!not-for-mail
From: Muthu Kumar <muthu.lkml@gmail.com>
Newsgroups: gmane.comp.file-systems.ext4,gmane.linux.kernel,gmane.comp.file-systems.btrfs,gmane.linux.raid,gmane.linux.file-systems
Subject: Re: Re: [PATCH 0/8] Set bi_rw when alloc bio before call bio_add_page.
Date: Fri, 10 Aug 2012 08:29:45 -0700
Lines: 82
Approved: news@gmane.org
Message-ID: <CAFR8uedP7pGm+KbW4q0fR3L1GS6GwG0yAGUDBsJbrTfKNHnWag@mail.gmail.com>
References: <201207301514247032532@gmail.com>
	<20120730214213.GF2877@dastard>
	<201207310855556258267@gmail.com>
	<20120731011457.GO2877@dastard>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1344612599 16996 80.91.229.3 (10 Aug 2012 15:29:59 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 10 Aug 2012 15:29:59 +0000 (UTC)
Cc: majianpeng <majianpeng@gmail.com>, Neil Brown <neilb@suse.de>,
	axboe <axboe@kernel.dk>, "konrad.wilk" <konrad.wilk@oracle.com>,
	"chris.mason" <chris.mason@fusionio.com>,
	viro <viro@zeniv.linux.org.uk>, tytso <tytso@mit.edu>,
	"adilger.kernel" <adilger.kernel@dilger.ca>,
	shaggy <shaggy@kernel.org>, mfasheh <mfasheh@suse.com>,
	jlbec <jlbec@evilplan.org>, bpm <bpm@sgi.com>,
	elder <elder@kernel.org>,
	jfs-discussion <jfs-discussion@lists.sourceforge.net>,
	linux-kernel <linux-kernel@vger.kernel.org>,
	xfs <xfs@oss.sgi.com>, linux-btrfs <linux-btrfs@vger.kernel.org>,
	linux-ext4 <linux-ext4@vger.kernel.org>,
	linux-raid <linux-raid@vger.kernel.org>,
	linux-fsdevel <linux-fsdevel@vger.kernel.org>
To: Dave Chinner <david@fromorbit.com>
Original-X-From: linux-ext4-owner@vger.kernel.org Fri Aug 10 17:29:53 2012
Return-path: <linux-ext4-owner@vger.kernel.org>
Envelope-to: gcfe-linux-ext4@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-ext4-owner@vger.kernel.org>)
	id 1Szr9r-0000He-1F
	for gcfe-linux-ext4@plane.gmane.org; Fri, 10 Aug 2012 17:29:51 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759227Ab2HJP3r (ORCPT <rfc822;gcfe-linux-ext4@m.gmane.org>);
	Fri, 10 Aug 2012 11:29:47 -0400
Original-Received: from mail-vc0-f174.google.com ([209.85.220.174]:45128 "EHLO
	mail-vc0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1759203Ab2HJP3q (ORCPT
	<rfc822;linux-ext4@vger.kernel.org>); Fri, 10 Aug 2012 11:29:46 -0400
Original-Received: by vcbfk26 with SMTP id fk26so1665785vcb.19
        for <multiple recipients>; Fri, 10 Aug 2012 08:29:45 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=4O0ep5W6b4fvwfSFxNPaJj3+SsZ99B6GPiJpHai85ZI=;
        b=UsqJOxLdrUb6jQWrAwDO+D7LvVhLA0lmd3vrQvEGgkcgST7eaAkb0g9Aq9RftZeEX4
         2DbxWT2u7De1sMHiHib9xjhKpP+5K+30PAz0zwGCmPwxvcZHDd0KSO/rlkQjM4c6G8NJ
         GxnCBpj0v+XJWMCVcZyEkK/rU9iZPvIkMU8fYljhXWcIMbcEvwfSRm0GCzn3elSKUWTP
         pl5nj1d6cfv5zY01Hsi4H4LBveDCaoUDxIn44W0mtl0scoUvdNvJRKqac60VZQF+4Q5N
         UbozwgxSmxuuEfeNCneD/x4ALIwdWveSjCVb5j5zenvuNCn+JqQt/poQ+40YqJAKGX6f
         AmUA==
Original-Received: by 10.58.65.10 with SMTP id t10mr3116984ves.48.1344612585619; Fri,
 10 Aug 2012 08:29:45 -0700 (PDT)
Original-Received: by 10.58.182.169 with HTTP; Fri, 10 Aug 2012 08:29:45 -0700 (PDT)
In-Reply-To: <20120731011457.GO2877@dastard>
Original-Sender: linux-ext4-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-ext4.vger.kernel.org>
X-Mailing-List: linux-ext4@vger.kernel.org
Xref: news.gmane.org gmane.comp.file-systems.ext4:33732 gmane.linux.kernel:1341324 gmane.comp.file-systems.btrfs:19156 gmane.linux.raid:39670 gmane.linux.file-systems:66496
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1341324>

[ Resending in plain text... sorry for the duplicate ]

Hi,

On Mon, Jul 30, 2012 at 6:14 PM, Dave Chinner <david@fromorbit.com> wrote:
>
> On Tue, Jul 31, 2012 at 08:55:59AM +0800, majianpeng wrote:
> > On 2012-07-31 05:42 Dave Chinner <david@fromorbit.com> Wrote:
> > >On Mon, Jul 30, 2012 at 03:14:28PM +0800, majianpeng wrote:
> > >> When exec bio_alloc, the bi_rw is zero.But after calling
> > >> bio_add_page,
> > >> it will use bi_rw.
> > >> Fox example, in functiion __bio_add_page,it will call
> > >> merge_bvec_fn().
> > >> The merge_bvec_fn of raid456 will use the bi_rw to judge the merge.
> > >> >> if ((bvm->bi_rw & 1) == WRITE)
> > >> >> return biovec->bv_len; /* always allow writes to be mergeable */
> > >
> > >So if bio_add_page() requires bi_rw to be set, then shouldn't it be
> > >set up for every caller? I noticed there are about 50 call sites for
> > >bio_add_page(), and you've only touched about 10 of them. Indeed, I
> > >notice that the RAID0/1 code uses bio_add_page, and as that can be
> > >stacked on top of RAID456, it also needs to set bi_rw correctly.
> > >As a result, your patch set is nowhere near complete, not does it
> > >document that bio_add_page requires that bi_rw be set before calling
> > >(which is the new API requirement, AFAICT).
> > There are many place call bio_add_page and I send some of those. Because
> > my abilty, so I only send
> > some patchs which i understand clearly.
>
> Sure, but my point is that there is no point changing only a few and
> ignoring the great majority of callers. Either fix them all, fix it
> some other way (e.g. API change), or remove the code from the RAID5
> function that requires it.

A while back, we tried to address this by changing the alloc functions to
take rw argument and set it (as per Jens suggestion). I guess the patch did
not make it in. Please check:

https://lkml.org/lkml/2011/7/11/275

and the follow ups. If needed, I can dust up that patch and resend it.

>

<snip>

>
> It's entirely possible that when bi_rw was added to struct
> bvec_merge_data, the person who added it was mistaken that bi_rw was
> set at this point in time when in fact it never has been. Hence it's
> presence and reliance on it would be a bug.
>
> That's what I'm asking - is this actually beneificial, or should it
> simply be removed from struct bvec_merge_data? Data is needed to
> answer that question....

There are cases where we found it really beneficial to know the rw
field to decide if the can be really merged or not.


Regards,
Muthu


>
> Cheers,
>
> Dave.
> --
> Dave Chinner
> david@fromorbit.com
> --
> To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
> the body of a message to majordomo@vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> Please read the FAQ at  http://www.tux.org/lkml/
--
To unsubscribe from this list: send the line "unsubscribe linux-ext4" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

