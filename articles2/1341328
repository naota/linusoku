Path: news.gmane.org!not-for-mail
From: "Serge E. Hallyn" <serge@hallyn.com>
Newsgroups: gmane.linux.kernel,gmane.linux.file-systems
Subject: Re: [PATCHv4 3/3] fs: Update coredump-related headers
Date: Fri, 10 Aug 2012 15:37:22 +0000
Lines: 128
Approved: news@gmane.org
Message-ID: <20120810153722.GC29680@mail.hallyn.com>
References: <1344587169-18682-1-git-send-email-alex.page.kelly@gmail.com>
 <1344587169-18682-3-git-send-email-alex.page.kelly@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: dough.gmane.org 1344612975 20711 80.91.229.3 (10 Aug 2012 15:36:15 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 10 Aug 2012 15:36:15 +0000 (UTC)
Cc: Alexander Viro <viro@zeniv.linux.org.uk>,
	Ingo Molnar <mingo@redhat.com>,
	Peter Zijlstra <peterz@infradead.org>,
	Josh Triplett <josh@joshtriplett.org>,
	Heiko Carstens <heiko.carstens@de.ibm.com>,
	Serge Hallyn <serge.hallyn@canonical.com>,
	Oleg Nesterov <oleg@redhat.com>,
	"Eric W. Biederman" <ebiederm@xmission.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
	Kees Cook <keescook@chromium.org>,
	Ingo Molnar <mingo@kernel.org>
To: Alex Kelly <alex.page.kelly@gmail.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Aug 10 17:36:11 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzrFy-0004Gu-9o
	for glk-linux-kernel-3@plane.gmane.org; Fri, 10 Aug 2012 17:36:10 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753585Ab2HJPgE (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Fri, 10 Aug 2012 11:36:04 -0400
Original-Received: from 50-56-35-84.static.cloud-ips.com ([50.56.35.84]:52151 "EHLO
	mail.hallyn.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751176Ab2HJPgB (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 10 Aug 2012 11:36:01 -0400
Original-Received: by mail.hallyn.com (Postfix, from userid 1000)
	id C5025C80E7; Fri, 10 Aug 2012 15:37:22 +0000 (UTC)
Content-Disposition: inline
In-Reply-To: <1344587169-18682-3-git-send-email-alex.page.kelly@gmail.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1341328 gmane.linux.file-systems:66499
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1341328>

Quoting Alex Kelly (alex.page.kelly@gmail.com):
> This patch creates a new header file, fs/coredump.h, which contains
> functions only used by the new coredump.c. It also moves do_coredump
> to the include/linux/coredump.h header file, for consistency.
> 
> Signed-off-by: Alex Kelly <alex.page.kelly@gmail.com>
> Reviewed-by: Josh Triplett <josh@joshtriplett.org>

Acked-by: Serge Hallyn <serge.hallyn@canonical.com>

> ---
>  fs/coredump.c            | 2 ++
>  fs/coredump.h            | 6 ++++++
>  fs/exec.c                | 1 +
>  include/linux/binfmts.h  | 5 -----
>  include/linux/coredump.h | 5 +++++
>  include/linux/sched.h    | 1 -
>  kernel/signal.c          | 1 +
>  7 files changed, 15 insertions(+), 6 deletions(-)
>  create mode 100644 fs/coredump.h
> 
> diff --git a/fs/coredump.c b/fs/coredump.c
> index 9692329..1935b4d 100644
> --- a/fs/coredump.c
> +++ b/fs/coredump.c
> @@ -14,6 +14,7 @@
>  #include <linux/key.h>
>  #include <linux/personality.h>
>  #include <linux/binfmts.h>
> +#include <linux/coredump.h>
>  #include <linux/utsname.h>
>  #include <linux/pid_namespace.h>
>  #include <linux/module.h>
> @@ -39,6 +40,7 @@
>  
>  #include <trace/events/task.h>
>  #include "internal.h"
> +#include "coredump.h"
>  
>  #include <trace/events/sched.h>
>  
> diff --git a/fs/coredump.h b/fs/coredump.h
> new file mode 100644
> index 0000000..e39ff07
> --- /dev/null
> +++ b/fs/coredump.h
> @@ -0,0 +1,6 @@
> +#ifndef _FS_COREDUMP_H
> +#define _FS_COREDUMP_H
> +
> +extern int __get_dumpable(unsigned long mm_flags);
> +
> +#endif
> diff --git a/fs/exec.c b/fs/exec.c
> index b604050..a0ad3a2 100644
> --- a/fs/exec.c
> +++ b/fs/exec.c
> @@ -63,6 +63,7 @@
>  
>  #include <trace/events/task.h>
>  #include "internal.h"
> +#include "coredump.h"
>  
>  #include <trace/events/sched.h>
>  
> diff --git a/include/linux/binfmts.h b/include/linux/binfmts.h
> index 00e2e89..c7b16ee 100644
> --- a/include/linux/binfmts.h
> +++ b/include/linux/binfmts.h
> @@ -132,11 +132,6 @@ extern int copy_strings_kernel(int argc, const char *const *argv,
>  			       struct linux_binprm *bprm);
>  extern int prepare_bprm_creds(struct linux_binprm *bprm);
>  extern void install_exec_creds(struct linux_binprm *bprm);
> -#ifdef CONFIG_COREDUMP
> -extern void do_coredump(long signr, int exit_code, struct pt_regs *regs);
> -#else
> -static inline void do_coredump(long signr, int exit_code, struct pt_regs *regs) {}
> -#endif
>  extern void set_binfmt(struct linux_binfmt *new);
>  extern void free_bprm(struct linux_binprm *);
>  
> diff --git a/include/linux/coredump.h b/include/linux/coredump.h
> index ba4b85a..42f9752 100644
> --- a/include/linux/coredump.h
> +++ b/include/linux/coredump.h
> @@ -11,5 +11,10 @@
>   */
>  extern int dump_write(struct file *file, const void *addr, int nr);
>  extern int dump_seek(struct file *file, loff_t off);
> +#ifdef CONFIG_COREDUMP
> +extern void do_coredump(long signr, int exit_code, struct pt_regs *regs);
> +#else
> +static inline void do_coredump(long signr, int exit_code, struct pt_regs *regs) {}
> +#endif
>  
>  #endif /* _LINUX_COREDUMP_H */
> diff --git a/include/linux/sched.h b/include/linux/sched.h
> index 7bb5047..c147e70 100644
> --- a/include/linux/sched.h
> +++ b/include/linux/sched.h
> @@ -413,7 +413,6 @@ static inline void arch_pick_mmap_layout(struct mm_struct *mm) {}
>  
>  extern void set_dumpable(struct mm_struct *mm, int value);
>  extern int get_dumpable(struct mm_struct *mm);
> -extern int __get_dumpable(unsigned long mm_flags);
>  
>  /* get/set_dumpable() values */
>  #define SUID_DUMPABLE_DISABLED	0
> diff --git a/kernel/signal.c b/kernel/signal.c
> index be4f856..fb4fd72 100644
> --- a/kernel/signal.c
> +++ b/kernel/signal.c
> @@ -17,6 +17,7 @@
>  #include <linux/fs.h>
>  #include <linux/tty.h>
>  #include <linux/binfmts.h>
> +#include <linux/coredump.h>
>  #include <linux/security.h>
>  #include <linux/syscalls.h>
>  #include <linux/ptrace.h>
> -- 
> 1.7.11.2
> 
> --
> To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
> the body of a message to majordomo@vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> Please read the FAQ at  http://www.tux.org/lkml/
