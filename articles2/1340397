Path: news.gmane.org!not-for-mail
From: Zhang Rui <rui.zhang@intel.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH] thermal: Fix potential NULL pointer accesses
Date: Thu, 09 Aug 2012 08:44:55 +0800
Lines: 69
Approved: news@gmane.org
Message-ID: <1344473095.1682.641.camel@rui.sh.intel.com>
References: <1344404205-22861-1-git-send-email-linux@roeck-us.net>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1344473033 4838 80.91.229.3 (9 Aug 2012 00:43:53 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 9 Aug 2012 00:43:53 +0000 (UTC)
Cc: linux-kernel@vger.kernel.org
To: Guenter Roeck <linux@roeck-us.net>
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 09 02:43:54 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzGqv-0008TF-DI
	for glk-linux-kernel-3@plane.gmane.org; Thu, 09 Aug 2012 02:43:53 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759434Ab2HIAnr convert rfc822-to-quoted-printable (ORCPT
	<rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 20:43:47 -0400
Original-Received: from mga09.intel.com ([134.134.136.24]:11943 "EHLO mga09.intel.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1758675Ab2HIAnq (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 20:43:46 -0400
Original-Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by orsmga102.jf.intel.com with ESMTP; 08 Aug 2012 17:43:45 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="4.77,735,1336374000"; 
   d="scan'208";a="177761915"
Original-Received: from rui.sh.intel.com (HELO [10.239.36.18]) ([10.239.36.18])
  by orsmga001.jf.intel.com with ESMTP; 08 Aug 2012 17:43:44 -0700
In-Reply-To: <1344404205-22861-1-git-send-email-linux@roeck-us.net>
X-Mailer: Evolution 3.2.2 (3.2.2-1.fc16) 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340397
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340397>

On =E4=BA=8C, 2012-08-07 at 22:36 -0700, Guenter Roeck wrote:
> The type parameter in thermal_zone_device_register and
> thermal_cooling_device_register can be NULL, indicating that no sysfs=
 attribute
> for the type should be created. Only call strlen() and strcpy() on ty=
pe if it is
> not NULL.
>=20
> This patch addresses Coverity #102180 and #102182: Dereference before=
 null check
>=20
> Signed-off-by: Guenter Roeck <linux@roeck-us.net>

Acked-by: Zhang Rui <rui.zhang@intel.com>

> ---
> Applies on top of git://git.kernel.org/pub/scm/linux/kernel/git/rzhan=
g/linux.git (thermal).
>=20
>  drivers/thermal/thermal_sys.c |    8 ++++----
>  1 file changed, 4 insertions(+), 4 deletions(-)
>=20
> diff --git a/drivers/thermal/thermal_sys.c b/drivers/thermal/thermal_=
sys.c
> index 5be8728..e69f76d 100644
> --- a/drivers/thermal/thermal_sys.c
> +++ b/drivers/thermal/thermal_sys.c
> @@ -900,7 +900,7 @@ thermal_cooling_device_register(char *type, void =
*devdata,
>  	struct thermal_zone_device *pos;
>  	int result;
> =20
> -	if (strlen(type) >=3D THERMAL_NAME_LENGTH)
> +	if (type && strlen(type) >=3D THERMAL_NAME_LENGTH)
>  		return ERR_PTR(-EINVAL);
> =20
>  	if (!ops || !ops->get_max_state || !ops->get_cur_state ||
> @@ -917,7 +917,7 @@ thermal_cooling_device_register(char *type, void =
*devdata,
>  		return ERR_PTR(result);
>  	}
> =20
> -	strcpy(cdev->type, type);
> +	strcpy(cdev->type, type ? : "");
>  	mutex_init(&cdev->lock);
>  	INIT_LIST_HEAD(&cdev->thermal_instances);
>  	cdev->ops =3D ops;
> @@ -1343,7 +1343,7 @@ struct thermal_zone_device *thermal_zone_device=
_register(const char *type,
>  	int count;
>  	int passive =3D 0;
> =20
> -	if (strlen(type) >=3D THERMAL_NAME_LENGTH)
> +	if (type && strlen(type) >=3D THERMAL_NAME_LENGTH)
>  		return ERR_PTR(-EINVAL);
> =20
>  	if (trips > THERMAL_MAX_TRIPS || trips < 0 || mask >> trips)
> @@ -1365,7 +1365,7 @@ struct thermal_zone_device *thermal_zone_device=
_register(const char *type,
>  		return ERR_PTR(result);
>  	}
> =20
> -	strcpy(tz->type, type);
> +	strcpy(tz->type, type ? : "");
>  	tz->ops =3D ops;
>  	tz->device.class =3D &thermal_class;
>  	tz->devdata =3D devdata;


