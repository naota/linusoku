Path: news.gmane.org!not-for-mail
From: Peter Ujfalusi <peter.ujfalusi@ti.com>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.input
Subject: [PATCH] Input: twl6040-vibra: Code cleanup in probe with devm_* conversion
Date: Tue,  7 Aug 2012 15:59:43 +0300
Lines: 185
Approved: news@gmane.org
Message-ID: <1344344383-28670-1-git-send-email-peter.ujfalusi@ti.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344344408 4284 80.91.229.3 (7 Aug 2012 13:00:08 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 13:00:08 +0000 (UTC)
Cc: linux-input@vger.kernel.org, linux-kernel@vger.kernel.org
To: Dmitry Torokhov <dtor@mail.ru>
Original-X-From: linux-kernel-owner@vger.kernel.org Tue Aug 07 15:00:08 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SyjOH-0006Tc-CK
	for glk-linux-kernel-3@plane.gmane.org; Tue, 07 Aug 2012 15:00:05 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754632Ab2HGM74 (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 7 Aug 2012 08:59:56 -0400
Original-Received: from na3sys009aob106.obsmtp.com ([74.125.149.76]:59485 "EHLO
	na3sys009aog106.obsmtp.com" rhost-flags-OK-OK-OK-FAIL)
	by vger.kernel.org with ESMTP id S1754204Ab2HGM7z (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 7 Aug 2012 08:59:55 -0400
Original-Received: from mail-ob0-f169.google.com ([209.85.214.169]) (using TLSv1) by na3sys009aob106.postini.com ([74.125.148.12]) with SMTP
	ID DSNKUCERSvkqfmZNNleQS5f9VnDy9Eht+Hh4@postini.com; Tue, 07 Aug 2012 05:59:54 PDT
Original-Received: by obhx4 with SMTP id x4so7313100obh.28
        for <linux-kernel@vger.kernel.org>; Tue, 07 Aug 2012 05:59:53 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:x-gm-message-state;
        bh=8wcTZMQqi112XQ+Xk0Z7lrB1ZSfhtlolpb9QH/MNL88=;
        b=NzcStm+xnFO5EGm0O9lhMZyJwr0s7eSemnfO+R47aH7L5lPteiMWeqtbVhpAIAl5xX
         0GV1vLx4e2bh4HxV8BfpGKR02T7cdI77/PXciKDa79LDmhFPatDNsqzAHyrsr/R8c4n+
         ZrWc93hXdfqEa6/IAl3xFscDYBCeqjdvIURDzAmYcSXqJEhBz76NKqLzNVLG3uuiyQkh
         28Aj5soQboXjjw+sVMtZ/W5JqqppqHNJnPYS0sDyGg8FQgjhQe4zEPIq5IX/BAdKPfXO
         hvCKClQg3wo2xM9+spMRIeybmk2ER8Tx4kx0rwXWPz8SSkxkRlC4AMKcl3PeEv9P2Q+q
         5OZA==
Original-Received: by 10.182.89.102 with SMTP id bn6mr24503982obb.7.1344344393827;
        Tue, 07 Aug 2012 05:59:53 -0700 (PDT)
Original-Received: from barack.emea.dhcp.ti.com (dragon.ti.com. [192.94.94.33])
        by mx.google.com with ESMTPS id k3sm13284576obw.4.2012.08.07.05.59.50
        (version=SSLv3 cipher=OTHER);
        Tue, 07 Aug 2012 05:59:52 -0700 (PDT)
X-Mailer: git-send-email 1.7.8.6
X-Gm-Message-State: ALoCoQkkNaASMNkFovleDbn/99as7uL2U6+P7ushHFLANqLsoWW1aGxHwuhyZLM5ySIec+FGBqud
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1339009 gmane.linux.kernel.input:26185
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1339009>

Convert the probe to use devm_*. At the same time reorder the calls
so we will register the input device as the last step when the driver
is loaded.

Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
---
 drivers/input/misc/twl6040-vibra.c |   99 ++++++++++++++++-------------------
 1 files changed, 45 insertions(+), 54 deletions(-)

diff --git a/drivers/input/misc/twl6040-vibra.c b/drivers/input/misc/twl6040-vibra.c
index c8a288a..ef380d8 100644
--- a/drivers/input/misc/twl6040-vibra.c
+++ b/drivers/input/misc/twl6040-vibra.c
@@ -275,7 +275,7 @@ static int __devinit twl6040_vibra_probe(struct platform_device *pdev)
 		return -EINVAL;
 	}
 
-	info = kzalloc(sizeof(*info), GFP_KERNEL);
+	info = devm_kzalloc(&pdev->dev, sizeof(*info), GFP_KERNEL);
 	if (!info) {
 		dev_err(&pdev->dev, "couldn't allocate memory\n");
 		return -ENOMEM;
@@ -309,53 +309,23 @@ static int __devinit twl6040_vibra_probe(struct platform_device *pdev)
 	if ((!info->vibldrv_res && !info->viblmotor_res) ||
 	    (!info->vibrdrv_res && !info->vibrmotor_res)) {
 		dev_err(info->dev, "invalid vibra driver/motor resistance\n");
-		ret = -EINVAL;
-		goto err_kzalloc;
+		return -EINVAL;
 	}
 
 	info->irq = platform_get_irq(pdev, 0);
 	if (info->irq < 0) {
 		dev_err(info->dev, "invalid irq\n");
-		ret = -EINVAL;
-		goto err_kzalloc;
+		return -EINVAL;
 	}
 
 	mutex_init(&info->mutex);
 
-	info->input_dev = input_allocate_device();
-	if (info->input_dev == NULL) {
-		dev_err(info->dev, "couldn't allocate input device\n");
-		ret = -ENOMEM;
-		goto err_kzalloc;
-	}
-
-	input_set_drvdata(info->input_dev, info);
-
-	info->input_dev->name = "twl6040:vibrator";
-	info->input_dev->id.version = 1;
-	info->input_dev->dev.parent = pdev->dev.parent;
-	info->input_dev->close = twl6040_vibra_close;
-	__set_bit(FF_RUMBLE, info->input_dev->ffbit);
-
-	ret = input_ff_create_memless(info->input_dev, NULL, vibra_play);
-	if (ret < 0) {
-		dev_err(info->dev, "couldn't register vibrator to FF\n");
-		goto err_ialloc;
-	}
-
-	ret = input_register_device(info->input_dev);
-	if (ret < 0) {
-		dev_err(info->dev, "couldn't register input device\n");
-		goto err_iff;
-	}
-
-	platform_set_drvdata(pdev, info);
-
-	ret = request_threaded_irq(info->irq, NULL, twl6040_vib_irq_handler, 0,
-				   "twl6040_irq_vib", info);
+	ret = devm_request_threaded_irq(&pdev->dev, info->irq, NULL,
+					twl6040_vib_irq_handler, 0,
+					"twl6040_irq_vib", info);
 	if (ret) {
 		dev_err(info->dev, "VIB IRQ request failed: %d\n", ret);
-		goto err_irq;
+		return ret;
 	}
 
 	info->supplies[0].supply = "vddvibl";
@@ -368,7 +338,7 @@ static int __devinit twl6040_vibra_probe(struct platform_device *pdev)
 				 ARRAY_SIZE(info->supplies), info->supplies);
 	if (ret) {
 		dev_err(info->dev, "couldn't get regulators %d\n", ret);
-		goto err_regulator;
+		return ret;
 	}
 
 	if (vddvibl_uV) {
@@ -377,7 +347,7 @@ static int __devinit twl6040_vibra_probe(struct platform_device *pdev)
 		if (ret) {
 			dev_err(info->dev, "failed to set VDDVIBL volt %d\n",
 				ret);
-			goto err_voltage;
+			goto err_regulator;
 		}
 	}
 
@@ -387,7 +357,7 @@ static int __devinit twl6040_vibra_probe(struct platform_device *pdev)
 		if (ret) {
 			dev_err(info->dev, "failed to set VDDVIBR volt %d\n",
 				ret);
-			goto err_voltage;
+			goto err_regulator;
 		}
 	}
 
@@ -395,26 +365,49 @@ static int __devinit twl6040_vibra_probe(struct platform_device *pdev)
 	if (info->workqueue == NULL) {
 		dev_err(info->dev, "couldn't create workqueue\n");
 		ret = -ENOMEM;
-		goto err_voltage;
+		goto err_regulator;
 	}
 	INIT_WORK(&info->play_work, vibra_play_work);
 
+	info->input_dev = input_allocate_device();
+	if (info->input_dev == NULL) {
+		dev_err(info->dev, "couldn't allocate input device\n");
+		ret = -ENOMEM;
+		goto err_wq;
+	}
+
+	input_set_drvdata(info->input_dev, info);
+
+	info->input_dev->name = "twl6040:vibrator";
+	info->input_dev->id.version = 1;
+	info->input_dev->dev.parent = pdev->dev.parent;
+	info->input_dev->close = twl6040_vibra_close;
+	__set_bit(FF_RUMBLE, info->input_dev->ffbit);
+
+	ret = input_ff_create_memless(info->input_dev, NULL, vibra_play);
+	if (ret < 0) {
+		dev_err(info->dev, "couldn't register vibrator to FF\n");
+		goto err_ialloc;
+	}
+
+	ret = input_register_device(info->input_dev);
+	if (ret < 0) {
+		dev_err(info->dev, "couldn't register input device\n");
+		goto err_iff;
+	}
+
+	platform_set_drvdata(pdev, info);
+
 	return 0;
 
-err_voltage:
-	regulator_bulk_free(ARRAY_SIZE(info->supplies), info->supplies);
-err_regulator:
-	free_irq(info->irq, info);
-err_irq:
-	input_unregister_device(info->input_dev);
-	info->input_dev = NULL;
 err_iff:
-	if (info->input_dev)
-		input_ff_destroy(info->input_dev);
+	input_ff_destroy(info->input_dev);
 err_ialloc:
 	input_free_device(info->input_dev);
-err_kzalloc:
-	kfree(info);
+err_wq:
+	destroy_workqueue(info->workqueue);
+err_regulator:
+	regulator_bulk_free(ARRAY_SIZE(info->supplies), info->supplies);
 	return ret;
 }
 
@@ -423,10 +416,8 @@ static int __devexit twl6040_vibra_remove(struct platform_device *pdev)
 	struct vibra_info *info = platform_get_drvdata(pdev);
 
 	input_unregister_device(info->input_dev);
-	free_irq(info->irq, info);
 	regulator_bulk_free(ARRAY_SIZE(info->supplies), info->supplies);
 	destroy_workqueue(info->workqueue);
-	kfree(info);
 
 	return 0;
 }
-- 
1.7.8.6

