Path: news.gmane.org!not-for-mail
From: =?UTF-8?q?Amaury=20Decr=C3=AAme?= <amaury.decreme@gmail.com>
Newsgroups: gmane.linux.documentation,gmane.linux.drivers.i2c,gmane.linux.kernel
Subject: [PATCH 1/2] I2C: SIS630: Add SiS964 support
Date: Mon,  6 Aug 2012 00:11:53 +0200
Lines: 393
Approved: news@gmane.org
Message-ID: <1344204714-16513-2-git-send-email-amaury.decreme@gmail.com>
References: <20120805140454.3e7a9606@endymion.delvare>
 <1344204714-16513-1-git-send-email-amaury.decreme@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1344204816 26383 80.91.229.3 (5 Aug 2012 22:13:36 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sun, 5 Aug 2012 22:13:36 +0000 (UTC)
Cc: amalysh@web.de, mhoffman@lightlink.com, ralf@linux-mips.org,
	manuel.lauss@googlemail.com, axel.lin@gmail.com, olof@lixom.net,
	rusty@rustcorp.com.au, linux-i2c@vger.kernel.org,
	linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
	=?UTF-8?q?Amaury=20Decr=C3=AAme?= <amaury.decreme@gmail.com>
To: khali@linux-fr.org, ben-linux@fluff.org, w.sang@pengutronix.de,
	rob@landley.net
Original-X-From: linux-doc-owner@vger.kernel.org Mon Aug 06 00:13:33 2012
Return-path: <linux-doc-owner@vger.kernel.org>
Envelope-to: lnx-linux-doc@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-doc-owner@vger.kernel.org>)
	id 1Sy94m-00005V-Vs
	for lnx-linux-doc@plane.gmane.org; Mon, 06 Aug 2012 00:13:33 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755236Ab2HEWNK convert rfc822-to-quoted-printable (ORCPT
	<rfc822;lnx-linux-doc@m.gmane.org>); Sun, 5 Aug 2012 18:13:10 -0400
Original-Received: from mail-wi0-f172.google.com ([209.85.212.172]:42366 "EHLO
	mail-wi0-f172.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755224Ab2HEWM6 (ORCPT
	<rfc822;linux-doc@vger.kernel.org>); Sun, 5 Aug 2012 18:12:58 -0400
Original-Received: by wibhm11 with SMTP id hm11so1131808wib.1
        for <multiple recipients>; Sun, 05 Aug 2012 15:12:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :mime-version:content-type:content-transfer-encoding;
        bh=cxy1fejNV8cwf3w+U7haYoRU82V0NQUGTl0koelKBWc=;
        b=VbjKNOB8lz472o582QDVfpGYoiveSFFpRHPwe6xL/YID+lpO57FBNnwJX2luhehgG9
         vkjK1bXrFMnmZOHHZq650IZP+hH/Ot+9BtMdGm7BHe0sBc6k9RgKtOAA8U0m5l1asGxv
         2t+EBVwQAxjzZXsSSpqNzSCco3azjV4oU1gg6iV20vse+qDjFozPmx3/rEHfdy1Z9YF+
         zFQCbU3fLI/bsOcPav0vbuxeUyUB64VYLnsP47/xCGujTaV/+cbHm7ys5XdpjshxeBQx
         X0HKBorrrSVxNBRbQt8QeC+ykR7Su9Q3/smhmu25SO8CSXoJLBtkjSIO3BBKxQfziTcS
         ZYSw==
Original-Received: by 10.216.116.73 with SMTP id f51mr4542294weh.50.1344204776710;
        Sun, 05 Aug 2012 15:12:56 -0700 (PDT)
Original-Received: from localhost.localdomain (val06-1-88-182-162-232.fbx.proxad.net. [88.182.162.232])
        by mx.google.com with ESMTPS id l5sm17756738wix.5.2012.08.05.15.12.54
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 05 Aug 2012 15:12:55 -0700 (PDT)
X-Mailer: git-send-email 1.7.8.6
In-Reply-To: <1344204714-16513-1-git-send-email-amaury.decreme@gmail.com>
Original-Sender: linux-doc-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-doc.vger.kernel.org>
X-Mailing-List: linux-doc@vger.kernel.org
Xref: news.gmane.org gmane.linux.documentation:6059 gmane.linux.drivers.i2c:12348 gmane.linux.kernel:1337924
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337924>

This patch add SiS964 support to i2c-sis630.

Signed-off-by: Amaury Decr=C3=AAme <amaury.decreme@gmail.com>
---
 Documentation/i2c/busses/i2c-sis630 |   17 +++-
 drivers/i2c/busses/Kconfig          |    4 +-
 drivers/i2c/busses/i2c-sis630.c     |  148 ++++++++++++++++++++++-----=
--------
 3 files changed, 107 insertions(+), 62 deletions(-)

diff --git a/Documentation/i2c/busses/i2c-sis630 b/Documentation/i2c/bu=
sses/i2c-sis630
index 0b96973..46b62e7 100644
--- a/Documentation/i2c/busses/i2c-sis630
+++ b/Documentation/i2c/busses/i2c-sis630
@@ -4,20 +4,23 @@ Supported adapters:
   * Silicon Integrated Systems Corp (SiS)
 	630 chipset (Datasheet: available at http://www.sfr-fresh.com/linux)
 	730 chipset
+	964 chipset
   * Possible other SiS chipsets ?
=20
 Author: Alexander Malysh <amalysh@web.de>
+	Amaury Decr=C3=AAme <amaury.decreme@gmail.com> - SiS964 patch
=20
 Module Parameters
 -----------------
=20
-* force =3D [1|0] Forcibly enable the SIS630. DANGEROUS!
+* force =3D [1|0] Forcibly enable the driver. DANGEROUS!
 		This can be interesting for chipsets not named
 		above to check if it works for you chipset, but DANGEROUS!
=20
-* high_clock =3D [1|0] Forcibly set Host Master Clock to 56KHz (defaul=
t,
-			what your BIOS use). DANGEROUS! This should be a bit
-			faster, but freeze some systems (i.e. my Laptop).
+* clock_sel =3D [1|0] Forcibly set Host Master Clock.
+			SiS630/730	56kHz instead of 14kHz
+			SiS964		27.78kHz instead of 55.56 kHz
+			DANGEROUS! It can freeze some systems.
=20
=20
 Description
@@ -36,6 +39,12 @@ or like this:
 00:00.0 Host bridge: Silicon Integrated Systems [SiS] 730 Host (rev 02=
)
 00:01.0 ISA bridge: Silicon Integrated Systems [SiS] 85C503/5513
=20
+or like this:
+
+00:00.0 Host bridge: Silicon Integrated Systems [SiS] 760/M760 Host (r=
ev 02)
+00:02.0 ISA bridge: Silicon Integrated Systems [SiS] SiS964 [MuTIOL Me=
dia IO]
+							LPC Controller (rev 36)
+
 in your 'lspci' output , then this driver is for your chipset.
=20
 Thank You
diff --git a/drivers/i2c/busses/Kconfig b/drivers/i2c/busses/Kconfig
index b4aaa1b..ee9ca06 100644
--- a/drivers/i2c/busses/Kconfig
+++ b/drivers/i2c/busses/Kconfig
@@ -184,11 +184,11 @@ config I2C_SIS5595
 	  will be called i2c-sis5595.
=20
 config I2C_SIS630
-	tristate "SiS 630/730"
+	tristate "SiS 630/730/964"
 	depends on PCI
 	help
 	  If you say yes to this option, support will be included for the
-	  SiS630 and SiS730 SMBus (a subset of I2C) interface.
+	  SiS630, SiS730 and SiS964 SMBus (a subset of I2C) interface.
=20
 	  This driver can also be built as a module.  If so, the module
 	  will be called i2c-sis630.
diff --git a/drivers/i2c/busses/i2c-sis630.c b/drivers/i2c/busses/i2c-s=
is630.c
index 5d6723b..c950397 100644
--- a/drivers/i2c/busses/i2c-sis630.c
+++ b/drivers/i2c/busses/i2c-sis630.c
@@ -24,7 +24,7 @@
    18.09.2002
 	Added SIS730 as supported.
    21.09.2002
-	Added high_clock module option.If this option is set
+	Added clock_sel module option.If this option is set
 	used Host Master Clock 56KHz (default 14KHz).For now we save old Host
 	Master Clock and after transaction completed restore (otherwise
 	it's confuse BIOS and hung Machine).
@@ -32,7 +32,9 @@
 	Fixed typo in sis630_access
 	Fixed logical error by restoring of Host Master Clock
    31.07.2003
-   	Added block data read/write support.
+	Added block data read/write support.
+   03.08.2012
+	Added support of SiS964 - Amaury Decr=C3=AAme <amaury.decreme@gmail.c=
om>
 */
=20
 /*
@@ -41,6 +43,18 @@
    Supports:
 	SIS 630
 	SIS 730
+	SIS 964
+
+   Notable differences between chips:
+	+------------------------+--------------------+-------------------+
+	|                        |     SIS630/730     |      SIS964       |
+	+------------------------+--------------------+-------------------+
+	| Clock                  | 14kHz/56kHz        | 55.56kHz/27.78kHz |
+	| SMBus registers offset | 0x80               | 0xE0              |
+	| SMB_CNT                | Bit 1 =3D Slave Busy | Bit 1 =3D Bus probe=
 |
+	| SMB_COUNT              | 4:0 bits           | 5:0 bits          |
+	+------------------------+--------------------+-------------------+
+	(Other differences doesn't affect the functions provided by the drive=
r)
=20
    Note: we assume there can only be one device, with one SMBus interf=
ace.
 */
@@ -55,22 +69,22 @@
 #include <linux/acpi.h>
 #include <linux/io.h>
=20
-/* SIS630 SMBus registers */
-#define SMB_STS			0x80	/* status */
-#define SMB_EN			0x81	/* status enable */
-#define SMB_CNT			0x82
-#define SMBHOST_CNT		0x83
-#define SMB_ADDR		0x84
-#define SMB_CMD			0x85
-#define SMB_PCOUNT		0x86	/* processed count */
-#define SMB_COUNT		0x87
-#define SMB_BYTE		0x88	/* ~0x8F data byte field */
-#define SMBDEV_ADDR		0x90
-#define SMB_DB0			0x91
-#define SMB_DB1			0x92
-#define SMB_SAA			0x93
-
-/* register count for request_region */
+/* SIS964 id, defined here as we are the only file using it */
+#define PCI_DEVICE_ID_SI_964	0x0964
+
+/* SIS630/730/964 SMBus registers */
+#define SMB_STS			0x00	/* status */
+#define SMB_CNT			0x02	/* control */
+#define SMBHOST_CNT		0x03	/* host control */
+#define SMB_ADDR		0x04	/* address */
+#define SMB_CMD			0x05	/* command */
+#define SMB_COUNT		0x07	/* byte count */
+#define SMB_BYTE		0x08	/* ~0x8F data byte field */
+#define SMB_SAA			0x13	/* host slave alias address */
+
+/* register count for request_region
+ * As we don't use SMB_PCOUNT, 20 is ok for SiS630 and SiS964
+ */
 #define SIS630_SMB_IOREGION	20
=20
 /* PCI address constants */
@@ -93,31 +107,33 @@
 static struct pci_driver sis630_driver;
=20
 /* insmod parameters */
-static bool high_clock;
+static bool clock_sel;
 static bool force;
-module_param(high_clock, bool, 0);
-MODULE_PARM_DESC(high_clock, "Set Host Master Clock to 56KHz (default =
14KHz).");
+module_param(clock_sel, bool, 0);
+MODULE_PARM_DESC(clock_sel,
+"Set Host Master Clock to 56kHz for SIS630/730 and to 27.78kHz for SIS=
964.");
 module_param(force, bool, 0);
-MODULE_PARM_DESC(force, "Forcibly enable the SIS630. DANGEROUS!");
+MODULE_PARM_DESC(force, "Forcibly enable the driver. DANGEROUS!");
=20
-/* acpi base address */
-static unsigned short acpi_base;
+/* SMBus base adress */
+static unsigned short smbus_base;
=20
 /* supported chips */
 static int supported[] =3D {
 	PCI_DEVICE_ID_SI_630,
 	PCI_DEVICE_ID_SI_730,
+	PCI_DEVICE_ID_SI_964,
 	0 /* terminates the list */
 };
=20
 static inline u8 sis630_read(u8 reg)
 {
-	return inb(acpi_base + reg);
+	return inb(smbus_base + reg);
 }
=20
 static inline void sis630_write(u8 reg, u8 data)
 {
-	outb(data, acpi_base + reg);
+	outb(data, smbus_base + reg);
 }
=20
 static int sis630_transaction_start(struct i2c_adapter *adap, int size=
, u8 *oldclock)
@@ -143,8 +159,7 @@ static int sis630_transaction_start(struct i2c_adap=
ter *adap, int size, u8 *oldc
=20
 	dev_dbg(&adap->dev, "saved clock 0x%02x\n", *oldclock);
=20
-	/* disable timeout interrupt , set Host Master Clock to 56KHz if requ=
ested */
-	if (high_clock)
+	if (clock_sel)
 		sis630_write(SMB_CNT, 0x20);
 	else
 		sis630_write(SMB_CNT, (*oldclock & ~0x40));
@@ -185,12 +200,14 @@ static int sis630_transaction_wait(struct i2c_ada=
pter *adap, int size)
=20
 	if (temp & 0x04) {
 		dev_err(&adap->dev, "Bus collision!\n");
-		result =3D -EIO;
-		/*
-		  TBD: Datasheet say:
-		  the software should clear this bit and restart SMBUS operation.
-		  Should we do it or user start request again?
-		*/
+		/* Datasheet:
+		 * SMBus Collision (SMBCOL_STS)
+		 * This bit is set when a SMBus Collision condition occurs and
+		 * SMBus Host loses in the bus arbitration. The software should
+		 * clear this bit and re-start SMBus operation.
+		 */
+		sis630_write(SMB_STS, temp & ~0x04);
+		return -EAGAIN;
 	}
=20
 	return result;
@@ -198,18 +215,17 @@ static int sis630_transaction_wait(struct i2c_ada=
pter *adap, int size)
=20
 static void sis630_transaction_end(struct i2c_adapter *adap, u8 oldclo=
ck)
 {
-	int temp =3D 0;
-
-	/* clear all status "sticky" bits */
-	sis630_write(SMB_STS, temp);
+	/* clear all status "sticky" bits
+	 * Datasheet:
+	 * SMBus Status (SMB_STS)
+	 * The following registers are all sticky bits and only can be
+	 * cleared by writing a one to their corresponding fields.
+	 */
+	sis630_write(SMB_STS, 0xFF);
=20
 	dev_dbg(&adap->dev, "SMB_CNT before clock restore 0x%02x\n", sis630_r=
ead(SMB_CNT));
=20
-	/*
-	 * restore old Host Master Clock if high_clock is set
-	 * and oldclock was not 56KHz
-	 */
-	if (high_clock && !(oldclock & 0x20))
+	if (clock_sel && !(oldclock & 0x20))
 		sis630_write(SMB_CNT,(sis630_read(SMB_CNT) & ~0x20));
=20
 	dev_dbg(&adap->dev, "SMB_CNT after clock restore 0x%02x\n", sis630_re=
ad(SMB_CNT));
@@ -218,12 +234,21 @@ static void sis630_transaction_end(struct i2c_ada=
pter *adap, u8 oldclock)
 static int sis630_transaction(struct i2c_adapter *adap, int size)
 {
 	int result =3D 0;
+	int timeout =3D 0;
 	u8 oldclock =3D 0;
=20
-	result =3D sis630_transaction_start(adap, size, &oldclock);
-	if (!result) {
-		result =3D sis630_transaction_wait(adap, size);
-		sis630_transaction_end(adap, oldclock);
+	/* We loop in case of collisions */
+	do {
+		result =3D sis630_transaction_start(adap, size, &oldclock);
+		if (!result) {
+			result =3D sis630_transaction_wait(adap, size);
+			sis630_transaction_end(adap, oldclock);
+		}
+	} while (result =3D=3D -EAGAIN && timeout++ < MAX_TIMEOUT);
+
+	if (timeout > MAX_TIMEOUT) {
+		dev_dbg(&adap->dev, "Too many collisions !\n");
+		return -ETIMEDOUT;
 	}
=20
 	return result;
@@ -394,6 +419,8 @@ static int __devinit sis630_setup(struct pci_dev *s=
is630_dev)
 	unsigned char b;
 	struct pci_dev *dummy =3D NULL;
 	int retval, i;
+	/* acpi base address */
+	static unsigned short acpi_base;
=20
 	/* check for supported SiS devices */
 	for (i=3D0; supported[i] > 0 ; i++) {
@@ -438,16 +465,24 @@ static int __devinit sis630_setup(struct pci_dev =
*sis630_dev)
=20
 	dev_dbg(&sis630_dev->dev, "ACPI base at 0x%04x\n", acpi_base);
=20
-	retval =3D acpi_check_region(acpi_base + SMB_STS, SIS630_SMB_IOREGION=
,
+	if (supported[i] =3D=3D PCI_DEVICE_ID_SI_964)
+		smbus_base =3D acpi_base + 0xE0;
+	else
+		smbus_base =3D acpi_base + 0x80;
+
+	dev_dbg(&sis630_dev->dev, "SMBus base at 0x%04x\n", smbus_base);
+
+	retval =3D acpi_check_region(smbus_base + SMB_STS, SIS630_SMB_IOREGIO=
N,
 				   sis630_driver.name);
 	if (retval)
 		goto exit;
=20
 	/* Everything is happy, let's grab the memory and set things up. */
-	if (!request_region(acpi_base + SMB_STS, SIS630_SMB_IOREGION,
+	if (!request_region(smbus_base + SMB_STS, SIS630_SMB_IOREGION,
 			    sis630_driver.name)) {
-		dev_err(&sis630_dev->dev, "SMBus registers 0x%04x-0x%04x already "
-			"in use!\n", acpi_base + SMB_STS, acpi_base + SMB_SAA);
+		dev_err(&sis630_dev->dev,
+			"SMBus registers 0x%04x-0x%04x already in use!\n",
+			smbus_base + SMB_STS, smbus_base + SMB_SAA);
 		retval =3D -EBUSY;
 		goto exit;
 	}
@@ -456,7 +491,7 @@ static int __devinit sis630_setup(struct pci_dev *s=
is630_dev)
=20
 exit:
 	if (retval)
-		acpi_base =3D 0;
+		smbus_base =3D 0;
 	return retval;
 }
=20
@@ -474,6 +509,7 @@ static struct i2c_adapter sis630_adapter =3D {
=20
 static DEFINE_PCI_DEVICE_TABLE(sis630_ids) =3D {
 	{ PCI_DEVICE(PCI_VENDOR_ID_SI, PCI_DEVICE_ID_SI_503) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_SI, PCI_DEVICE_ID_SI_964) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_SI, PCI_DEVICE_ID_SI_LPC) },
 	{ 0, }
 };
@@ -491,17 +527,17 @@ static int __devinit sis630_probe(struct pci_dev =
*dev, const struct pci_device_i
 	sis630_adapter.dev.parent =3D &dev->dev;
=20
 	snprintf(sis630_adapter.name, sizeof(sis630_adapter.name),
-		 "SMBus SIS630 adapter at %04x", acpi_base + SMB_STS);
+		 "SMBus SIS630 adapter at %04x", smbus_base + SMB_STS);
=20
 	return i2c_add_adapter(&sis630_adapter);
 }
=20
 static void __devexit sis630_remove(struct pci_dev *dev)
 {
-	if (acpi_base) {
+	if (smbus_base) {
 		i2c_del_adapter(&sis630_adapter);
-		release_region(acpi_base + SMB_STS, SIS630_SMB_IOREGION);
-		acpi_base =3D 0;
+		release_region(smbus_base + SMB_STS, SIS630_SMB_IOREGION);
+		smbus_base =3D 0;
 	}
 }
=20
--=20
1.7.8.6

--
To unsubscribe from this list: send the line "unsubscribe linux-doc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

