Path: news.gmane.org!not-for-mail
From: Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
Newsgroups: gmane.linux.kernel.bcache.devel,gmane.linux.kernel,gmane.linux.kernel.device-mapper.devel,gmane.linux.kernel.drbd.devel
Subject: [PATCH v5 07/12] block: Rename bio_split() -> bio_pair_split()
Date: Mon,  6 Aug 2012 15:08:36 -0700
Lines: 139
Approved: news@gmane.org
Message-ID: <1344290921-25154-8-git-send-email-koverstreet@google.com>
References: <1344290921-25154-1-git-send-email-koverstreet@google.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344291067 14982 80.91.229.3 (6 Aug 2012 22:11:07 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 6 Aug 2012 22:11:07 +0000 (UTC)
Cc: Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>, tj-DgEjT+Ai2ygdnm+yROfE0A@public.gmane.org,
	axboe-tSWWG44O7X1aa/9Udqfwiw@public.gmane.org, agk-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, neilb-l3A5Bk7waGM@public.gmane.org,
	drbd-dev-cunTk1MwBs8qoQakbn7OcQ@public.gmane.org, vgoyal-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org, mpatocka-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org,
	sage-BnTBU8nroG7k1uMJSBkQmQ@public.gmane.org, yehuda-L5o5AL9CYN0tUFlbccrkMA@public.gmane.org
To: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org, linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org,
	dm-devel-H+wXaHxf7aLQT0dZR+AlfA@public.gmane.org
Original-X-From: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org Tue Aug 07 00:11:04 2012
Return-path: <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>
Envelope-to: glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>)
	id 1SyVVv-0003N5-SY
	for glbd-linux-bcache-wOFGN7rlS/M9smdsby/KFg@public.gmane.org; Tue, 07 Aug 2012 00:11:04 +0200
Original-Received: (majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org) by vger.kernel.org via listexpand
	id S1756030Ab2HFWK4 (ORCPT <rfc822;glbd-linux-bcache@m.gmane.org>);
	Mon, 6 Aug 2012 18:10:56 -0400
Original-Received: from mail-yx0-f174.google.com ([209.85.213.174]:59775 "EHLO
	mail-yx0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756848Ab2HFWJS (ORCPT
	<rfc822;linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>);
	Mon, 6 Aug 2012 18:09:18 -0400
Original-Received: by yenl2 with SMTP id l2so3067169yen.19
        for <linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>; Mon, 06 Aug 2012 15:09:17 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references;
        bh=8iAhJNSrQMAwZGHdxj4ymHZzI7sfNHNq5LAK7S1wqDg=;
        b=JRK5ywxS709eYKTM15NM36QvN7wghdPt/ZKcYpU1AHF6A+cV8l1H4YTiwKmjO3+lOX
         RmBnIbY0CO7E36ka4X600LzMFBpxi/sg54C2K46MjRK+yikwJSsRWM6bzEt0ahJ66hr1
         ogo7O2hYQc57NK026/9BrFHCaro0va0Gb6dbu68ksOpc+TKUFsQAwFGMfQXqzUC4MjJv
         1Pho6Oq1IXitOa+3TsDakXEGZLKwIxHwOEwvNEeBHVC0oFoVbvJOEryULhFCCuMw7uLs
         Tk6UCqQ4TxR1CWrYjKrRD1+7XKp3NYuydV2AcXZfHpMSaShwjc6uR9+cYQCjwJV8a3J0
         IXJg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :x-gm-message-state;
        bh=8iAhJNSrQMAwZGHdxj4ymHZzI7sfNHNq5LAK7S1wqDg=;
        b=K54s5htfMjWYrIsvR8FbmhaFqJvbAkP51QFySW3QZZrK29sWt1oc+mGRkMSZNXvAZw
         uLEuxfM47RUezCUVizllKAoygSH0UiCIXTN64FrpmSp4BUTldKdBcA3ofTojtsX3FWBk
         tDAWuOPkOPoESN5DuVkzuAOdprmX1xVwaoIeEd9ekWX0NDayScUqC8c8+Qz1krQJKZvR
         OXJKFZWF18dgIVm0juXjmAcqcouLNhdbdsu9/gkw/qDiFJv9i7KZPImwETQ281r2CnrX
         /sUyD6XsNeAHJt027F98ZMA+YdFfMGor7iyTJMl4g6Au5pySLNB+PE82+Lf0q/u9ZzVC
         YRAw==
Original-Received: by 10.66.74.195 with SMTP id w3mr21167337pav.64.1344290956881;
        Mon, 06 Aug 2012 15:09:16 -0700 (PDT)
Original-Received: by 10.66.74.195 with SMTP id w3mr21167310pav.64.1344290956744;
        Mon, 06 Aug 2012 15:09:16 -0700 (PDT)
Original-Received: from formenos.mtv.corp.google.com (formenos.mtv.corp.google.com [172.18.110.66])
        by mx.google.com with ESMTPS id iq1sm6145082pbc.37.2012.08.06.15.09.15
        (version=TLSv1/SSLv3 cipher=OTHER);
        Mon, 06 Aug 2012 15:09:15 -0700 (PDT)
X-Mailer: git-send-email 1.7.7.3
In-Reply-To: <1344290921-25154-1-git-send-email-koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
X-Gm-Message-State: ALoCoQlDEC2oMTwQgXlxM9v4WMxUVk6Hi15Z3YflGBdqmGKHZ0CnqJ8nLRw7j7ROYxb3GQ9Sr2e6RjAKLZYUpeoVfJjUsn7EYxKWQt2ztkJH4uuS08ohmrbgFraK+Grvr78nsaBd7Q89dXnCLpK1/1rAEIbssQnU8zuHmgjI3HdbPOiS/tUokk/1un2WyUwg1wqF6Rzp1obh2RbbRNJvNQMFax4LWvO6T/0FrlX/4Zkhdo+nrE2SJho=
Original-Sender: linux-bcache-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Precedence: bulk
List-ID: <linux-bcache.vger.kernel.org>
X-Mailing-List: linux-bcache-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Xref: news.gmane.org gmane.linux.kernel.bcache.devel:668 gmane.linux.kernel:1338602 gmane.linux.kernel.device-mapper.devel:16476 gmane.linux.kernel.drbd.devel:2061
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338602>

This is prep work for introducing a more general bio_split()

Signed-off-by: Kent Overstreet <koverstreet-hpIqsD4AKlfQT0dZR+AlfA@public.gmane.org>
---
 drivers/block/drbd/drbd_req.c |    2 +-
 drivers/block/pktcdvd.c       |    2 +-
 drivers/block/rbd.c           |    3 ++-
 drivers/md/linear.c           |    2 +-
 drivers/md/raid0.c            |    6 +++---
 drivers/md/raid10.c           |    4 ++--
 fs/bio.c                      |    4 ++--
 include/linux/bio.h           |    2 +-
 8 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/drivers/block/drbd/drbd_req.c b/drivers/block/drbd/drbd_req.c
index 8e93a6a..b5cfa3b 100644
--- a/drivers/block/drbd/drbd_req.c
+++ b/drivers/block/drbd/drbd_req.c
@@ -1150,7 +1150,7 @@ void drbd_make_request(struct request_queue *q, struct bio *bio)
 		const int sps = 1 << HT_SHIFT; /* sectors per slot */
 		const int mask = sps - 1;
 		const sector_t first_sectors = sps - (sect & mask);
-		bp = bio_split(bio, first_sectors);
+		bp = bio_pair_split(bio, first_sectors);
 
 		/* we need to get a "reference count" (ap_bio_cnt)
 		 * to avoid races with the disconnect/reconnect/suspend code.
diff --git a/drivers/block/pktcdvd.c b/drivers/block/pktcdvd.c
index ae55f08..18393a1 100644
--- a/drivers/block/pktcdvd.c
+++ b/drivers/block/pktcdvd.c
@@ -2469,7 +2469,7 @@ static void pkt_make_request(struct request_queue *q, struct bio *bio)
 		if (last_zone != zone) {
 			BUG_ON(last_zone != zone + pd->settings.size);
 			first_sectors = last_zone - bio->bi_sector;
-			bp = bio_split(bio, first_sectors);
+			bp = bio_pair_split(bio, first_sectors);
 			BUG_ON(!bp);
 			pkt_make_request(q, &bp->bio1);
 			pkt_make_request(q, &bp->bio2);
diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index 8f428a8..e33c224 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -732,7 +732,8 @@ static struct bio *bio_chain_clone(struct bio **old, struct bio **next,
 
 			/* split the bio. We'll release it either in the next
 			   call, or it will have to be released outside */
-			bp = bio_split(old_chain, (len - total) / SECTOR_SIZE);
+			bp = bio_pair_split(old_chain,
+					    (len - total) / SECTOR_SIZE);
 			if (!bp)
 				goto err_out;
 
diff --git a/drivers/md/linear.c b/drivers/md/linear.c
index fa211d8..e860cb9 100644
--- a/drivers/md/linear.c
+++ b/drivers/md/linear.c
@@ -314,7 +314,7 @@ static void linear_make_request(struct mddev *mddev, struct bio *bio)
 
 		rcu_read_unlock();
 
-		bp = bio_split(bio, end_sector - bio->bi_sector);
+		bp = bio_pair_split(bio, end_sector - bio->bi_sector);
 
 		linear_make_request(mddev, &bp->bio1);
 		linear_make_request(mddev, &bp->bio2);
diff --git a/drivers/md/raid0.c b/drivers/md/raid0.c
index de63a1f..c89c8aa 100644
--- a/drivers/md/raid0.c
+++ b/drivers/md/raid0.c
@@ -516,11 +516,11 @@ static void raid0_make_request(struct mddev *mddev, struct bio *bio)
 		 * refuse to split for us, so we need to split it.
 		 */
 		if (likely(is_power_of_2(chunk_sects)))
-			bp = bio_split(bio, chunk_sects - (sector &
+			bp = bio_pair_split(bio, chunk_sects - (sector &
 							   (chunk_sects-1)));
 		else
-			bp = bio_split(bio, chunk_sects -
-				       sector_div(sector, chunk_sects));
+			bp = bio_pair_split(bio, chunk_sects -
+					    sector_div(sector, chunk_sects));
 		raid0_make_request(mddev, &bp->bio1);
 		raid0_make_request(mddev, &bp->bio2);
 		bio_pair_release(bp);
diff --git a/drivers/md/raid10.c b/drivers/md/raid10.c
index 8da6282..be75924 100644
--- a/drivers/md/raid10.c
+++ b/drivers/md/raid10.c
@@ -1063,8 +1063,8 @@ static void make_request(struct mddev *mddev, struct bio * bio)
 		/* This is a one page bio that upper layers
 		 * refuse to split for us, so we need to split it.
 		 */
-		bp = bio_split(bio,
-			       chunk_sects - (bio->bi_sector & (chunk_sects - 1)) );
+		bp = bio_pair_split(bio,
+				    chunk_sects - (bio->bi_sector & (chunk_sects - 1)) );
 
 		/* Each of these 'make_request' calls will call 'wait_barrier'.
 		 * If the first succeeds but the second blocks due to the resync
diff --git a/fs/bio.c b/fs/bio.c
index ff34311..0470376 100644
--- a/fs/bio.c
+++ b/fs/bio.c
@@ -1491,7 +1491,7 @@ static void bio_pair_end_2(struct bio *bi, int err)
 /*
  * split a bio - only worry about a bio with a single page in its iovec
  */
-struct bio_pair *bio_split(struct bio *bi, int first_sectors)
+struct bio_pair *bio_pair_split(struct bio *bi, int first_sectors)
 {
 	struct bio_pair *bp = mempool_alloc(bio_split_pool, GFP_NOIO);
 
@@ -1534,7 +1534,7 @@ struct bio_pair *bio_split(struct bio *bi, int first_sectors)
 
 	return bp;
 }
-EXPORT_SYMBOL(bio_split);
+EXPORT_SYMBOL(bio_pair_split);
 
 /**
  *      bio_sector_offset - Find hardware sector offset in bio
diff --git a/include/linux/bio.h b/include/linux/bio.h
index 484b96e..fdcc8dc 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -201,7 +201,7 @@ struct bio_pair {
 	atomic_t			cnt;
 	int				error;
 };
-extern struct bio_pair *bio_split(struct bio *bi, int first_sectors);
+extern struct bio_pair *bio_pair_split(struct bio *bi, int first_sectors);
 extern void bio_pair_release(struct bio_pair *dbio);
 
 extern struct bio_set *bioset_create(unsigned int, unsigned int);
-- 
1.7.7.3

