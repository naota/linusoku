Path: news.gmane.org!not-for-mail
From: "Pandita, Vikram" <vikram.pandita@ti.com>
Newsgroups: gmane.linux.kernel
Subject: Re: [PATCH] printk: add option to print cpu id
Date: Thu, 2 Aug 2012 16:50:08 -0700
Lines: 103
Approved: news@gmane.org
Message-ID: <CAFm5wm2yof+ePMAtueBJh+gKyih-9ohdCYFC6xLTqwjeOgWWog@mail.gmail.com>
References: <1343936764-6461-1-git-send-email-vikram.pandita@ti.com> <CAPXgP10fJj3SwDdCa=rzfjZM8TL1GsvbSwEnfomFQ+NrW2j15w@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: dough.gmane.org 1343951454 31148 80.91.229.3 (2 Aug 2012 23:50:54 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 23:50:54 +0000 (UTC)
Cc: gregkh@linuxfoundation.org, linux-kernel@vger.kernel.org,
	Mike Turquette <mturquette@linaro.org>,
	Vimarsh Zutshi <vimarsh.zutshi@gmail.com>
To: Kay Sievers <kay@vrfy.org>
Original-X-From: linux-kernel-owner@vger.kernel.org Fri Aug 03 01:50:53 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sx5AL-00026G-EA
	for glk-linux-kernel-3@plane.gmane.org; Fri, 03 Aug 2012 01:50:53 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752603Ab2HBXue (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 2 Aug 2012 19:50:34 -0400
Original-Received: from na3sys009aog118.obsmtp.com ([74.125.149.244]:39261 "EHLO
	na3sys009aog118.obsmtp.com" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1752247Ab2HBXua (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 2 Aug 2012 19:50:30 -0400
Original-Received: from mail-qa0-f52.google.com ([209.85.216.52]) (using TLSv1) by na3sys009aob118.postini.com ([74.125.148.12]) with SMTP
	ID DSNKUBsSRewSrjEjWnJ++eor9KFqsmTgsbsS@postini.com; Thu, 02 Aug 2012 16:50:30 PDT
Original-Received: by qabj34 with SMTP id j34so1851395qab.11
        for <linux-kernel@vger.kernel.org>; Thu, 02 Aug 2012 16:50:29 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type:x-gm-message-state;
        bh=C92gcUtOOnMysASTM7f1OxH/pme6TtvdLfYE5bsn/lU=;
        b=S7EmMCuJhO2rq/iuvZroQ+pEZdmoeq4ezyFMdSRSL27aaprDhiyHtowlNaUrko3S7i
         RG2DIRqO8kry6JUrjH1leAVmQ9xQuQ4NQGgCx/AsfqWMQIrR3TDYLMBsUvTTmCMkJdXE
         OVmBiLpYedqp/jzX8Dt360l4L1PnupHrCNom8Aj5fXix7ysGY3XarNeSTDW1FS3bSpXW
         VcKawrTU6+MGNNGSd9IIcLCc9wYLIiXtVgFpjFt2fSyPHTeLVWVDt8pYA3VyOp4ZrT3o
         ePSIUrOZgODlvnDdNQQz5HliVzD88Z2ZT7tbAROWH5fsCj8deAY+cZVypK7s45Ymmtn/
         9CkA==
Original-Received: by 10.229.135.146 with SMTP id n18mr11970531qct.138.1343951429034;
 Thu, 02 Aug 2012 16:50:29 -0700 (PDT)
Original-Received: by 10.229.139.3 with HTTP; Thu, 2 Aug 2012 16:50:08 -0700 (PDT)
In-Reply-To: <CAPXgP10fJj3SwDdCa=rzfjZM8TL1GsvbSwEnfomFQ+NrW2j15w@mail.gmail.com>
X-Gm-Message-State: ALoCoQnU8jpgTXLuS0k+rK/6ziy58EDZeDUMKDv6woUbQitbuLrCghCNwX5/3Sk42uWDNXw0oIxc
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337036
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337036>

Kay

On Thu, Aug 2, 2012 at 1:08 PM, Kay Sievers <kay@vrfy.org> wrote:
>
> On Thu, Aug 2, 2012 at 9:46 PM, Vikram Pandita <vikram.pandita@ti.com>
> wrote:
> > From: Vikram Pandita <vikram.pandita@ti.com>
> >
> > Introduce config option to enable CPU id reporting for printk() calls.
> >
> > Its sometimes very useful to have printk also print the CPU Identifier
> > that executed the call. This has helped to debug various SMP issues on
> > shipping
> > products.
> >
> > Known limitation is, if the system gets preempted between function call
> > and
> > actual printk, the reported cpu-id might not be accurate. But most of
> > the
> > times its seen to give a good feel of how the N cpu's in the system are
> > getting loaded.
> >
> > Signed-off-by: Vikram Pandita <vikram.pandita@ti.com>
> > Cc: Mike Turquette <mturquette@linaro.org>
> > Cc: Vimarsh Zutshi <vimarsh.zutshi@gmail.com>
> > ---
> >  kernel/printk.c   |   20 ++++++++++++++++++++
> >  lib/Kconfig.debug |   13 +++++++++++++
> >  2 files changed, 33 insertions(+)
> >
> > diff --git a/kernel/printk.c b/kernel/printk.c
> > index 6a76ab9..50feb82 100644
> > --- a/kernel/printk.c
> > +++ b/kernel/printk.c
> > @@ -855,6 +855,25 @@ static size_t print_time(u64 ts, char *buf)
> >                        (unsigned long)ts, rem_nsec / 1000);
> >  }
> >
> > +#if defined(CONFIG_PRINTK_CPUID)
> > +static bool printk_cpuid = 1;
> > +#else
> > +static bool printk_cpuid;
> > +#endif
> > +module_param_named(cpuid, printk_cpuid, bool, S_IRUGO | S_IWUSR);
> > +
> > +static size_t print_cpuid(char *buf)
> > +{
> > +
> > +       if (!printk_cpuid)
> > +               return 0;
> > +
> > +       if (!buf)
> > +               return 4;
> > +
> > +       return sprintf(buf, "[%1d] ", smp_processor_id());
> > +}
> > +
> >  static size_t print_prefix(const struct log *msg, bool syslog, char
> > *buf)
> >  {
> >         size_t len = 0;
> > @@ -874,6 +893,7 @@ static size_t print_prefix(const struct log *msg,
> > bool syslog, char *buf)
> >                 }
> >         }
> >
> > +       len += print_cpuid(buf ? buf + len : NULL);
> >         len += print_time(msg->ts_nsec, buf ? buf + len : NULL);
> >         return len;
> >  }
>
> How is that supposed to be useful?
>
> The prefix is added while exporting data from the kmsg buffer, which
> is just the CPU that *reads* the data from the buffer, not the one
> that has *written* the data it into it.

I don't think so.
I can see the backtrace of the printk() call looks like follows:

print_cpuid
 print_prefix
  msg_print_text
   console_unlock
    vprint_emit
     printk

Now this is a synchronous path, where in the buffer is getting filled
with cpuid and timer info from the printk() calling context.
So you should get the right CPU id with the trace - with the exception
that i pointed out earlier for preemption.

>
> Do I miss anything here?

This is my understanding of the printk framework.
At least the print_time and print_cpuid seems to be happening
synchronously wrt printk


>
> Thanks,
> Kay
