Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 19/49] Btrfs: call the ordered free operation without any locks held
Date: Tue,  7 Aug 2012 15:44:37 -0700
Lines: 48
Approved: news@gmane.org
Message-ID: <20120807222028.606735219@linuxfoundation.org>
References: <20120807222026.848194739@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344380148 25226 80.91.229.3 (7 Aug 2012 22:55:48 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 22:55:48 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk, Chris Mason <chris.mason@fusionio.com>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 00:55:46 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sysgi-00068g-UP
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 00:55:45 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757440Ab2HGWze (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 7 Aug 2012 18:55:34 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:61848 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1030982Ab2HGWqU (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 7 Aug 2012 18:46:20 -0400
Original-Received: by yhmm54 with SMTP id m54so165501yhm.19
        for <linux-kernel@vger.kernel.org>; Tue, 07 Aug 2012 15:46:20 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=HprbvZpyOOXEihsHGMtzvhS5Gsarnn4fNLxV3zU6vbk=;
        b=AmapZdifCvVEEk7wSnNn707g4LTe4YGmhkkElWwl9sswfQv54FGynrEQOiFUIrjhoS
         0aDOwCLyOKN4OXEVAuAor4hcIdFh/Re+H+Me8devAQ8yT4aSU0kolDIhch6Op1cv10Y4
         NShkilXh//emMRDPi99wgfsryLcETIDbR9KLB8KjfAOZX+fe9142FPVlOdMuLevEWr2M
         /tDcxMwTEKY4r4xfoLLoPMqqH3oIhplBzpNUPLbiouC+kD0RFRj9u/E8QT2jPBELiTH8
         UnAv5z3GpGplSWGoor6AuCrltHdPQFMRc7cf+A42rDKAQIXiZMjj6w04xKTP5o86mX5T
         xpvg==
Original-Received: by 10.66.76.130 with SMTP id k2mr29256501paw.19.1344379580013;
        Tue, 07 Aug 2012 15:46:20 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id vd4sm8561208pbc.41.2012.08.07.15.46.17
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 07 Aug 2012 15:46:19 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120807222026.848194739@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQmEXc5vrar6HonAp7eqGVOsIj/cZ7sHN9mIGkGSaR8b6pfNjjq8svC6dwse5kmTOGTZQ5rQ
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1339579 gmane.linux.kernel.stable:29412
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1339579>

From: Greg KH <gregkh@linuxfoundation.org>

3.0-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Chris Mason <chris.mason@fusionio.com>

commit e9fbcb42201c862fd6ab45c48ead4f47bb2dea9d upstream.

Each ordered operation has a free callback, and this was called with the
worker spinlock held.  Josef made the free callback also call iput,
which we can't do with the spinlock.

This drops the spinlock for the free operation and grabs it again before
moving through the rest of the list.  We'll circle back around to this
and find a cleaner way that doesn't bounce the lock around so much.

Signed-off-by: Chris Mason <chris.mason@fusionio.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/async-thread.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

--- a/fs/btrfs/async-thread.c
+++ b/fs/btrfs/async-thread.c
@@ -212,10 +212,17 @@ static noinline int run_ordered_completi
 
 		work->ordered_func(work);
 
-		/* now take the lock again and call the freeing code */
+		/* now take the lock again and drop our item from the list */
 		spin_lock(&workers->order_lock);
 		list_del(&work->order_list);
+		spin_unlock(&workers->order_lock);
+
+		/*
+		 * we don't want to call the ordered free functions
+		 * with the lock held though
+		 */
 		work->ordered_free(work);
+		spin_lock(&workers->order_lock);
 	}
 
 	spin_unlock(&workers->order_lock);


