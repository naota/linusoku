Path: news.gmane.org!not-for-mail
From: Arnd Bergmann <arnd@arndb.de>
Newsgroups: gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: [PATCH 01/11] ARM: topology: mark init_cpu_topology as __init
Date: Wed,  8 Aug 2012 16:47:18 +0200
Lines: 40
Approved: news@gmane.org
Message-ID: <1344437248-20560-2-git-send-email-arnd@arndb.de>
References: <1344437248-20560-1-git-send-email-arnd@arndb.de>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344437274 12577 80.91.229.3 (8 Aug 2012 14:47:54 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 14:47:54 +0000 (UTC)
Cc: arm@kernel.org, linux-kernel@vger.kernel.org,
	Arnd Bergmann <arnd@arndb.de>,
	Vincent Guittot <vincent.guittot@linaro.org>,
	Namhyung Kim <namhyung@kernel.org>,
	Peter Zijlstra <a.p.zijlstra@chello.nl>,
	Russell King <rmk+kernel@arm.linux.org.uk>
To: linux-arm-kernel@lists.infradead.org
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 16:47:54 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sz7Y7-0005ao-Jw
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 16:47:51 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758579Ab2HHOri (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 10:47:38 -0400
Original-Received: from moutng.kundenserver.de ([212.227.17.8]:53838 "EHLO
	moutng.kundenserver.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757872Ab2HHOrg (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 10:47:36 -0400
Original-Received: from klappe2.boeblingen.de.ibm.com (deibp9eh1--blueice3n2.emea.ibm.com [195.212.29.180])
	by mrelayeu.kundenserver.de (node=mrbap1) with ESMTP (Nemesis)
	id 0LlpLM-1TYSMW3irI-00Zr3k; Wed, 08 Aug 2012 16:47:33 +0200
X-Mailer: git-send-email 1.7.10
In-Reply-To: <1344437248-20560-1-git-send-email-arnd@arndb.de>
X-Provags-ID: V02:K0:AIDeXsX5DDPuzG9ikqR0noogLnxN8v/NCeyJ5+mA9h2
 lPyUpQfjEmxGt8wnLq/e9ZQ+t0eQmJwnbS20Ss75KSpzMaV8FP
 UWkYivDdAty9VDeQO5tQ5tufdXTJNDGzEO2/GVvJnoATFF7BV7
 L7iU35TlBoy3S8qXOYWJhdLd4gWWQCXxm3WgcCSyPmRCOyxj9v
 hxntzz24zTvPdmmHDlpz8yph9P9Ass6gXXpmYCvFKdTgPjH6uz
 RfVTFOBETXDgYORPNkpiw0/WyxrHKnUZvM8KVse3WDqSWYws9N
 eWZN6xCxCBBTqOq8BzR6ZvITcuBbW3Z20cHWLwlk9fPxqxjYlM
 kQHYcO13XZYPNVnaAdcrEuMUXNa4yvHN523ig3PoXqPbVSVzHx
 JrbjL5Gjk1rvsxuoZSfYRI5xTAJXLJ3a8k=
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340096 gmane.linux.ports.arm.kernel:180980
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340096>

The init_cpu_topology function can be put into the __init section
and discarded after boot, because it is only called from
smp_prepare_cpus, which is also marked __init. This was reported
by gcc after Vincent Guittot added the parse_dt_topology function
in 339ca09d7ada "ARM: 7463/1: topology: Update cpu_power according to DT
information".

Without this patch, building kzm9g_defconfig results in:

WARNING: vmlinux.o(.text+0xb5a0): Section mismatch in reference from the function init_cpu_topology() to the function .init.text:parse_dt_topology()
The function init_cpu_topology() references
the function __init parse_dt_topology().
This is often because init_cpu_topology lacks a __init
annotation or the annotation of parse_dt_topology is wrong.

Signed-off-by: Arnd Bergmann <arnd@arndb.de>
Cc: Vincent Guittot <vincent.guittot@linaro.org>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Cc: Russell King <rmk+kernel@arm.linux.org.uk>
---
 arch/arm/kernel/topology.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/arm/kernel/topology.c b/arch/arm/kernel/topology.c
index 198b084..26c12c6 100644
--- a/arch/arm/kernel/topology.c
+++ b/arch/arm/kernel/topology.c
@@ -321,7 +321,7 @@ void store_cpu_topology(unsigned int cpuid)
  * init_cpu_topology is called at boot when only one cpu is running
  * which prevent simultaneous write access to cpu_topology array
  */
-void init_cpu_topology(void)
+void __init init_cpu_topology(void)
 {
 	unsigned int cpu;
 
-- 
1.7.10

