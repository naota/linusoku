Path: news.gmane.org!not-for-mail
From: Stefano Stabellini <stefano.stabellini-mvvWK6WmYclDPfheJLI6IQ@public.gmane.org>
Newsgroups: gmane.linux.linaro.devel,gmane.comp.emulators.xen.devel,gmane.linux.kernel,gmane.linux.ports.arm.kernel
Subject: Re: [PATCH v2 10/23] xen/arm: compile and run xenbus
Date: Wed, 8 Aug 2012 18:19:08 +0100
Lines: 153
Approved: news@gmane.org
Message-ID: <alpine.DEB.2.02.1208081805520.21096@kaball.uk.xensource.com>
References: <alpine.DEB.2.02.1208061428060.4645@kaball.uk.xensource.com>
	<1344263246-28036-10-git-send-email-stefano.stabellini@eu.citrix.com>
	<20120807182157.GN15053@phenom.dumpdata.com>
	<50216228.7010407@tycho.nsa.gov>
	<alpine.DEB.2.02.1208081743430.21096@kaball.uk.xensource.com>
	<50229B70.3090507@tycho.nsa.gov>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344446402 28202 80.91.229.3 (8 Aug 2012 17:20:02 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 17:20:02 +0000 (UTC)
Cc: "xen-devel-GuqFBffKawuULHF6PoxzQEEOCMrvLtNR@public.gmane.org" <xen-devel-GuqFBffKawuULHF6PoxzQEEOCMrvLtNR@public.gmane.org>,
	"linaro-dev-cunTk1MwBs8s++Sfvej+rw@public.gmane.org" <linaro-dev-cunTk1MwBs8s++Sfvej+rw@public.gmane.org>,
	Ian Campbell <Ian.Campbell-Sxgqhf6Nn4DQT0dZR+AlfA@public.gmane.org>, "arnd-r2nGTMty4D4@public.gmane.org" <arnd-r2nGTMty4D4@public.gmane.org>,
	Konrad Rzeszutek Wilk <konrad.wilk-QHcLZuEGTsvQT0dZR+AlfA@public.gmane.org>,
	"catalin.marinas-5wv7dgnIgG8@public.gmane.org" <catalin.marinas-5wv7dgnIgG8@public.gmane.org>,
	"Tim \(Xen.org\)" <tim-LM2mM/qkH7s@public.gmane.org>,
	"linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org" <linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>,
	"linux-arm-kernel-IAPFreCvJWM7uuMidbF8XUB+6BGkLq7r@public.gmane.org"
	<linux-arm-kernel-IAPFreCvJWM7uuMidbF8XUB+6BGkLq7r@public.gmane.org>
To: Daniel De Graaf <dgdegra-+05T5uksL2qpZYMLLGbcSA@public.gmane.org>
Original-X-From: linaro-dev-bounces-cunTk1MwBs8s++Sfvej+rw@public.gmane.org Wed Aug 08 19:19:59 2012
Return-path: <linaro-dev-bounces-cunTk1MwBs8s++Sfvej+rw@public.gmane.org>
Envelope-to: glld-linaro-dev@m.gmane.org
Original-Received: from mombin.canonical.com ([91.189.95.16])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linaro-dev-bounces-cunTk1MwBs8s++Sfvej+rw@public.gmane.org>)
	id 1Sz9vE-0006Pj-2F
	for glld-linaro-dev@m.gmane.org; Wed, 08 Aug 2012 19:19:52 +0200
Original-Received: from localhost ([127.0.0.1] helo=mombin.canonical.com)
	by mombin.canonical.com with esmtp (Exim 4.71)
	(envelope-from <linaro-dev-bounces-cunTk1MwBs8s++Sfvej+rw@public.gmane.org>)
	id 1Sz9ux-0004Pf-Sy; Wed, 08 Aug 2012 17:19:35 +0000
Original-Received: from smtp.eu.citrix.com ([62.200.22.115])
	by mombin.canonical.com with esmtp (Exim 4.71)
	(envelope-from <Stefano.Stabellini-mvvWK6WmYclDPfheJLI6IQ@public.gmane.org>)
	id 1Sz9uw-0004PI-7Y
	for linaro-dev-cunTk1MwBs8s++Sfvej+rw@public.gmane.org; Wed, 08 Aug 2012 17:19:34 +0000
X-IronPort-AV: E=Sophos;i="4.77,733,1336348800"; d="scan'208";a="13915090"
Original-Received: from lonpmailmx01.citrite.net ([10.30.203.162])
	by LONPIPO01.EU.CITRIX.COM with ESMTP/TLS/RC4-MD5;
	08 Aug 2012 17:19:32 +0000
Original-Received: from kaball.uk.xensource.com (10.80.2.59) by
	LONPMAILMX01.citrite.net (10.30.203.162) with Microsoft SMTP Server id
	8.3.213.0; Wed, 8 Aug 2012 18:19:32 +0100
X-X-Sender: sstabellini-7Z66fg9igcxYtxbxJUhB2Dgeux46jI+i@public.gmane.org
In-Reply-To: <50229B70.3090507-+05T5uksL2qpZYMLLGbcSA@public.gmane.org>
User-Agent: Alpine 2.02 (DEB 1266 2009-07-14)
X-BeenThere: linaro-dev-cunTk1MwBs8s++Sfvej+rw@public.gmane.org
X-Mailman-Version: 2.1.13
Precedence: list
List-Id: Linaro Development <linaro-dev.lists.linaro.org>
List-Unsubscribe: <http://lists.linaro.org/mailman/options/linaro-dev>,
	<mailto:linaro-dev-request-cunTk1MwBs8s++Sfvej+rw@public.gmane.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-dev>
List-Post: <mailto:linaro-dev-cunTk1MwBs8s++Sfvej+rw@public.gmane.org>
List-Help: <mailto:linaro-dev-request-cunTk1MwBs8s++Sfvej+rw@public.gmane.org?subject=help>
List-Subscribe: <http://lists.linaro.org/mailman/listinfo/linaro-dev>,
	<mailto:linaro-dev-request-cunTk1MwBs8s++Sfvej+rw@public.gmane.org?subject=subscribe>
Original-Sender: linaro-dev-bounces-cunTk1MwBs8s++Sfvej+rw@public.gmane.org
Errors-To: linaro-dev-bounces-cunTk1MwBs8s++Sfvej+rw@public.gmane.org
Xref: news.gmane.org gmane.linux.linaro.devel:12856 gmane.comp.emulators.xen.devel:136829 gmane.linux.kernel:1340193 gmane.linux.ports.arm.kernel:181037
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340193>

On Wed, 8 Aug 2012, Daniel De Graaf wrote:
> On 08/08/2012 12:51 PM, Stefano Stabellini wrote:
> > On Tue, 7 Aug 2012, Daniel De Graaf wrote:
> >> On 08/07/2012 02:21 PM, Konrad Rzeszutek Wilk wrote:
> >>> On Mon, Aug 06, 2012 at 03:27:13PM +0100, Stefano Stabellini wrote:
> >>>> bind_evtchn_to_irqhandler can legitimately return 0 (irq 0): it is not
> >>>> an error.
> >>>>
> >>>> If Linux is running as an HVM domain and is running as Dom0, use
> >>>> xenstored_local_init to initialize the xenstore page and event channel.
> >>>>
> >>>> Changes in v2:
> >>>>
> >>>> - refactor xenbus_init.
> >>>
> >>> Thank you. Lets also CC our friend at NSA who has been doing some work
> >>> in that area. Daniel are you OK with this change - will it still make
> >>> PV initial domain with with the MiniOS XenBus driver?
> >>>
> >>> Thanks.
> >>
> >> That case will work, but what this will break is launching the initial domain
> >> with a Xenstore stub domain already running (see below).
> >>
> >>>>
> >>>> Signed-off-by: Stefano Stabellini <stefano.stabellini-mvvWK6WmYclDPfheJLI6IQ@public.gmane.org>
> >>>> ---
> >>>>  drivers/xen/xenbus/xenbus_comms.c |    2 +-
> >>>>  drivers/xen/xenbus/xenbus_probe.c |   62 +++++++++++++++++++++++++-----------
> >>>>  drivers/xen/xenbus/xenbus_xs.c    |    1 +
> >>>>  3 files changed, 45 insertions(+), 20 deletions(-)
> >>>>
> >>>> diff --git a/drivers/xen/xenbus/xenbus_comms.c b/drivers/xen/xenbus/xenbus_comms.c
> >>>> index 52fe7ad..c5aa55c 100644
> >>>> --- a/drivers/xen/xenbus/xenbus_comms.c
> >>>> +++ b/drivers/xen/xenbus/xenbus_comms.c
> >>>> @@ -224,7 +224,7 @@ int xb_init_comms(void)
> >>>>  		int err;
> >>>>  		err = bind_evtchn_to_irqhandler(xen_store_evtchn, wake_waiting,
> >>>>  						0, "xenbus", &xb_waitq);
> >>>> -		if (err <= 0) {
> >>>> +		if (err < 0) {
> >>>>  			printk(KERN_ERR "XENBUS request irq failed %i\n", err);
> >>>>  			return err;
> >>>>  		}
> >>>
> >>>> diff --git a/drivers/xen/xenbus/xenbus_probe.c b/drivers/xen/xenbus/xenbus_probe.c
> >>>> index b793723..a67ccc0 100644
> >>>> --- a/drivers/xen/xenbus/xenbus_probe.c
> >>>> +++ b/drivers/xen/xenbus/xenbus_probe.c
> >>>> @@ -719,37 +719,61 @@ static int __init xenstored_local_init(void)
> >>>>  	return err;
> >>>>  }
> >>>>  
> >>>> +enum xenstore_init {
> >>>> +	UNKNOWN,
> >>>> +	PV,
> >>>> +	HVM,
> >>>> +	LOCAL,
> >>>> +};
> >>>>  static int __init xenbus_init(void)
> >>>>  {
> >>>>  	int err = 0;
> >>>> +	enum xenstore_init usage = UNKNOWN;
> >>>> +	uint64_t v = 0;
> >>>>  
> >>>>  	if (!xen_domain())
> >>>>  		return -ENODEV;
> >>>>  
> >>>>  	xenbus_ring_ops_init();
> >>>>  
> >>>> -	if (xen_hvm_domain()) {
> >>>> -		uint64_t v = 0;
> >>>> -		err = hvm_get_parameter(HVM_PARAM_STORE_EVTCHN, &v);
> >>>> -		if (err)
> >>>> -			goto out_error;
> >>>> -		xen_store_evtchn = (int)v;
> >>>> -		err = hvm_get_parameter(HVM_PARAM_STORE_PFN, &v);
> >>>> -		if (err)
> >>>> -			goto out_error;
> >>>> -		xen_store_mfn = (unsigned long)v;
> >>>> -		xen_store_interface = ioremap(xen_store_mfn << PAGE_SHIFT, PAGE_SIZE);
> >>>> -	} else {
> >>>> -		xen_store_evtchn = xen_start_info->store_evtchn;
> >>>> -		xen_store_mfn = xen_start_info->store_mfn;
> >>>> -		if (xen_store_evtchn)
> >>>> -			xenstored_ready = 1;
> >>>> -		else {
> >>>> +	if (xen_pv_domain())
> >>>> +		usage = PV;
> >>>> +	if (xen_hvm_domain())
> >>>> +		usage = HVM;
> >>
> >> The above is correct for domUs, and is overridden for dom0s:
> >>
> >>>> +	if (xen_hvm_domain() && xen_initial_domain())
> >>>> +		usage = LOCAL;
> >>>> +	if (xen_pv_domain() && !xen_start_info->store_evtchn)
> >>>> +		usage = LOCAL;
> >>
> >> Instead of these checks, I think it should just be:
> >>
> >> if (!xen_start_info->store_evtchn)
> >> 	usage = LOCAL;
> >>
> >> Any domain started after xenstore will have store_evtchn set, so if you don't
> >> have this set, you are either going to be running xenstore locally, or will
> >> use the ioctl to change it later (and so should still set up everything as if
> >> it will be running locally).
> > 
> > That would be wrong for an HVM dom0 domain (at least on ARM), because
> > we don't have a start_info page at all.
> > 
> > 
> >>>> +	if (xen_pv_domain() && xen_start_info->store_evtchn)
> >>>> +		xenstored_ready = 1;
> >>
> >> This part can now just be moved unconditionally into case PV.
> > 
> > What about:
> > 
> > if (xen_pv_domain())
> >     usage = PV;
> > if (xen_hvm_domain())
> >     usage = HVM;
> > if (!xen_store_evtchn)
> >     usage = LOCAL;
> > 
> > and moving xenstored_ready in case PV, like you suggested.
> > 
> 
> That looks correct, but you'd need to split up the switch statement in
> order to populate xen_store_evtchn before that last condition, which
> ends up pretty much eliminating the usage variable.

Going back to what you wrote in the previous email, in what way this
patch breaks the case when an initial domain is started after a Xenstore
stub domain?

Assuming that we are talking about a PV initial domain on x86, the
following check

if (xen_pv_domain() && !xen_start_info->store_evtchn)
    usage = LOCAL;

will return false (because store_evtchn is set), therefore usage will
remain set to PV.
And the check:

if (xen_pv_domain() && xen_start_info->store_evtchn)
	xenstored_ready = 1;

will return true so xenstored_ready is going to be set to 1.
