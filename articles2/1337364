Path: news.gmane.org!not-for-mail
From: =?ISO-8859-15?Q?Ren=E9_B=FCrgel?= <rene.buergel-h7yWMHjYvuCzQB+pC5nmwQ@public.gmane.org>
Newsgroups: gmane.linux.usb.general,gmane.linux.kernel
Subject: Re: [PATCH 2/3]: ezusb cleanup, FX2 support, firmware downloading
 support
Date: Fri, 03 Aug 2012 17:17:17 +0200
Lines: 235
Approved: news@gmane.org
Message-ID: <501BEB7D.4090708@sohard.de>
References: <501BE8F3.6020608@sohard.de>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-15;
	format=flowed
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Trace: dough.gmane.org 1344006929 8039 80.91.229.3 (3 Aug 2012 15:15:29 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 3 Aug 2012 15:15:29 +0000 (UTC)
To: linux-usb-u79uwXL29TY76Z2rM5mHXA@public.gmane.org, linux-kernel-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Original-X-From: linux-usb-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org Fri Aug 03 17:15:30 2012
Return-path: <linux-usb-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>
Envelope-to: glug-linux-usb-wOFGN7rlS/M9smdsby/KFg@public.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-usb-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>)
	id 1SxJb7-00018q-CK
	for glug-linux-usb-wOFGN7rlS/M9smdsby/KFg@public.gmane.org; Fri, 03 Aug 2012 17:15:29 +0200
Original-Received: (majordomo-u79uwXL29TY76Z2rM5mHXA@public.gmane.org) by vger.kernel.org via listexpand
	id S1754160Ab2HCPP0 convert rfc822-to-quoted-printable (ORCPT
	<rfc822;glug-linux-usb@m.gmane.org>); Fri, 3 Aug 2012 11:15:26 -0400
Original-Received: from shmail0.sohard.de ([212.114.139.117]:56146 "EHLO
	shmail0.sohard.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754089Ab2HCPPZ (ORCPT
	<rfc822;linux-usb-u79uwXL29TY76Z2rM5mHXA@public.gmane.org>); Fri, 3 Aug 2012 11:15:25 -0400
Original-Received: from localhost (localhost [127.0.0.1])
	by shmail0.sohard.de (Postfix) with ESMTP id 24B9361E17D4;
	Fri,  3 Aug 2012 17:15:24 +0200 (CEST)
X-Virus-Scanned: amavisd-new at shmail0.sohard.de
Original-Received: from shmail0.sohard.de ([127.0.0.1])
	by localhost (shmail0.sohard.de [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id LR0a02MYIqf5; Fri,  3 Aug 2012 17:15:23 +0200 (CEST)
Original-Received: from [192.168.144.245] (FUE-RBUERGEL.fue.sohard.de [192.168.144.245])
	by shmail0.sohard.de (Postfix) with ESMTPSA id 33C2A61E17B4;
	Fri,  3 Aug 2012 17:15:23 +0200 (CEST)
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20120713 Thunderbird/14.0
In-Reply-To: <501BE8F3.6020608-h7yWMHjYvuCzQB+pC5nmwQ@public.gmane.org>
Original-Sender: linux-usb-owner-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Precedence: bulk
List-ID: <linux-usb.vger.kernel.org>
X-Mailing-List: linux-usb-u79uwXL29TY76Z2rM5mHXA@public.gmane.org
Xref: news.gmane.org gmane.linux.usb.general:68849 gmane.linux.kernel:1337364
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337364>

This Patch adds support for the newer Cypress FX2LP. It also adapts=20
three drivers currently using ezusb to the interface change. (whiteheat=
=20
and keyspan[_pda])

Signed-off-by: Ren=E9 B=FCrgel <rene.buergel-h7yWMHjYvuCzQB+pC5nmwQ@public.gmane.org>
--
diff --git a/drivers/usb/serial/ezusb.c b/drivers/usb/serial/ezusb.c
index 3048b52d..351988d 100644
--- a/drivers/usb/serial/ezusb.c
+++ b/drivers/usb/serial/ezusb.c
@@ -14,11 +14,25 @@
  #include <linux/module.h>
  #include <linux/usb.h>

-/* EZ-USB Control and Status Register.  Bit 0 controls 8051 reset */
-#define CPUCS_REG    0x7F92
+struct ezusb_fx_type {
+    /* EZ-USB Control and Status Register.  Bit 0 controls 8051 reset =
*/
+    unsigned short cpucs_reg;
+    unsigned short max_internal_adress;
+};

-/* Command for writing to internal memory */
+struct ezusb_fx_type ezusb_fx1 =3D {
+    .cpucs_reg =3D 0x7F92,
+    .max_internal_adress =3D 0x1B3F,
+};
+
+struct ezusb_fx_type ezusb_fx2 =3D {
+    .cpucs_reg =3D 0xE600,
+    .max_internal_adress =3D 0x3FFF,
+};
+
+/* Commands for writing to memory */
  #define WRITE_INT_RAM 0xA0
+#define WRITE_EXT_RAM 0xA3

  int ezusb_writememory(struct usb_device *dev, int address,
                  unsigned char *data, int length, __u8 request)
@@ -47,13 +61,24 @@ int ezusb_writememory(struct usb_device *dev, int=20
address,
  }
  EXPORT_SYMBOL_GPL(ezusb_writememory);

-int ezusb_set_reset(struct usb_device *dev, unsigned char reset_bit)
+int ezusb_set_reset(struct usb_device *dev, unsigned short cpucs_reg,
+             unsigned char reset_bit)
  {
-    int response =3D ezusb_writememory(dev, CPUCS_REG, &reset_bit, 1,=20
WRITE_INT_RAM);
+    int response =3D ezusb_writememory(dev, cpucs_reg, &reset_bit, 1,=20
WRITE_INT_RAM);
      if (response < 0)
          dev_err(&dev->dev, "%s-%d failed: %d\n",
                          __func__, reset_bit, response);
      return response;
  }
-EXPORT_SYMBOL_GPL(ezusb_set_reset);

+int ezusb_fx1_set_reset(struct usb_device *dev, unsigned char reset_bi=
t)
+{
+    return ezusb_set_reset(dev, ezusb_fx1.cpucs_reg, reset_bit);
+}
+EXPORT_SYMBOL_GPL(ezusb_fx1_set_reset);
+
+int ezusb_fx2_set_reset(struct usb_device *dev, unsigned char reset_bi=
t)
+{
+    return ezusb_set_reset(dev, ezusb_fx2.cpucs_reg, reset_bit);
+}
+EXPORT_SYMBOL_GPL(ezusb_fx2_set_reset);
diff --git a/drivers/usb/serial/keyspan.c b/drivers/usb/serial/keyspan.=
c
index f0d4f3f..32bebde 100644
--- a/drivers/usb/serial/keyspan.c
+++ b/drivers/usb/serial/keyspan.c
@@ -43,6 +43,7 @@
  #include <linux/uaccess.h>
  #include <linux/usb.h>
  #include <linux/usb/serial.h>
+#include <linux/usb/ezusb.h>
  #include "keyspan.h"

  static bool debug;
@@ -1241,7 +1242,7 @@ static int keyspan_fake_startup(struct usb_serial=
=20
*serial)
      dbg("Uploading Keyspan %s firmware.", fw_name);

          /* download the firmware image */
-    response =3D ezusb_set_reset(serial->dev, 1);
+    response =3D ezusb_fx1_set_reset(serial->dev, 1);

      record =3D (const struct ihex_binrec *)fw->data;

@@ -1260,7 +1261,7 @@ static int keyspan_fake_startup(struct usb_serial=
=20
*serial)
      release_firmware(fw);
          /* bring device out of reset. Renumeration will occur in a
             moment and the new device will bind to the real driver */
-    response =3D ezusb_set_reset(serial->dev, 0);
+    response =3D ezusb_fx1_set_reset(serial->dev, 0);

      /* we don't want this device to have a driver assigned to it. */
      return 1;
diff --git a/drivers/usb/serial/keyspan_pda.c=20
b/drivers/usb/serial/keyspan_pda.c
index 1290b6f..87c5812 100644
--- a/drivers/usb/serial/keyspan_pda.c
+++ b/drivers/usb/serial/keyspan_pda.c
@@ -30,6 +30,7 @@
  #include <linux/uaccess.h>
  #include <linux/usb.h>
  #include <linux/usb/serial.h>
+#include <linux/usb/ezusb.h>

  static bool debug;

@@ -682,7 +683,7 @@ static int keyspan_pda_fake_startup(struct=20
usb_serial *serial)
      const struct firmware *fw;

      /* download the firmware here ... */
-    response =3D ezusb_set_reset(serial->dev, 1);
+    response =3D ezusb_fx1_set_reset(serial->dev, 1);

      if (0) { ; }
  #ifdef KEYSPAN
@@ -722,7 +723,7 @@ static int keyspan_pda_fake_startup(struct=20
usb_serial *serial)
      release_firmware(fw);
      /* bring device out of reset. Renumeration will occur in a moment
         and the new device will bind to the real driver */
-    response =3D ezusb_set_reset(serial->dev, 0);
+    response =3D ezusb_fx1_set_reset(serial->dev, 0);

      /* we want this device to fail to have a driver assigned to it. *=
/
      return 1;
diff --git a/drivers/usb/serial/whiteheat.c b/drivers/usb/serial/whiteh=
eat.c
index fc72591..228eb64 100644
--- a/drivers/usb/serial/whiteheat.c
+++ b/drivers/usb/serial/whiteheat.c
@@ -32,6 +32,7 @@
  #include <linux/serial_reg.h>
  #include <linux/serial.h>
  #include <linux/usb/serial.h>
+#include <linux/usb/ezusb.h>
  #include <linux/firmware.h>
  #include <linux/ihex.h>
  #include "whiteheat.h"            /* WhiteHEAT specific commands */
@@ -213,7 +214,7 @@ static int whiteheat_firmware_download(struct=20
usb_serial *serial,
          goto out;
      }
      ret =3D 0;
-    response =3D ezusb_set_reset(serial->dev, 1);
+    response =3D ezusb_fx1_set_reset(serial->dev, 1);

      record =3D (const struct ihex_binrec *)loader_fw->data;
      while (record) {
@@ -230,7 +231,7 @@ static int whiteheat_firmware_download(struct=20
usb_serial *serial,
          record =3D ihex_next_binrec(record);
      }

-    response =3D ezusb_set_reset(serial->dev, 0);
+    response =3D ezusb_fx1_set_reset(serial->dev, 0);

      record =3D (const struct ihex_binrec *)firmware_fw->data;
      while (record && be32_to_cpu(record->addr) < 0x1b40)
@@ -250,7 +251,7 @@ static int whiteheat_firmware_download(struct=20
usb_serial *serial,
          ++record;
      }

-    response =3D ezusb_set_reset(serial->dev, 1);
+    response =3D ezusb_fx1_set_reset(serial->dev, 1);

      record =3D (const struct ihex_binrec *)firmware_fw->data;
      while (record && be32_to_cpu(record->addr) < 0x1b40) {
@@ -268,7 +269,7 @@ static int whiteheat_firmware_download(struct=20
usb_serial *serial,
          ++record;
      }
      ret =3D 0;
-    response =3D ezusb_set_reset(serial->dev, 0);
+    response =3D ezusb_fx1_set_reset(serial->dev, 0);
   out:
      release_firmware(loader_fw);
      release_firmware(firmware_fw);
diff --git a/include/linux/usb/ezusb.h b/include/linux/usb/ezusb.h
new file mode 100644
index 0000000..fc618d8
--- /dev/null
+++ b/include/linux/usb/ezusb.h
@@ -0,0 +1,16 @@
+#ifndef __EZUSB_H
+#define __EZUSB_H
+
+
+extern int ezusb_writememory(struct usb_device *dev, int address,
+                 unsigned char *data, int length, __u8 bRequest);
+
+extern int ezusb_fx1_set_reset(struct usb_device *dev, unsigned char=20
reset_bit);
+extern int ezusb_fx2_set_reset(struct usb_device *dev, unsigned char=20
reset_bit);
+
+extern int ezusb_fx1_ihex_firmware_download(struct usb_device *dev,
+                        const char *firmware_path);
+extern int ezusb_fx2_ihex_firmware_download(struct usb_device *dev,
+                        const char *firmware_path);
+
+#endif /* __EZUSB_H */
diff --git a/include/linux/usb/serial.h b/include/linux/usb/serial.h
index a101507..588861c 100644
--- a/include/linux/usb/serial.h
+++ b/include/linux/usb/serial.h
@@ -301,10 +301,6 @@ extern void usb_serial_port_softint(struct=20
usb_serial_port *port);
  extern int usb_serial_suspend(struct usb_interface *intf, pm_message_=
t=20
message);
  extern int usb_serial_resume(struct usb_interface *intf);

-extern int ezusb_writememory(struct usb_device *dev, int address,
-                 unsigned char *data, int length, __u8 bRequest);
-extern int ezusb_set_reset(struct usb_device *dev, unsigned char=20
reset_bit);
