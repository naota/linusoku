Path: news.gmane.org!not-for-mail
From: David Ahern <dsahern@gmail.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH] perf lock record: improve message when tracepoints are not enabled
Date: Thu,  9 Aug 2012 10:35:37 -0600
Lines: 87
Approved: news@gmane.org
Message-ID: <1344530137-25521-1-git-send-email-dsahern@gmail.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344530164 17298 80.91.229.3 (9 Aug 2012 16:36:04 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 9 Aug 2012 16:36:04 +0000 (UTC)
Cc: David Ahern <dsahern@gmail.com>, Ingo Molnar <mingo@kernel.org>,
	Jiri Olsa <jolsa@redhat.com>,
	Namhyung Kim <namhyung@kernel.org>,
	Frederic Weisbecker <fweisbec@gmail.com>,
	Peter Zijlstra <peterz@infradead.org>
To: acme@ghostprotocols.net, linux-kernel@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Thu Aug 09 18:36:03 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzViJ-0006w3-MG
	for glk-linux-kernel-3@plane.gmane.org; Thu, 09 Aug 2012 18:36:00 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758686Ab2HIQfx (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Thu, 9 Aug 2012 12:35:53 -0400
Original-Received: from mail-gh0-f174.google.com ([209.85.160.174]:58302 "EHLO
	mail-gh0-f174.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757926Ab2HIQfv (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 9 Aug 2012 12:35:51 -0400
Original-Received: by ghrr11 with SMTP id r11so643649ghr.19
        for <linux-kernel@vger.kernel.org>; Thu, 09 Aug 2012 09:35:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer;
        bh=5jTsTDF0cCZXjhBC9jgMvO/6bNx8ud+zRiy+GEDE/gg=;
        b=PsOoKGH0xMLIUENIqD3itH2luBEeDLh1jn/Jmkh/cMFv3LswVRhZ1EjBKD0/l7MpBj
         CFzsBv0Eo+W5Gc+WK4lIzVaam1MeWFn7GVTK7hVxgrFIKlIzLkq4reHiuGpk0bpz5UzP
         vk6oCcU7aqwNfbrzNxE5Su8mLt2652y4lf0IRJzYDe2oq5lwNT1xq04OjDshMbr8oN5j
         9R9Lh5wmApaYymE3nwOnxb+QxVHQ4bjaMno5wbanWZBT1H6ictf0XR+ZwBr0nPIM22+r
         S7SUcuvjBZKquQBjvylx0ucj2nSyoNLwqCKJK0rxe1ko4xBFuRe41EjqT5pGihPapQDR
         XMuA==
Original-Received: by 10.66.84.130 with SMTP id z2mr8824910pay.77.1344530150623;
        Thu, 09 Aug 2012 09:35:50 -0700 (PDT)
Original-Received: from sjc-daahern-8913.cisco.com (128-107-239-234.cisco.com. [128.107.239.234])
        by mx.google.com with ESMTPS id mn9sm1436762pbc.39.2012.08.09.09.35.48
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 09 Aug 2012 09:35:49 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340863
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340863>

If CONFIG options required for perf-lock are not enabled then the
corresponding tracepoints will not be enabled. Currently, the message to
the user is:
  $ perf lock record -a -- sleep 1
  invalid or unsupported event: 'lock:lock_acquire'
  Run 'perf list' for a list of valid events

Improve the message with a suggestion on which CONFIG options are needed:
  $ perf lock record -a -- sleep 1
  tracepoint lock:lock_acquire is not enabled. Are CONFIG_LOCKDEP and CONFIG_LOCK_STAT enabled?

Suggested-by: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>
Signed-off-by: David Ahern <dsahern@gmail.com>
Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>
Cc: Ingo Molnar <mingo@kernel.org>
Cc: Jiri Olsa <jolsa@redhat.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Frederic Weisbecker <fweisbec@gmail.com>
Cc: Peter Zijlstra <peterz@infradead.org>
---
 tools/perf/builtin-lock.c |   29 ++++++++++++++++++++++++-----
 1 file changed, 24 insertions(+), 5 deletions(-)

diff --git a/tools/perf/builtin-lock.c b/tools/perf/builtin-lock.c
index 3f8b955..585aae2 100644
--- a/tools/perf/builtin-lock.c
+++ b/tools/perf/builtin-lock.c
@@ -903,16 +903,19 @@ static const struct option lock_options[] = {
 	OPT_END()
 };
 
+static const char * const lock_tracepoints[] = {
+	"lock:lock_acquire",    /* CONFIG_LOCKDEP */
+	"lock:lock_acquired",   /* CONFIG_LOCKDEP, CONFIG_LOCK_STAT */
+	"lock:lock_contended",  /* CONFIG_LOCKDEP, CONFIG_LOCK_STAT */
+	"lock:lock_release",    /* CONFIG_LOCKDEP */
+};
+
 static const char *record_args[] = {
 	"record",
 	"-R",
 	"-f",
 	"-m", "1024",
 	"-c", "1",
-	"-e", "lock:lock_acquire",
-	"-e", "lock:lock_acquired",
-	"-e", "lock:lock_contended",
-	"-e", "lock:lock_release",
 };
 
 static int __cmd_record(int argc, const char **argv)
@@ -920,15 +923,31 @@ static int __cmd_record(int argc, const char **argv)
 	unsigned int rec_argc, i, j;
 	const char **rec_argv;
 
+	for (i = 0; i < ARRAY_SIZE(lock_tracepoints); i++) {
+		if (!is_valid_tracepoint(lock_tracepoints[i])) {
+				pr_err("tracepoint %s is not enabled. "
+				       "Are CONFIG_LOCKDEP and CONFIG_LOCK_STAT enabled?\n",
+				       lock_tracepoints[i]);
+				return 1;
+		}
+	}
+
 	rec_argc = ARRAY_SIZE(record_args) + argc - 1;
-	rec_argv = calloc(rec_argc + 1, sizeof(char *));
+	/* factor of 2 is for -e in front of each tracepoint */
+	rec_argc += 2 * ARRAY_SIZE(lock_tracepoints);
 
+	rec_argv = calloc(rec_argc + 1, sizeof(char *));
 	if (rec_argv == NULL)
 		return -ENOMEM;
 
 	for (i = 0; i < ARRAY_SIZE(record_args); i++)
 		rec_argv[i] = strdup(record_args[i]);
 
+	for (j = 0; j < ARRAY_SIZE(lock_tracepoints); j++) {
+		rec_argv[i++] = "-e";
+		rec_argv[i++] = strdup(lock_tracepoints[j]);
+	}
+
 	for (j = 1; j < (unsigned int)argc; j++, i++)
 		rec_argv[i] = argv[j];
 
-- 
1.7.10.1

