Path: news.gmane.org!not-for-mail
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.stable
Subject: [ 060/122] iommu/amd: Add missing spin_lock initialization
Date: Tue,  7 Aug 2012 15:25:48 -0700
Lines: 34
Approved: news@gmane.org
Message-ID: <20120807221953.708164916@linuxfoundation.org>
References: <20120807221948.220495155@linuxfoundation.org>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1344382412 8306 80.91.229.3 (7 Aug 2012 23:33:32 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 23:33:32 +0000 (UTC)
Cc: Greg KH <gregkh@linuxfoundation.org>,
	torvalds@linux-foundation.org, akpm@linux-foundation.org,
	alan@lxorguk.ukuu.org.uk, Joerg Roedel <joerg.roedel@amd.com>
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 01:33:30 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SytHD-0000aJ-5s
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 01:33:27 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932717Ab2HGXdU (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Tue, 7 Aug 2012 19:33:20 -0400
Original-Received: from mail-yw0-f46.google.com ([209.85.213.46]:51593 "EHLO
	mail-yw0-f46.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757117Ab2HGWaI (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 7 Aug 2012 18:30:08 -0400
Original-Received: by yhmm54 with SMTP id m54so153480yhm.19
        for <linux-kernel@vger.kernel.org>; Tue, 07 Aug 2012 15:30:07 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :user-agent:x-gm-message-state;
        bh=Ry5VgFzf9ALyxs01O5Jmj1Bc0T5Pv6d2lPAuvt3sPVA=;
        b=SRSCnDID8NgQ+RLAgUv0WZF8OFyjweELwEBR2/5uhNqlM4jU3GEz5mR1GTNukcdLBm
         xfFyve3G8EUwTARYurU1dPOOZXe6amGYXAeqkYMl3vFUabFLeMyyQqOvty18fbSS+wfg
         3YunT5Pzeor6B/ReuaDf8UNCzveAwo6axCgKpNpEMEMHiQVXB6O9e5jJ0uA4NG7I2nZu
         DU9rp/BHmcwyga+ag9xuunk7xMAZNDYtC4xGHD9I6Qz+9eZ9c415vGWC4zBIFtFHWLi7
         YB8YHbmHWOCZaaIu+5w7kImUoxD1soYY1Z/8W3I/yC2hCNHCuY1v+vVSszBtf6jF7Y9n
         Yu5Q==
Original-Received: by 10.66.74.37 with SMTP id q5mr20343282pav.29.1344378607166;
        Tue, 07 Aug 2012 15:30:07 -0700 (PDT)
Original-Received: from localhost (c-67-168-183-230.hsd1.wa.comcast.net. [67.168.183.230])
        by mx.google.com with ESMTPS id rs4sm8537494pbc.0.2012.08.07.15.30.05
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 07 Aug 2012 15:30:06 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.1.362.g242cab3
In-Reply-To: <20120807221948.220495155@linuxfoundation.org>
User-Agent: quilt/0.60-20.4
X-Gm-Message-State: ALoCoQnfvtl0jYrbjexvYVWn7JYjUD6eJ32Fl3kTmIVNQ8VRCjo4dG/uUg6zhpHwOJx97c2Y8p8W
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1339675 gmane.linux.kernel.stable:29500
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1339675>

From: Greg KH <gregkh@linuxfoundation.org>

3.5-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Joerg Roedel <joerg.roedel@amd.com>

commit 2c13d47a1a7ee8808796016c617aef25fd1d1925 upstream.

Add missing spin_lock initialization in
amd_iommu_bind_pasid() function and make lockdep happy
again.

Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 drivers/iommu/amd_iommu_v2.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/drivers/iommu/amd_iommu_v2.c
+++ b/drivers/iommu/amd_iommu_v2.c
@@ -681,6 +681,8 @@ int amd_iommu_bind_pasid(struct pci_dev
 
 	atomic_set(&pasid_state->count, 1);
 	init_waitqueue_head(&pasid_state->wq);
+	spin_lock_init(&pasid_state->lock);
+
 	pasid_state->task         = task;
 	pasid_state->mm           = get_task_mm(task);
 	pasid_state->device_state = dev_state;


