Path: news.gmane.org!not-for-mail
From: Michel Lespinasse <walken@google.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: [PATCH v2 7/9] rbtree: augmented rbtree test
Date: Thu,  2 Aug 2012 15:34:16 -0700
Lines: 165
Approved: news@gmane.org
Message-ID: <1343946858-8170-8-git-send-email-walken@google.com>
References: <1343946858-8170-1-git-send-email-walken@google.com>
NNTP-Posting-Host: plane.gmane.org
X-Trace: dough.gmane.org 1343946896 32714 80.91.229.3 (2 Aug 2012 22:34:56 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Thu, 2 Aug 2012 22:34:56 +0000 (UTC)
Cc: linux-mm@kvack.org,
	linux-kernel@vger.kernel.org,
	torvalds@linux-foundation.org
To: riel@redhat.com,
	peterz@infradead.org,
	daniel.santos@pobox.com,
	aarcange@redhat.com,
	dwmw2@infradead.org,
	akpm@linux-foundation.org
Original-X-From: owner-linux-mm@kvack.org Fri Aug 03 00:34:53 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1Sx3yj-0005Na-0u
	for glkm-linux-mm-2@m.gmane.org; Fri, 03 Aug 2012 00:34:49 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id 317226B0070; Thu,  2 Aug 2012 18:34:45 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id D5A026B0071; Thu,  2 Aug 2012 18:34:44 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 5D6186B0073; Thu,  2 Aug 2012 18:34:44 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx161.postini.com [74.125.245.161])
	by kanga.kvack.org (Postfix) with SMTP id 272C26B0071
	for <linux-mm@kvack.org>; Thu,  2 Aug 2012 18:34:43 -0400 (EDT)
Original-Received: from mail-yx0-f169.google.com ([209.85.213.169]) (using TLSv1) by na3sys010amx161.postini.com ([74.125.244.10]) with SMTP;
	Thu, 02 Aug 2012 22:34:43 GMT
Original-Received: by mail-yx0-f169.google.com with SMTP id r5so79023yen.14
        for <linux-mm@kvack.org>; Thu, 02 Aug 2012 15:34:42 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references;
        bh=MJd2WJrqeNj/ghOCrsnx+ZOHakd1IvT8Zy14Uyt6W+Q=;
        b=JvNJCPmAJVrm8IHLW1vlbtJouj78MQS0SPRVclFaSLk2qFkrgG/otmX083mwARCYUV
         9ybIUDvJOLVHBvGyPnr2WDTI6jYl7tTY1mbhqKNpl1q/AIC14lv28sEqiOPxpXl2ZdGT
         yzu2IBXxDDp9mWfX6ZBWjxrxVUxj74xvoY67uxdXZ0BMBlHYywQUOwIDnUJIEn+lXOYO
         j7jz1HRoQE1Nv5bpiIfqXP7QWXgf+IowngcEvAV+7K8LVt812cWkuIouhV4IxAP4MoyW
         66o+FjjAkHuARTh4ee7H/aLIs3udKT4DInBvzObYiZjgPNxxGvPOGJD2ejL9OFOtIOCF
         TRYQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=from:to:cc:subject:date:message-id:x-mailer:in-reply-to:references
         :x-gm-message-state;
        bh=MJd2WJrqeNj/ghOCrsnx+ZOHakd1IvT8Zy14Uyt6W+Q=;
        b=Km5We65QecAsLwR8HPvF5rbJntM9GmjGNIQKSxY4Q/PdG/mzae8FBvOqjp/lhVqsdI
         L9kWW1OOgDlwETj6F1ZCB75F5FmK1Vmhf3mDlLWMjH/m/fkr4QtstmJKgufPNrmCGB6M
         3+UlZJJQEgbaHWIIlbj+HCBNZpffcx+H19Id5RfNeAG4yD5GYnJm3di7BFfTidvOUEIM
         gKE+PKf5CvWnE4VdD3ihMzSFYbhT+WyqB574n4hNBf5v6Rc6dgKE1xyiekvqx2nd1cJP
         3FzMlVubSv0fOGr+kfqNIyVyQLHGOlry9/u2Cgek/bVQltWGuzvS75BHEkaqrwVdtUhi
         rwMA==
Original-Received: by 10.50.207.104 with SMTP id lv8mr6512714igc.41.1343946882076;
        Thu, 02 Aug 2012 15:34:42 -0700 (PDT)
Original-Received: by 10.50.207.104 with SMTP id lv8mr6512686igc.41.1343946881948;
        Thu, 02 Aug 2012 15:34:41 -0700 (PDT)
Original-Received: from studio.mtv.corp.google.com (studio.mtv.corp.google.com [172.18.96.163])
        by mx.google.com with ESMTPS id pp4sm16344211igb.5.2012.08.02.15.34.40
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 02 Aug 2012 15:34:41 -0700 (PDT)
X-Mailer: git-send-email 1.7.7.3
In-Reply-To: <1343946858-8170-1-git-send-email-walken@google.com>
X-Gm-Message-State: ALoCoQlzdYMEzcalcpYTPIxQ4HDSt2g0W1rMDrLrCDwvu/SyR4SfMolyWD9OfHUGhgtyrGxZ9sAN4JYSnmTzImEt9tDqiN2k5beIGKWaU9Qlxgijv2Eu2XuEKaQ66ysm8XDayImyW6xKjiQL9qnK72+Duyye8KTBIya4zelX5Lw6id5IUXyQK/J/KNQ1LcGgFfjXSXur4ZAI
X-pstn-neptune: 1/1/1.00/100
X-pstn-levels: (S:93.28671/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.0100) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <walken@google.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83512 gmane.linux.kernel:1337024
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337024>

Small test to measure the performance of augmented rbtrees.

Signed-off-by: Michel Lespinasse <walken@google.com>
---
 lib/rbtree_test.c |  103 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 files changed, 101 insertions(+), 2 deletions(-)

diff --git a/lib/rbtree_test.c b/lib/rbtree_test.c
index fd09465..66e41d4 100644
--- a/lib/rbtree_test.c
+++ b/lib/rbtree_test.c
@@ -10,6 +10,10 @@
 struct test_node {
 	struct rb_node rb;
 	u32 key;
+
+	/* following fields used for testing augmented rbtree functionality */
+	u32 val;
+	u32 augmented;
 };
 
 static struct rb_root root = RB_ROOT;
@@ -20,10 +24,11 @@ static struct rnd_state rnd;
 static void insert(struct test_node *node, struct rb_root *root)
 {
 	struct rb_node **new = &root->rb_node, *parent = NULL;
+	u32 key = node->key;
 
 	while (*new) {
 		parent = *new;
-		if (node->key < rb_entry(parent, struct test_node, rb)->key)
+		if (key < rb_entry(parent, struct test_node, rb)->key)
 			new = &parent->rb_left;
 		else
 			new = &parent->rb_right;
@@ -38,11 +43,62 @@ static inline void erase(struct test_node *node, struct rb_root *root)
 	rb_erase(&node->rb, root);
 }
 
+static inline u32 augment_recompute(struct test_node *node)
+{
+	u32 max = node->val, child_augmented;
+	if (node->rb.rb_left) {
+		child_augmented = rb_entry(node->rb.rb_left, struct test_node,
+					   rb)->augmented;
+		if (max < child_augmented)
+			max = child_augmented;
+	}
+	if (node->rb.rb_right) {
+		child_augmented = rb_entry(node->rb.rb_right, struct test_node,
+					   rb)->augmented;
+		if (max < child_augmented)
+			max = child_augmented;
+	}
+	return max;
+}
+
+static void augment_callback(struct rb_node *rb, void *unused)
+{
+	struct test_node *node = rb_entry(rb, struct test_node, rb);
+	node->augmented = augment_recompute(node);
+}
+
+static void insert_augmented(struct test_node *node, struct rb_root *root)
+{
+	struct rb_node **new = &root->rb_node, *parent = NULL;
+	u32 key = node->key;
+
+	while (*new) {
+		parent = *new;
+		if (key < rb_entry(parent, struct test_node, rb)->key)
+			new = &parent->rb_left;
+		else
+			new = &parent->rb_right;
+	}
+
+	rb_link_node(&node->rb, parent, new);
+	rb_insert_color(&node->rb, root);
+	rb_augment_insert(&node->rb, augment_callback, NULL);
+}
+
+static void erase_augmented(struct test_node *node, struct rb_root *root)
+{
+	struct rb_node *deepest = rb_augment_erase_begin(&node->rb);
+	rb_erase(&node->rb, root);
+	rb_augment_erase_end(deepest, augment_callback, NULL);
+}
+
 static void init(void)
 {
 	int i;
-	for (i = 0; i < NODES; i++)
+	for (i = 0; i < NODES; i++) {
 		nodes[i].key = prandom32(&rnd);
+		nodes[i].val = prandom32(&rnd);
+	}
 }
 
 static bool is_red(struct rb_node *rb)
@@ -81,6 +137,17 @@ static void check(int nr_nodes)
 	WARN_ON_ONCE(count != nr_nodes);
 }
 
+static void check_augmented(int nr_nodes)
+{
+	struct rb_node *rb;
+
+	check(nr_nodes);
+	for (rb = rb_first(&root); rb; rb = rb_next(rb)) {
+		struct test_node *node = rb_entry(rb, struct test_node, rb);
+		WARN_ON_ONCE(node->augmented != augment_recompute(node));
+	}
+}
+
 static int rbtree_test_init(void)
 {
 	int i, j;
@@ -119,6 +186,38 @@ static int rbtree_test_init(void)
 		check(0);
 	}
 
+	printk(KERN_ALERT "augmented rbtree testing");
+
+	init();
+
+	time1 = get_cycles();
+
+	for (i = 0; i < PERF_LOOPS; i++) {
+		for (j = 0; j < NODES; j++)
+			insert_augmented(nodes + j, &root);
+		for (j = 0; j < NODES; j++)
+			erase_augmented(nodes + j, &root);
+	}
+
+	time2 = get_cycles();
+	time = time2 - time1;
+
+	time = div_u64(time, PERF_LOOPS);
+	printk(" -> %llu cycles\n", (unsigned long long)time);
+
+	for (i = 0; i < CHECK_LOOPS; i++) {
+		init();
+		for (j = 0; j < NODES; j++) {
+			check_augmented(j);
+			insert_augmented(nodes + j, &root);
+		}
+		for (j = 0; j < NODES; j++) {
+			check_augmented(NODES - j);
+			erase_augmented(nodes + j, &root);
+		}
+		check_augmented(0);
+	}
+
 	return -EAGAIN; /* Fail will directly unload the module */
 }
 
-- 
1.7.7.3

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

