Path: news.gmane.org!not-for-mail
From: Hugh Dickins <hughd@google.com>
Newsgroups: gmane.linux.kernel.mm,gmane.linux.kernel
Subject: Re: [RFC patch] mmap: permute find_vma with find_vma_prev
Date: Mon, 6 Aug 2012 19:08:33 -0700 (PDT)
Lines: 122
Approved: news@gmane.org
Message-ID: <alpine.LSU.2.00.1208061831490.1509@eggly.anvils>
References: <CAJd=RBB2Hsqnn58idvs5azMonRhk0A6EOKZ=tTskRngGk=XCOw@mail.gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: dough.gmane.org 1344305370 13538 80.91.229.3 (7 Aug 2012 02:09:30 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 7 Aug 2012 02:09:30 +0000 (UTC)
Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>, 
    Mikulas Patocka <mpatocka@redhat.com>, Mel Gorman <mgorman@suse.de>, 
    Johannes Weiner <hannes@cmpxchg.org>, 
    Andrew Morton <akpm@linux-foundation.org>, Linux-MM <linux-mm@kvack.org>, 
    LKML <linux-kernel@vger.kernel.org>
To: Hillf Danton <dhillf@gmail.com>
Original-X-From: owner-linux-mm@kvack.org Tue Aug 07 04:09:28 2012
Return-path: <owner-linux-mm@kvack.org>
Envelope-to: glkm-linux-mm-2@m.gmane.org
Original-Received: from kanga.kvack.org ([205.233.56.17])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <owner-linux-mm@kvack.org>)
	id 1SyZEd-0002l6-6F
	for glkm-linux-mm-2@m.gmane.org; Tue, 07 Aug 2012 04:09:27 +0200
Original-Received: by kanga.kvack.org (Postfix)
	id A6BAD6B0044; Mon,  6 Aug 2012 22:09:25 -0400 (EDT)
Delivered-To: linux-mm-outgoing@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 40)
	id 7A6AA6B004D; Mon,  6 Aug 2012 22:09:25 -0400 (EDT)
X-Original-To: int-list-linux-mm@kvack.org
Delivered-To: int-list-linux-mm@kvack.org
Original-Received: by kanga.kvack.org (Postfix, from userid 63042)
	id 3A23D6B005A; Mon,  6 Aug 2012 22:09:25 -0400 (EDT)
X-Original-To: linux-mm@kvack.org
Delivered-To: linux-mm@kvack.org
Original-Received: from psmtp.com (na3sys010amx124.postini.com [74.125.245.124])
	by kanga.kvack.org (Postfix) with SMTP id 065BA6B0044
	for <linux-mm@kvack.org>; Mon,  6 Aug 2012 22:09:23 -0400 (EDT)
Original-Received: from mail-gg0-f169.google.com ([209.85.161.169]) (using TLSv1) by na3sys010amx124.postini.com ([74.125.244.10]) with SMTP;
	Tue, 07 Aug 2012 02:09:24 GMT
Original-Received: by ggnf4 with SMTP id f4so1117207ggn.14
        for <linux-mm@kvack.org>; Mon, 06 Aug 2012 19:09:23 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:x-x-sender:to:cc:subject:in-reply-to:message-id
         :references:user-agent:mime-version:content-type;
        bh=h2RBgi/djk71kzx2psbeHcCBYAYb8IILqajcqNJuzN8=;
        b=dx9LX3vYVWtS+/LKUhqsKhxJERJtQSgpbqG05czHcHFXByTAvaxthO0i7DIvDyTuoD
         Lxc9tHDWcrzshGtm5Iw8j8PUtx0Ke9Ny7knmnx3m64ExBa3j8OQo5WpMGVmwWtzXOffQ
         zEq6Yl7UAYZyXZo00Wv2qceWifqoiRBN5Dul7WkABATok5HgZf0UpXTbwhNn9voE3wSc
         4rQkzDUQGv6WA+8SQxInyaLGAS3s4VVd4IKkvxdkEURNkQdHzt4uP+vQF18/3hjRPAJJ
         tfgggrIviXJFYGUv3qMQYSKsV2lbDVBZeHwMLyD9yNfCtcplCN847Fxouok/AYuQ+f6c
         wPBQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=date:from:x-x-sender:to:cc:subject:in-reply-to:message-id
         :references:user-agent:mime-version:content-type:x-gm-message-state;
        bh=h2RBgi/djk71kzx2psbeHcCBYAYb8IILqajcqNJuzN8=;
        b=a/2ox0UvZ8VwiqmhodwNvjJzlphEspZmAyllc8NOlJMu651eNFt+EKMUCsPba3mK+w
         ii8+/uNdPYMw8g5N+ik5ms+syxxmAZsZ5pWSd2OlHwWrWX2Pv32OIBxePF6wV09riXqy
         U3H8JWa0VF+Ye3Vixha3/dez2EI8E6zMtcglvVDO++hJNerdboPuBwrFFYPWlxl7GLRd
         svYjK7mnaE+2zz1ioF2f4x31hbWFXD6Lr2ewlAi24LKkgbTgSJ0r/iDZ8pgpDlGgOSk4
         d9GcVGAxt5fs2DrwI2Qaru2GUs6c9fdam/764RxyJVU+cdBCgXw3aFSJmYXDxMyOzeUB
         uJmA==
Original-Received: by 10.50.56.236 with SMTP id d12mr7017801igq.66.1344305362557;
        Mon, 06 Aug 2012 19:09:22 -0700 (PDT)
Original-Received: by 10.50.56.236 with SMTP id d12mr7017787igq.66.1344305362425;
        Mon, 06 Aug 2012 19:09:22 -0700 (PDT)
Original-Received: from [2620:0:1000:fd2e:224:d7ff:fee2:b75c] ([2620:0:1000:fd2e:224:d7ff:fee2:b75c])
        by mx.google.com with ESMTPS id 10sm10091734igf.11.2012.08.06.19.09.21
        (version=TLSv1/SSLv3 cipher=OTHER);
        Mon, 06 Aug 2012 19:09:21 -0700 (PDT)
X-X-Sender: hugh@eggly.anvils
In-Reply-To: <CAJd=RBB2Hsqnn58idvs5azMonRhk0A6EOKZ=tTskRngGk=XCOw@mail.gmail.com>
User-Agent: Alpine 2.00 (LSU 1167 2008-08-23)
X-Gm-Message-State: ALoCoQl8PznDNMn530j5ysnry8P/bsXe4OCPqOlqDMu8CqeHdV8laceX0Hoe83c2gnpdsYa25xc4MXToaK3MnT7p9uj5Oo//2O8Xpj+80AU2UNXWMawSQsUhTpGktbjKK3f/P1E6HBHSlHoEc1V7vXaWvbNLHtC75SXWWtiWHxb8M9tZ3NxdTzlQCag53VpcyQJBjygHYcXZ
X-pstn-neptune: 0/0/0.00/0
X-pstn-levels: (S:99.90000/99.90000 CV:99.9000 FC:95.5390 LC:95.5390 R:95.9108 P:95.9108 M:97.0282 C:98.6951 )
X-pstn-dkim: 1 skipped:not-enabled
X-pstn-settings: 3 (1.0000:0.0100) s cv GT3 gt2 gt1 r p m c 
X-pstn-addresses: from <hughd@google.com> [db-null] 
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.2
Original-Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
Xref: news.gmane.org gmane.linux.kernel.mm:83748 gmane.linux.kernel:1338682
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1338682>

On Mon, 6 Aug 2012, Hillf Danton wrote:

> Both find_vma and find_vma_prev have code for walking rb tree, and we can
> walk less.
> 
> To cut the walk in find_vma_prev off, find_vma is changed to take care of
> vm_prev while walking rb tree, and we end up wrapping find_vma_prev with
> find_vma.

No thank you.

Please take a look at what uses find_vma_prev() and what uses find_vma()
nowadays - since Linus added vma->vm_prev, and Kosaki-san and Mikulas
Patocka rewrote find_vma_prev() to use find_vma().

Almost nothing uses find_vma_prev(): parisc (stack grows upwards) and
ia64 (register backing store grows upwards) have particular need for it
(when they want to know the vm_prev of top of memory).  madvise and tile
are still using it, but I expect should just be converted to find_vma().

And rarely is its prev search actually required.  Whereas there are lots
of users of find_vma(), who want it to be as quick as possible: it should
not be burdened with almost-never-needed extras.

When he has a moment, Kosaki-san intends to remove find_vma_prev()
altogether, replacing it by find_last_vma() for parisc and ia64.

> 
> btw, what happened to LKML?

I don't know what you're referring to: what happened to LKML?

Hugh

> 
> Signed-off-by: Hillf Danton <dhillf@gmail.com>
> ---
> 
> --- a/mm/mmap.c	Fri Aug  3 07:38:10 2012
> +++ b/mm/mmap.c	Mon Aug  6 20:10:18 2012
> @@ -1602,11 +1602,18 @@ get_unmapped_area(struct file *file, uns
> 
>  EXPORT_SYMBOL(get_unmapped_area);
> 
> -/* Look up the first VMA which satisfies  addr < vm_end,  NULL if none. */
> -struct vm_area_struct *find_vma(struct mm_struct *mm, unsigned long addr)
> +/*
> + * Look up the first VMA which satisfies  addr < vm_end,  NULL if none.
> + * Also return a pointer to the previous VMA.
> + */
> +struct vm_area_struct *
> +find_vma_prev(struct mm_struct *mm, unsigned long addr,
> +			struct vm_area_struct **pprev)
>  {
>  	struct vm_area_struct *vma = NULL;
> 
> +	*pprev = NULL; /* Should be removed with WARN_ON_ONCE(!mm) */
> +
>  	if (WARN_ON_ONCE(!mm))		/* Remove this in linux-3.6 */
>  		return NULL;
> 
> @@ -1630,39 +1637,29 @@ struct vm_area_struct *find_vma(struct m
>  				if (vma_tmp->vm_start <= addr)
>  					break;
>  				rb_node = rb_node->rb_left;
> -			} else
> +			} else {
>  				rb_node = rb_node->rb_right;
> +				*pprev = vma_tmp;
> +			}
>  		}
> -		if (vma)
> +		if (vma) {
>  			mm->mmap_cache = vma;
> +			/* remove false positive produced while walking rb tree */
> +			*pprev = vma->vm_prev;
> +		}
> +	} else {
> +		*pprev = vma->vm_prev;
>  	}
>  	return vma;
>  }
> 
> -EXPORT_SYMBOL(find_vma);
> -
> -/*
> - * Same as find_vma, but also return a pointer to the previous VMA in *pprev.
> - */
> -struct vm_area_struct *
> -find_vma_prev(struct mm_struct *mm, unsigned long addr,
> -			struct vm_area_struct **pprev)
> +struct vm_area_struct *find_vma(struct mm_struct *mm, unsigned long addr)
>  {
> -	struct vm_area_struct *vma;
> +	struct vm_area_struct *prev;
> 
> -	vma = find_vma(mm, addr);
> -	if (vma) {
> -		*pprev = vma->vm_prev;
> -	} else {
> -		struct rb_node *rb_node = mm->mm_rb.rb_node;
> -		*pprev = NULL;
> -		while (rb_node) {
> -			*pprev = rb_entry(rb_node, struct vm_area_struct, vm_rb);
> -			rb_node = rb_node->rb_right;
> -		}
> -	}
> -	return vma;
> +	return find_vma_prev(mm, addr, &prev);
>  }
> +EXPORT_SYMBOL(find_vma);
> 
>  /*
>   * Verify that the stack growth is acceptable and
> --

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>

