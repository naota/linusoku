Path: news.gmane.org!not-for-mail
From: "Rafael J. Wysocki" <rjw@sisk.pl>
Newsgroups: gmane.linux.kernel,gmane.linux.kernel.pci
Subject: Re: [BUGFIX 3/4] PCI/PM: Fix config reg access for D3cold and bridge suspending
Date: Sat, 4 Aug 2012 23:44:54 +0200
Lines: 59
Approved: news@gmane.org
Message-ID: <201208042344.54426.rjw@sisk.pl>
References: <Pine.LNX.4.44L0.1208031042580.1520-100000@iolanthe.rowland.org> <201208042337.46394.rjw@sisk.pl>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: Text/Plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344116354 26425 80.91.229.3 (4 Aug 2012 21:39:14 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Sat, 4 Aug 2012 21:39:14 +0000 (UTC)
Cc: Huang Ying <ying.huang@intel.com>,
	Bjorn Helgaas <bhelgaas@google.com>,
	linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	linux-pm@vger.kernel.org
To: Alan Stern <stern@rowland.harvard.edu>
Original-X-From: linux-kernel-owner@vger.kernel.org Sat Aug 04 23:39:14 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1Sxm41-0007aJ-9o
	for glk-linux-kernel-3@plane.gmane.org; Sat, 04 Aug 2012 23:39:13 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754136Ab2HDVjG (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Sat, 4 Aug 2012 17:39:06 -0400
Original-Received: from ogre.sisk.pl ([193.178.161.156]:42192 "EHLO ogre.sisk.pl"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753453Ab2HDVjD (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Sat, 4 Aug 2012 17:39:03 -0400
Original-Received: from localhost (localhost.localdomain [127.0.0.1])
	by ogre.sisk.pl (Postfix) with ESMTP id 2960E1DB7EA;
	Sat,  4 Aug 2012 23:29:46 +0200 (CEST)
Original-Received: from ogre.sisk.pl ([127.0.0.1])
 by localhost (ogre.sisk.pl [127.0.0.1]) (amavisd-new, port 10024) with ESMTP
 id 18994-09; Sat,  4 Aug 2012 23:29:36 +0200 (CEST)
Original-Received: from ferrari.rjw.lan (62-121-64-87.home.aster.pl [62.121.64.87])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by ogre.sisk.pl (Postfix) with ESMTP id 319371DB667;
	Sat,  4 Aug 2012 23:29:36 +0200 (CEST)
User-Agent: KMail/1.13.6 (Linux/3.5.0+; KDE/4.6.0; x86_64; ; )
In-Reply-To: <201208042337.46394.rjw@sisk.pl>
X-Virus-Scanned: amavisd-new at ogre.sisk.pl using MkS_Vir for Linux
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1337750 gmane.linux.kernel.pci:16899
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1337750>

On Saturday, August 04, 2012, Rafael J. Wysocki wrote:
> On Friday, August 03, 2012, Alan Stern wrote:
> > On Fri, 3 Aug 2012, Huang Ying wrote:
> > 
> > > This patch fixes the following bug:
> > > 
> > > http://marc.info/?l=linux-pci&m=134338059022620&w=2
> > > 
> > > Where lspci does not work properly if a device and the corresponding
> > > parent bridge (such as PCIe port) is suspended.  This is because the
> > > device configuration space registers will be not accessible if the
> > > corresponding parent bridge is suspended or the device is put into
> > > D3cold state.
> > > 
> > > To solve the issue, the bridge/PCIe port connected to the device is
> > > put into active state before read/write configuration space registers.
> > > If the device is in D3cold state, it will be put into active state
> > > too.
> > > 
> > > To avoid resume/suspend PCIe port for each configuration register
> > > read/write, a small delay is added before the PCIe port to go
> > > suspended.
> > 
> > 
> > > +static void
> > > +pci_config_pm_runtime_put(struct pci_dev *pdev)
> > > +{
> > > +	struct device *dev = &pdev->dev;
> > > +	struct device *parent = dev->parent;
> > > +
> > > +	pm_runtime_put(dev);
> > > +	if (parent)
> > > +		pm_runtime_put(parent);
> > > +}
> > 
> > This is just the sort of thing Rafael and I have been talking about.  
> > Why do an asynchronous put, going to all the trouble of using the 
> > workqueue, if the idle routine is just going to call 
> > pm_schedule_suspend()?
> 
> If that's PCI, it will call pm_runtime_suspend().  That probably _should_ be
> pm_schedule_suspend(), but it isn't at the moment.
> 
> > Why not call pm_runtime_put_sync() instead?
> 
> I guess because the caller doesn't care whether or not the devices will be
> suspended immediately and we seem to have agreed already that the added
> workqueue overhead is minimal.
> 
> If the _idle() routine were to call pm_schedule_suspend(), though, I'd
> agree that the overhead would be absolutely unnecessary.

Sorry, I should have had a closer look at pcie_port_runtime_idle() before
replying.

You're right, pm_runtime_put_sync() should be used for the parent.

Thanks,
Rafael
