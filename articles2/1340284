Path: news.gmane.org!not-for-mail
From: Peter Zijlstra <peterz@infradead.org>
Newsgroups: gmane.linux.kernel
Subject: Re: rcu stalls seen with numasched_v2 patches applied.
Date: Wed, 08 Aug 2012 21:58:58 +0200
Lines: 51
Approved: news@gmane.org
Message-ID: <1344455938.16728.13.camel@laptop>
References: <20120807123305.GA7137@linux.vnet.ibm.com>
	 <1344347568.27828.122.camel@twins>
	 <20120807171859.GB3850@linux.vnet.ibm.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1344455964 8786 80.91.229.3 (8 Aug 2012 19:59:24 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 8 Aug 2012 19:59:24 +0000 (UTC)
Cc: john stultz <johnstul@us.ibm.com>,
	"Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
	LKML <linux-kernel@vger.kernel.org>,
	Oleg Nesterov <oleg@redhat.com>
To: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Original-X-From: linux-kernel-owner@vger.kernel.org Wed Aug 08 21:59:24 2012
Return-path: <linux-kernel-owner@vger.kernel.org>
Envelope-to: glk-linux-kernel-3@plane.gmane.org
Original-Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <linux-kernel-owner@vger.kernel.org>)
	id 1SzCPb-0002ZO-0X
	for glk-linux-kernel-3@plane.gmane.org; Wed, 08 Aug 2012 21:59:23 +0200
Original-Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759179Ab2HHT7Q (ORCPT <rfc822;glk-linux-kernel-3@m.gmane.org>);
	Wed, 8 Aug 2012 15:59:16 -0400
Original-Received: from merlin.infradead.org ([205.233.59.134]:54679 "EHLO
	merlin.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752328Ab2HHT7N (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 8 Aug 2012 15:59:13 -0400
Original-Received: from canuck.infradead.org ([2001:4978:20e::1])
	by merlin.infradead.org with esmtps (Exim 4.76 #1 (Red Hat Linux))
	id 1SzCPQ-0005hD-Tq
	for linux-kernel@vger.kernel.org; Wed, 08 Aug 2012 19:59:13 +0000
Original-Received: from dhcp-089-099-019-018.chello.nl ([89.99.19.18] helo=dyad.programming.kicks-ass.net)
	by canuck.infradead.org with esmtpsa (Exim 4.76 #1 (Red Hat Linux))
	id 1SzCPP-00027E-EQ
	for linux-kernel@vger.kernel.org; Wed, 08 Aug 2012 19:59:11 +0000
Original-Received: by dyad.programming.kicks-ass.net (Postfix, from userid 65534)
	id F23F450FA; Wed,  8 Aug 2012 22:11:17 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	dyad.programming.kicks-ass.net
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED
	autolearn=unavailable version=3.3.1
Original-Received: from [IPv6:::1] (localhost [127.0.0.1])
	by dyad.programming.kicks-ass.net (Postfix) with ESMTP id 12AEE7A9E9;
	Wed,  8 Aug 2012 22:11:07 +0200 (CEST)
In-Reply-To: <20120807171859.GB3850@linux.vnet.ibm.com>
X-Mailer: Evolution 2.32.2 
Original-Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
Xref: news.gmane.org gmane.linux.kernel:1340284
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/1340284>

On Tue, 2012-08-07 at 22:49 +0530, Srikar Dronamraju wrote:
> Are you referring to this the commit 158e1645e (trim task_work: get rid of hlist)

No, to something like the below..

> I am also able to reproduce this on another 8 node machine too.

Ship me one ;-)

> Just to update, I had to revert commit: b9403130a5  sched/cleanups: Add
> load balance cpumask pointer to 'struct lb_env' so that your patches
> apply cleanly. (I dont think this should have caused any problem.. but)

Yeah, I've got a rebase on top of that.. just wanted fold this
page::last_nid thing into the page::flags before posting again.

---
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1539,6 +1539,7 @@ struct task_struct {
 #ifdef CONFIG_SMP
 	u64 node_stamp;			/* migration stamp  */
 	unsigned long numa_contrib;
+	struct callback_head numa_work;
 #endif /* CONFIG_SMP  */
 #endif /* CONFIG_NUMA */
 	struct rcu_head rcu;
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -816,7 +816,7 @@ void task_numa_work(struct callback_head
 	struct task_struct *t, *p = current;
 	int node = p->node_last;
 
-	WARN_ON_ONCE(p != container_of(work, struct task_struct, rcu));
+	WARN_ON_ONCE(p != container_of(work, struct task_struct, numa_work));
 
 	/*
 	 * Who cares about NUMA placement when they're dying.
@@ -891,8 +891,8 @@ void task_tick_numa(struct rq *rq, struc
 			 * yet and exit_task_work() is called before
 			 * exit_notify().
 			 */
-			init_task_work(&curr->rcu, task_numa_work);
-			task_work_add(curr, &curr->rcu, true);
+			init_task_work(&curr->numa_work, task_numa_work);
+			task_work_add(curr, &curr->numa_work, true);
 		}
 		curr->node_last = node;
 	}


